{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":0},{"_id":"source/uploads/fmod-voice-change/add-api.png","path":"uploads/fmod-voice-change/add-api.png","modified":0,"renderable":0},{"_id":"source/uploads/fmod-voice-change/modify-gradle.png","path":"uploads/fmod-voice-change/modify-gradle.png","modified":0,"renderable":0},{"_id":"source/uploads/fmod-voice-change/fmod-download.png","path":"uploads/fmod-voice-change/fmod-download.png","modified":0,"renderable":0},{"_id":"source/uploads/fmod-voice-change/page.png","path":"uploads/fmod-voice-change/page.png","modified":0,"renderable":0},{"_id":"source/uploads/git-operation-probem/img_git_new_repository.jpg","path":"uploads/git-operation-probem/img_git_new_repository.jpg","modified":0,"renderable":0},{"_id":"source/uploads/github-person-blog-create/new_repository.jpg","path":"uploads/github-person-blog-create/new_repository.jpg","modified":0,"renderable":0},{"_id":"source/uploads/fmod-voice-change/new-project2.png","path":"uploads/fmod-voice-change/new-project2.png","modified":0,"renderable":0},{"_id":"source/uploads/github-person-blog-create/repository_settings.jpg","path":"uploads/github-person-blog-create/repository_settings.jpg","modified":0,"renderable":0},{"_id":"source/uploads/githubpages-binding-aliyun/peiz0.png","path":"uploads/githubpages-binding-aliyun/peiz0.png","modified":0,"renderable":0},{"_id":"source/uploads/githubpages-binding-aliyun/ping.png","path":"uploads/githubpages-binding-aliyun/ping.png","modified":0,"renderable":0},{"_id":"source/uploads/githubpages-binding-aliyun/peiz.png","path":"uploads/githubpages-binding-aliyun/peiz.png","modified":0,"renderable":0},{"_id":"source/uploads/githubpages-binding-aliyun/setting.png","path":"uploads/githubpages-binding-aliyun/setting.png","modified":0,"renderable":0},{"_id":"source/uploads/fmod-voice-change/new-project.png","path":"uploads/fmod-voice-change/new-project.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","path":"lib/jquery_lazyload/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/uploads/github-person-blog-create/jekyll_demos.jpg","path":"uploads/github-person-blog-create/jekyll_demos.jpg","modified":0,"renderable":0},{"_id":"source/uploads/androidtv/androidtv_rs_list.gif","path":"uploads/androidtv/androidtv_rs_list.gif","modified":0,"renderable":0},{"_id":"source/uploads/rxbus/rxbus.gif","path":"uploads/rxbus/rxbus.gif","modified":0,"renderable":0},{"_id":"source/uploads/androidtv/andridtv_gh_list.gif","path":"uploads/androidtv/andridtv_gh_list.gif","modified":0,"renderable":0},{"_id":"source/uploads/androidtv/andridtv_rg_list.gif","path":"uploads/androidtv/andridtv_rg_list.gif","modified":0,"renderable":0},{"_id":"source/uploads/androidtv/androidtv_gn_list.gif","path":"uploads/androidtv/androidtv_gn_list.gif","modified":0,"renderable":0},{"_id":"source/uploads/androidtv/androidtv_o.gif","path":"uploads/androidtv/androidtv_o.gif","modified":0,"renderable":0},{"_id":"source/uploads/public_library/root_gradle.png","path":"uploads/public_library/root_gradle.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/module_gradle.png","path":"uploads/public_library/module_gradle.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/github_1.png","path":"uploads/public_library/github_1.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/github_2.png","path":"uploads/public_library/github_2.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/github_3.png","path":"uploads/public_library/github_3.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/github_4.png","path":"uploads/public_library/github_4.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/jitpack_1.png","path":"uploads/public_library/jitpack_1.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/jitpack_3.png","path":"uploads/public_library/jitpack_3.png","modified":0,"renderable":0},{"_id":"source/uploads/public_library/jitpack_2.png","path":"uploads/public_library/jitpack_2.png","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.gitignore","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1544061707294},{"_id":"source/404.html","hash":"0905e426789258bc7e8b93e6c485cef4dbf3a0c6","modified":1540264444000},{"_id":"source/CNAME","hash":"4cbdb6e04182982bcd0d9cfe54c7ac4492689f3a","modified":1543972910753},{"_id":"source/README.md","hash":"bb03275692be8b7cea38139d44ca1459ebdacca2","modified":1543972899861},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1543911758248},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1543911758249},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1543911758253},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1543911758251},{"_id":"themes/next/.all-contributorsrc","hash":"0ca0200bb5cba4cd157f2cb74703c4cb4c29cda5","modified":1543911758245},{"_id":"themes/next/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1543911758275},{"_id":"themes/next/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1543911758277},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1543911758273},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1543911758285},{"_id":"themes/next/gitignore副本.txt","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1543911758271},{"_id":"themes/next/_config.yml","hash":"bd87751b7ec3d290c56bf5e7585f9843f69c82f2","modified":1569813249965},{"_id":"themes/next/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1543911758336},{"_id":"themes/next/README.md","hash":"5cc097c71ba6e99aaf4b19955a4df3951879d8c9","modified":1543911758279},{"_id":"themes/next/bower.json","hash":"edbe7db4e39af86bb3163df5f0ab87cc0b420479","modified":1543911758284},{"_id":"themes/next/package.json","hash":"0a6b9a8d9ccf52a5941ce4ec28d5b490adbd9970","modified":1543911758591},{"_id":"source/_posts/2018-09-15-Github-Person-Blog-Create.md","hash":"01c577cbc9c0c27b5dddfe5cd1feba084f19ce9f","modified":1543991312769},{"_id":"source/_posts/2018-11-30-String-About.md","hash":"aa3096b9f63d0674e959785b44e02f6a2d6dc54f","modified":1543993315894},{"_id":"source/_posts/2018-12-04-Jekyll-To-Hexo.md","hash":"227385c638d13cd1999e7d9a04b0d2af44b0972d","modified":1544489677400},{"_id":"source/_posts/2018-12-11-RxBus.md","hash":"6008df6501c85cabd90a91bd7a50af0c758dd1b4","modified":1545095181591},{"_id":"source/_posts/2018-12-13-AndroidTV.md","hash":"2e2d1c5b408f342dd2451fae852578c7109575ad","modified":1545039840280},{"_id":"source/_posts/2018-09-17-Git-Operations-Problem.md","hash":"5fb796b69c63821964f5b5f436afb052adcdb342","modified":1543994449634},{"_id":"source/about/index.md","hash":"c4990750d6eb970531062c36a86f5da26df063d6","modified":1543973656152},{"_id":"source/categories/index.md","hash":"420642f46fbe6ac3987b2163017eccc5ef12bba9","modified":1543980392639},{"_id":"source/tags/index.md","hash":"fd0aefb0de8eb5482e5c80aafccf93b38ef56b6a","modified":1543980434554},{"_id":"source/_posts/_2018-9-17-GitHub-Release.md","hash":"c32266834eace419a4057d515748103ad1490aa9","modified":1543985699053},{"_id":"source/uploads/avatar.png","hash":"38d380f09da23aa4a66b129623a08c72264e9ed0","modified":1544086797501},{"_id":"source/_posts/2018-09-15-GitHubPages-Binding-Aliyun.md","hash":"c6dabb8e7402c90e9cb5d294e6c0131924830cfd","modified":1543991954409},{"_id":"source/_posts/2018-12-10-Fmod-Voice-Change.md","hash":"1b23025ae1282f3ebdea2ab66889f0696810cd27","modified":1544494755608},{"_id":"themes/next/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1543911758602},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1543911759008},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1543911759012},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1543911759010},{"_id":"themes/next/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1543911758295},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1543911758288},{"_id":"themes/next/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1543911758298},{"_id":"themes/next/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1543911758303},{"_id":"themes/next/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1543911758293},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"f2fd611a84dd6f9ed5395b63e187e29e9effbcd3","modified":1543911758300},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1543911758291},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1543911758307},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1543911758341},{"_id":"themes/next/languages/fr.yml","hash":"ebcd1f188af8c3f5ef1f0923e794c839fbfae2d4","modified":1543911758345},{"_id":"themes/next/languages/de.yml","hash":"641e49587d41bb87e4d5932dc3d975754ded7953","modified":1543911758339},{"_id":"themes/next/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1543911758343},{"_id":"themes/next/docs/MATH.md","hash":"0540cd9c961b07931af9f38a83bc9a0f90cd5291","modified":1543911758305},{"_id":"themes/next/languages/id.yml","hash":"9709a4dbacc56a1571a96b139b872128d6959e90","modified":1543911758347},{"_id":"themes/next/languages/nl.yml","hash":"060efc260c1c529469d739d97dcee79683e8f411","modified":1543911758359},{"_id":"themes/next/languages/ko.yml","hash":"33e065ceb21590b8eb32430a69e76c2f057eb758","modified":1543911758357},{"_id":"themes/next/languages/ja.yml","hash":"82afb0a5637ad67065fa5b2624fa56c7c240c3c6","modified":1543911758352},{"_id":"themes/next/languages/pt.yml","hash":"53e2a52b9d5dc20c04080acd4f5b954e8699780f","modified":1543911758364},{"_id":"themes/next/languages/pt-BR.yml","hash":"dc09e290e908744ca28e093dbdd859ca2a20290e","modified":1543911758362},{"_id":"themes/next/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1543911758366},{"_id":"themes/next/languages/it.yml","hash":"4e3adeb10c0fa627935d69ae1783ce0894f5dee5","modified":1543911758350},{"_id":"themes/next/languages/zh-CN.yml","hash":"069f15da910d6f9756be448167c07ea5aa5dc346","modified":1543911758372},{"_id":"themes/next/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1543911758375},{"_id":"themes/next/languages/vi.yml","hash":"e2b3b18359ab41d58c64b2002acfedd60a7505a4","modified":1543911758370},{"_id":"themes/next/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1543911758368},{"_id":"themes/next/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1543911758580},{"_id":"themes/next/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1543911758576},{"_id":"themes/next/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1543911758377},{"_id":"themes/next/layout/index.swig","hash":"bdcc9f57adef49706b16b107791cacecbc23c1dc","modified":1543911758582},{"_id":"themes/next/layout/post.swig","hash":"0554f42f90f4a524666c2b520be30b689c1d6a87","modified":1543911758586},{"_id":"themes/next/layout/schedule.swig","hash":"e79f43df0e9a6cf48bbf00882de48c5a58080247","modified":1543911758589},{"_id":"themes/next/layout/page.swig","hash":"22a4ce71857a871b6fd474ec28fc80f736c45185","modified":1543911758584},{"_id":"themes/next/layout/_layout.swig","hash":"34476a17f8c12c9f094a6cc59208c5af6dd89202","modified":1543911758387},{"_id":"themes/next/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1543911758591},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1543911758605},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758884},{"_id":"source/uploads/fmod-voice-change/add-api.png","hash":"148f62ee8383894893a0cad8dce79e7b72e64381","modified":1544425114092},{"_id":"source/uploads/fmod-voice-change/modify-gradle.png","hash":"cb14c8fc15b1f7f285b9ce08d08ad06beeec11bd","modified":1544425764268},{"_id":"source/uploads/fmod-voice-change/fmod-download.png","hash":"b82ffb8a940cc6a39bf61bfad274d3ebb253a3cd","modified":1544421866403},{"_id":"source/uploads/fmod-voice-change/page.png","hash":"62442c99b3a9ee6cf5f4ad1d58b0e05a9b4b24fd","modified":1544426225238},{"_id":"source/uploads/git-operation-probem/img_git_new_repository.jpg","hash":"2fffbdf954d3860ceb422d70dfceff7984b7af03","modified":1537843580113},{"_id":"source/uploads/github-person-blog-create/new_repository.jpg","hash":"7d9c423e3ba0e3a544f161a12c916b3bf990b7d7","modified":1537148103166},{"_id":"source/uploads/fmod-voice-change/new-project2.png","hash":"b435acacc0373d4be33c9bb8f145fbdd899f3e83","modified":1544424037645},{"_id":"source/uploads/github-person-blog-create/repository_settings.jpg","hash":"aaf23ada3a1531e7e3fe4adf0c5c5809a179d570","modified":1537148411372},{"_id":"source/uploads/githubpages-binding-aliyun/peiz0.png","hash":"0466e883c1ff96d83162799a74c7d153cfd38545","modified":1543549835561},{"_id":"source/uploads/githubpages-binding-aliyun/ping.png","hash":"b130a2dcb021c98036679dc8ef8c9284c8f9fcac","modified":1543549574166},{"_id":"source/uploads/githubpages-binding-aliyun/peiz.png","hash":"6955997ab52c8b08b94f2ea90df2a31fc873f51c","modified":1543549744133},{"_id":"source/uploads/githubpages-binding-aliyun/setting.png","hash":"413beedd968c7b6f177a9f6a60f61518459047bb","modified":1543550015098},{"_id":"themes/next/scripts/helpers/engine.js","hash":"cdb6152582313268d970ffeef99b4a8a7850f034","modified":1543911758598},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"3db90c52bc8af57c6fa4a9dbdc524e1ecdc8b7b1","modified":1543911758600},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1543911758610},{"_id":"themes/next/scripts/tags/button.js","hash":"510f3711a9c9d3e2a844250647d90e8359e7d130","modified":1543911758608},{"_id":"themes/next/scripts/tags/exturl.js","hash":"e9dab948e6327b22b4fc0c66cf97f6600a444dd5","modified":1543911758611},{"_id":"themes/next/scripts/tags/full-image.js","hash":"ef2c2985a3edb9f69740740c5bc42d4b692c86fd","modified":1543911758614},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"aface11629970a5c4ee38aaa15550d2caee59560","modified":1543911758616},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1543911758618},{"_id":"themes/next/scripts/tags/label.js","hash":"bb502616bfabe85de5de903074ec6afe627f8413","modified":1543911758621},{"_id":"themes/next/scripts/tags/note.js","hash":"bd3310a5890bded1bda9ba3ad6f98ee44ecb101a","modified":1543911758623},{"_id":"themes/next/scripts/tags/tabs.js","hash":"2d257e26718d4011509fd6f530d2ea37e50e3e66","modified":1543911758625},{"_id":"source/uploads/fmod-voice-change/new-project.png","hash":"3549a037e063643aa275e6628107475f8adb8bf7","modified":1544423718845},{"_id":"source/uploads/rxbus/rxbus-send.png","hash":"f1e504573562cfdaf280bc2f64cf3ec99fd4a8e3","modified":1544511208999},{"_id":"themes/next/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1543911758882},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1543911758889},{"_id":"source/uploads/rxbus/rxbus-accept.png","hash":"ab4bacd06bdca9bf0503cd532f556351c8f338f2","modified":1544511223947},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1543911758891},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1543911758895},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1543911758900},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1543911758887},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1543911758899},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1543911758896},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1543911758910},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1543911758912},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1543911758914},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1543911758916},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1543911758918},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1543911758920},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1543911758903},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1543911758923},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1543911758908},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1543911758905},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1543911758925},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1543911758323},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1543911758325},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"6ea741f380dc3e90661d12db7e115a94b77643a4","modified":1543911758320},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"7214fcd1b5830e62b3ac0836ad2d1b0fa391ae12","modified":1543911758327},{"_id":"themes/next/docs/zh-CN/README.md","hash":"0e6652be1b6bca87479f2601ff89105def200b4c","modified":1543911758331},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1543911758333},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1543911758318},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1543911758316},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1543911758311},{"_id":"themes/next/docs/ru/README.md","hash":"caaad965f9d54f82382c934f44a507d37a863fa3","modified":1543911758313},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1543911758313},{"_id":"themes/next/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1543911758381},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1543911758383},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"27fb1d81151b9b79683e488579df19eee7e654d6","modified":1543911758457},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1543911758385},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"f544e21883d249d5a341c684c97bd25831008f07","modified":1543911758459},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1543911758462},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1543911758312},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758803},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758805},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758811},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"69d73e86d8f7d2deafc436df84713a1425704d8a","modified":1543911758329},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758873},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758879},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1543911758511},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"53861f78a1fb52e96a43cf6909e1530dcf6cbff8","modified":1543911758534},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"c62c37474c8de78cf34e54c6219b503ec28d9815","modified":1543911758531},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1543911758548},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"20704846a29d72b24f6e446a6c22b10cf50a624b","modified":1543911758536},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1543911758553},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1543911758546},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"3bdd2ec6c75a2c3f62c55e7e43162c4802722edb","modified":1543911758551},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"a174d4a0c9188f9c4a2652f49bfa7a60ad0a83e3","modified":1543911758557},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1543911758409},{"_id":"themes/next/layout/_partials/footer.swig","hash":"6d56acdcdc12ebca9c1d90f8a2b52ad17aafca6e","modified":1543911758414},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"92ffb13ef1f6075f77f41b43ca04aaa0e9e65c10","modified":1543911758475},{"_id":"themes/next/layout/_partials/comments.swig","hash":"f1e25d53d76f898d280d0422d037e646d11f342b","modified":1543911758411},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1543911758555},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1543911758433},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1543911758435},{"_id":"themes/next/layout/_partials/post-copyright.swig","hash":"55de88525c05af6053524c78ef4b42b46c3bfb6d","modified":1543911758437},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"32b1f74e6a144133ce3a60cd06dbef50d8286919","modified":1543911758396},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1543911758398},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"7a9b687087793bf5e218cbc345214f927fa5601a","modified":1543911758407},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758469},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543911758470},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"899b5a5e80e2bf441b7c40f24123f26a5097b8de","modified":1543911758595},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"5e71e8737929f38a6d8b015f97154cdb01ea1137","modified":1569812095718},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1543911758802},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1543911758807},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6e7d0af24b4d52d168a4eb0fb29bffa69621395","modified":1543911758403},{"_id":"themes/next/layout/_macro/post.swig","hash":"d69a008c98529a4b0de8e30a391749e2e468be94","modified":1543911758401},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1543911758872},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"8d6cf29f63c90364f4d3c336f7c9bb794b4c46cc","modified":1543911758870},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"d1deb849e697cfb6258b8ab7bfb47e219210ccd9","modified":1543911758809},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"72927abd51d3a607a6ba32cf882390792b34e834","modified":1543911758876},{"_id":"themes/next/source/js/src/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1543911758929},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1543911758931},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"c7e2a588b679d46379124141bb2f30bc2f3210e2","modified":1543911758934},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e27a1034b0cd9821bab094565e9aa9bb80c6fa3e","modified":1543911758878},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1543911758937},{"_id":"themes/next/source/js/src/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1543911758935},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1543911758947},{"_id":"themes/next/source/js/src/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1543911758942},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1543911758949},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1543982065952},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1543982065962},{"_id":"themes/next/source/js/src/utils.js","hash":"406145e8eda9f0cec4f7a09b7c1f9247aa24e46e","modified":1543911758951},{"_id":"themes/next/source/js/src/motion.js","hash":"4c7f94e499743f4cc958f6cd1260a93d765d3051","modified":1543911758939},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1543911758956},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1543911758958},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1543911758960},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1543911758963},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1543911758965},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1543911759000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1543982065952},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"9f18b8b9a35b301805387f18cafd982404a3c1f9","modified":1543982065962},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1543911759003},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1543911759005},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1543982341495},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1543982341494},{"_id":"themes/next/source/lib/pace/README.md","hash":"ddcd2834d847f37b8ee77858bd03d31f70f55fb7","modified":1543982341492},{"_id":"themes/next/source/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1543982341490},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1543982341501},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1543982341500},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1543982341498},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1543982341508},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1543982341503},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1543982341507},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1543982341505},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1543982341516},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1543982341512},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1543982341514},{"_id":"themes/next/source/lib/jquery_lazyload/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1543982150569},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1543982341510},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1543982150572},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1543982150567},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"4d80ae239b597668665451a9515fba20543ac673","modified":1543982150570},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1543911758467},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"580e9d9c4d8783ee6200d845ae16c98979bf1ea3","modified":1543911758465},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1543911758473},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1543982150573},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1543982341518},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"be4904c682934bdda4a406f4c24f487b34047c09","modified":1543911758405},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1543982150576},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1543911758539},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1543911758541},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"6fec78f40913a284b38ffe48fc8c78e23efa8e27","modified":1543911758544},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1543911758515},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2440f1e66cb8e39cc2bacfd783fb6fe904a628e9","modified":1543911758517},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"b98e8acb635beeaa929dab41c8cc5e519b9609b0","modified":1543911758525},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"080a3a30c65e9e97782b8c56a866ba4204247cc8","modified":1543911758520},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c49a3b10b2f2f64a7ac41fa3d436fd2c8d31cca8","modified":1543911758527},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1543911758574},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1543911758522},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1543911758567},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1543911758570},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1543911758569},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"d05e70a416963023ee1978e4168d58bcfd956ed3","modified":1543911758529},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1543911758427},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1543911758417},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"19050627bc23b0b2c2e65e7248c0f88468eb8ea5","modified":1543911758425},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"0b8349710caf9691741a457aa746add35245048e","modified":1543911758419},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1543911758441},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1543911758443},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"09109a5c5a301e7cc5e3c7aec32b0164739fc7d4","modified":1543911758421},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1543911758447},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1543911758445},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1543911758431},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1543911758449},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1543911758428},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1543911758451},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1543911758454},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1543911758986},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1543911758480},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1543911758484},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1543911758489},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1543911758491},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1543911758482},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1543911758495},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"1ce5fa218a44cf6e620583e9013e0b674dd6a989","modified":1543911758488},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"39928f358dd13d9fc1a4641800e57be157ecd815","modified":1543911758500},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"d461dfe853e5317f62e8551f9d8338c66a9935e7","modified":1543911758498},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1543911758504},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1543911758507},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"8ab040fccba41675bc835973515530af8a51f8bd","modified":1543911758493},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1543911758509},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"bd8382d4f12df207ed52f75f6e5fb06527970167","modified":1543911758502},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"ef791a725ee7292a5207a629dbcae16022a6d068","modified":1543911758394},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1543911758392},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"ab775f23ad475efb25376b5aad752ae8b56cfd8c","modified":1543911758790},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1543911758788},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1543911758794},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"df72d012a51e0c705aa14c68cffd689a312f7250","modified":1543911758785},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1543911758840},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1543911758842},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"fbb6be577529c750ef7c872fe7abdc7ab0faf0f8","modified":1543911758782},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1543911758792},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1543911758846},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1543911758848},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"60179df0e5c9f7c2e9fda046040536c5d8b02f65","modified":1543911758797},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1543911758854},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"8e67eea73e9346f51ef26ecb35f67a1f5f672dcd","modified":1543911758815},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1543911758860},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4ed12bf17eeb7cd4f22dd01fdd486cda68d169a8","modified":1543911758844},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9f125e2b46ac4542c600fa514b66daf2f58f4c07","modified":1543911758862},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"11fcaaf7524445a194801e1048ea2fb84b316414","modified":1543911758858},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1543911758867},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1543911758817},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1543911758822},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"ccf5a4761cb0ce451b5e994cfabf8769248a45c1","modified":1543911758855},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1543911758828},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1543911758865},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"2ccb9bdc309b7c1ef183a3dbb0a4621bec54a328","modified":1543911758831},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa6c00fdaf8f0ca3b690a5a556671745fb67e2c9","modified":1543911758826},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"e185d1bb2f5805db2bddaf9b0ed1e689f95bcd13","modified":1543911758945},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"1fd0650a8e5bff2c7146c810b04b3b88ee1f670e","modified":1543911758633},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"a80782a6eb3b40da2e14251da49069aff3115d8a","modified":1543911758824},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1543911758641},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1543911758642},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1543911758635},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1543911758820},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1543911758638},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1543911758666},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1543911758742},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1543911758993},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1543911758991},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1543982065962},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1543911758968},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1543982065962},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1543911758970},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1543911758973},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1543911758565},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6e076b5e183eedf425a445e99851f938789c3194","modified":1543911758562},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1543911758980},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1543911758982},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1543911758998},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1543911758851},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1543911758834},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1543911758837},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1543911758647},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1543911758646},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1543911758647},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1543911758648},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1ec3102ee8f5b8cc0877da1fd109d37470401e7b","modified":1543911758648},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1543911758649},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1543911758650},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1543911758648},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"5a3b94bf978a9259d0a3a66bdfa8d7aa336a7934","modified":1543911758650},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"cdd55b143453b0ca8bfabc9843abe9b4f85fb516","modified":1543911758652},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1543911758651},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1543911758654},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1543911758657},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1543911758661},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1543911758659},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1543911758747},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"ef588bc56eaa5b84296e28f4c2c36d9ea8b3b8c3","modified":1543911758663},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1543911758749},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1543911758751},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1543911758745},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1543911758753},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"f1640253cbbf71d0c04c34c25bd61045894f98bc","modified":1543911758760},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"41858f2dfd34a57d0a2016b1bce08efb61943b7a","modified":1543911758725},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1543911758756},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1543911758727},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1543911758758},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1543911758729},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1543911758732},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"00a504620c454287111dc0ace64c989e1ff97f54","modified":1543911758723},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1543911758740},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1543911758669},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3241c9ae85ca11b6c4e125ac471aa4342ba1ce9c","modified":1543911758672},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"fc94dd09b4245143b452d6cf2fc4c12134d99d6d","modified":1543911758674},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1543911758677},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1543911758738},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1543911758692},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1543911758695},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1543911758735},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1543911758697},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1543911758702},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1543911758706},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1543911758708},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1543911758699},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1543911758713},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1543911758733},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ff50a32ae6fea5fcdf2939dc9b01e1eb76cc73f0","modified":1543911758704},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"539fc0880b2e035e8316d5d4b423703195c1b7ba","modified":1543911758711},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5c3141d58970a0614896b6a62fd7a8a8caf4e401","modified":1543911758715},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1543911758765},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"a01484e350ad5fc9b1fdfbfafb2ddd9687ad4d20","modified":1543911758767},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1543911758769},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1543911758771},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1543911758775},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1543911758777},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"2e36956c5f8802f703c7ce3893d16323a0e09d4c","modified":1543911758717},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1543911758762},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"84d844ff296fb7c8c8bec8296cdf82af40299fdb","modified":1543911758780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1543911758720},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1543911758773},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1543911758977},{"_id":"source/uploads/github-person-blog-create/jekyll_demos.jpg","hash":"0ac7bba3fae4787082b6439df1ff698bd0a43ddb","modified":1537149954297},{"_id":"source/uploads/androidtv/andridtv_gh_list.png","hash":"6d385a8b609abfe8793967cd1d1fc3efb7259498","modified":1544780339962},{"_id":"source/uploads/androidtv/androidtv_rs_list.png","hash":"0f2abc04bb9ef8abc62a3b0b833c5bbaf5f5f0cf","modified":1545038563735},{"_id":"source/uploads/androidtv/andridtv_rg_list.png","hash":"1c81e7bb4bcbd5ad728dbbfda19fd52d8a49d959","modified":1545015927891},{"_id":"source/uploads/androidtv/androidtv_gn_list.png","hash":"f66e77649c489983231f533eb60991e468f6a6f2","modified":1545027575008},{"_id":"source/uploads/androidtv/androidtv_rs_list.gif","hash":"1b12dddaadbf68b463bd0b17d2609dcf90da4512","modified":1545039802627},{"_id":"source/_posts/2018-12-18-AndroidTV.md","hash":"7aa865329952dfcb192ac0550ff7e0e23780189f","modified":1545123081728},{"_id":"source/uploads/rxbus/rxbus.gif","hash":"601253b6edb6a98b3f2eacb42a35e9eed3d17a38","modified":1545094940030},{"_id":"source/uploads/androidtv/andridtv_rg_list.gif","hash":"60191da092dd54000ea2395bd874b6d9d7c42761","modified":1545111713793},{"_id":"source/uploads/androidtv/andridtv_gh_list.gif","hash":"8db27eab2a9693f9a4de67008e5d936420b07632","modified":1545111533813},{"_id":"source/uploads/androidtv/androidtv_o.gif","hash":"b41adffe4fd7a14c27740819940a93be74adf56c","modified":1545118287741},{"_id":"source/uploads/androidtv/androidtv_gn_list.gif","hash":"bb90a6e8231f9a6c69688dcedb8c481abe7e5555","modified":1545111824966},{"_id":"public/search.xml","hash":"2e1c6120d1d8ef438eb9cfd34a5e908de0221f9c","modified":1569815412360},{"_id":"public/404.html","hash":"c2837fa336ccc8b01453ebb63416f4ff7479c91b","modified":1569815413389},{"_id":"public/categories/index.html","hash":"74e4f4aa3d32e8e07ea8892e6d66fbd220fe0a83","modified":1569815413389},{"_id":"public/about/index.html","hash":"75eae569b5445655be6483ab25c3de2ade9fc603","modified":1569815413384},{"_id":"public/2018/12/04/2018-12-04-Jekyll-To-Hexo/index.html","hash":"6cb248a261c0224451c55f6a50dd204b58c2ee6e","modified":1569815413390},{"_id":"public/2018/11/30/2018-11-30-String-About/index.html","hash":"852ce86ab333cd0b28fb0da4e7c8e215d7a1dabf","modified":1569815413390},{"_id":"public/2018/12/11/2018-12-11-RxBus/index.html","hash":"29388b848fef3238a9dd87f844256b504d23be1a","modified":1569815413797},{"_id":"public/2018/09/17/2018-09-17-Git-Operations-Problem/index.html","hash":"cb6fface9bb747911961b6ef59a23ea50c818198","modified":1569815413390},{"_id":"public/2018/09/15/2018-09-15-GitHubPages-Binding-Aliyun/index.html","hash":"eac21ecb63cda79a1fd884c349f3b376384c9b52","modified":1569815413390},{"_id":"public/2018/09/15/2018-09-15-Github-Person-Blog-Create/index.html","hash":"07b9d38ec6b75d45a66ee395877d1ca2b1ccac27","modified":1569815413390},{"_id":"public/archives/index.html","hash":"427d4e9aae2a0c4b17d4bed85f495c1c1600eb78","modified":1569815413390},{"_id":"public/2018/12/10/2018-12-10-Fmod-Voice-Change/index.html","hash":"9c9d81b9f9849a2da7d11746572ca28300f4dea0","modified":1569815413390},{"_id":"public/2018/12/18/2018-12-18-AndroidTV/index.html","hash":"46d71865f5253e0eee8f32c06f437acc95c23077","modified":1569815413390},{"_id":"public/tags/index.html","hash":"f953685a435fc75f22cb81013ccfa5ad95a266a9","modified":1569815413384},{"_id":"public/archives/2018/index.html","hash":"4870d68332c061a458da8f4df58a4fe0778058a3","modified":1569815413797},{"_id":"public/archives/2018/12/index.html","hash":"20b457d52918514a8d2c44e58d392a44387b93d4","modified":1569815413797},{"_id":"public/categories/misc/index.html","hash":"0c56bf0394afe87039dd1c237075a2a930d375d6","modified":1569815413390},{"_id":"public/archives/2018/09/index.html","hash":"21096c852aa11c2f26862980edc121afc3f1418f","modified":1569815413796},{"_id":"public/archives/2018/11/index.html","hash":"2d0e2dcca9f67081cb9fd286366a45e0e2688d6f","modified":1569815413796},{"_id":"public/categories/android/index.html","hash":"ed235cecb1f9594662286d58253e44ef97689cba","modified":1569815413390},{"_id":"public/categories/git/index.html","hash":"9387144171165fc20b47e99a7dd92603f2902f73","modified":1569815413390},{"_id":"public/index.html","hash":"ad6f0d9f34416db8aa252e6cc9db7b25789e4e7b","modified":1569815413796},{"_id":"public/tags/string/index.html","hash":"85dddbc1063690c90ed61f9ee42de3b4ff4d7c49","modified":1569815413797},{"_id":"public/tags/jekyll/index.html","hash":"0d745fe22ff7f2c34ee839e8bd7f482edc25193f","modified":1569815413797},{"_id":"public/tags/github/index.html","hash":"8f60d17fc23968fb4e207fb9e65654abbc764650","modified":1569815413797},{"_id":"public/tags/hexo/index.html","hash":"570d9ae543cc4270774d3b18133377d8419704a4","modified":1569815413797},{"_id":"public/tags/rx/index.html","hash":"a5cd31470eb20cb196ac117a02264884d84d144a","modified":1569815413797},{"_id":"public/tags/git/index.html","hash":"313d060df639aa5565a289ae08200aae4433c58b","modified":1569815413797},{"_id":"public/tags/audio/index.html","hash":"33e881399a2d88d66d06ebdcdf7e648865dc5490","modified":1569815413797},{"_id":"public/tags/AndroidTV/index.html","hash":"d88ac6378a53d538083f247b0a863d266b8e60a2","modified":1569815413797},{"_id":"public/uploads/rxbus/rxbus.gif","hash":"601253b6edb6a98b3f2eacb42a35e9eed3d17a38","modified":1545123456680},{"_id":"public/uploads/androidtv/androidtv_rs_list.gif","hash":"1b12dddaadbf68b463bd0b17d2609dcf90da4512","modified":1545123456680},{"_id":"public/uploads/androidtv/andridtv_rg_list.gif","hash":"60191da092dd54000ea2395bd874b6d9d7c42761","modified":1545123456851},{"_id":"public/uploads/androidtv/andridtv_gh_list.gif","hash":"8db27eab2a9693f9a4de67008e5d936420b07632","modified":1545123457242},{"_id":"public/uploads/androidtv/androidtv_o.gif","hash":"b41adffe4fd7a14c27740819940a93be74adf56c","modified":1545123457242},{"_id":"public/uploads/androidtv/androidtv_gn_list.gif","hash":"bb90a6e8231f9a6c69688dcedb8c481abe7e5555","modified":1545123457261},{"_id":"source/_posts/2018-12-19-Public-Library.md","hash":"f0d9b881e99766e11f5da911cee03d47055e77b9","modified":1545375878909},{"_id":"source/uploads/public_library/github_1.png","hash":"948cf42eddd58a700b34422b77a0ffee99c88293","modified":1545204910158},{"_id":"source/uploads/public_library/github_2.png","hash":"b3291fb060b8698b739a8641ca9946cd7f65f637","modified":1545204949920},{"_id":"source/uploads/public_library/github_3.png","hash":"97402c78bbd9f641117f1f01aaec97cefe6c442b","modified":1545205117900},{"_id":"source/uploads/public_library/github_4.png","hash":"3c2c0d3d015a48cbc67a144620a3a42679b69479","modified":1545205292332},{"_id":"source/uploads/public_library/jitpack_1.png","hash":"3b3bdf0c8a2db8fc3f6967536ae43eb5ba292dd7","modified":1545205679335},{"_id":"source/uploads/public_library/jitpack_2.png","hash":"ea9a6cdb7552c974fbb6b23186e58b70b645fe02","modified":1545205782397},{"_id":"source/uploads/public_library/jitpack_3.png","hash":"96415f2dc96b938359a505e8c5f49e7a78b6a32e","modified":1545206163209},{"_id":"source/uploads/public_library/module_gradle.png","hash":"c6fd3ea2fb7fca5833bb5d60ea76201083e8089c","modified":1545204237366},{"_id":"source/uploads/public_library/root_gradle.png","hash":"85f386d9cda68825bb68632496285b3a59baa2dc","modified":1545203858376},{"_id":"public/2018/12/19/2018-12-19-Public-Library/index.html","hash":"99568071a1f58d14c9655b4832942515f17a16bc","modified":1569815413389},{"_id":"public/uploads/public_library/root_gradle.png","hash":"85f386d9cda68825bb68632496285b3a59baa2dc","modified":1545206857415},{"_id":"public/uploads/public_library/module_gradle.png","hash":"c6fd3ea2fb7fca5833bb5d60ea76201083e8089c","modified":1545206857415},{"_id":"public/uploads/public_library/github_1.png","hash":"948cf42eddd58a700b34422b77a0ffee99c88293","modified":1545206857415},{"_id":"public/uploads/public_library/github_2.png","hash":"b3291fb060b8698b739a8641ca9946cd7f65f637","modified":1545206857416},{"_id":"public/uploads/public_library/github_4.png","hash":"3c2c0d3d015a48cbc67a144620a3a42679b69479","modified":1545206857416},{"_id":"public/uploads/public_library/github_3.png","hash":"97402c78bbd9f641117f1f01aaec97cefe6c442b","modified":1545206857416},{"_id":"public/uploads/public_library/jitpack_1.png","hash":"3b3bdf0c8a2db8fc3f6967536ae43eb5ba292dd7","modified":1545206857416},{"_id":"public/uploads/public_library/jitpack_2.png","hash":"ea9a6cdb7552c974fbb6b23186e58b70b645fe02","modified":1545206857416},{"_id":"public/uploads/public_library/jitpack_3.png","hash":"96415f2dc96b938359a505e8c5f49e7a78b6a32e","modified":1545206857417},{"_id":"source/_posts/2019-2-15-Video-Player.md","hash":"45a3b976919cc5c7ef45172d3d4d92665b5769ab","modified":1550193802086},{"_id":"source/_posts/2019-02-15-Video-Player.md","hash":"5ea4f145351e1fc9796965edc9f7b6cdcb8a2214","modified":1552285714120},{"_id":"source/_posts/2019-09-29-Windows-About.md","hash":"6c9f4bd74d3f793aee3910e4e2bfd1405700648b","modified":1569815206716},{"_id":"source/_posts/2019-09-30-Hexo-Next-Link-Color.md","hash":"eb86456782742184b20aac8357a16fd685c1f1e3","modified":1569813983390},{"_id":"public/2019/09/29/2019-09-30-Hexo-Next-Link-Color/index.html","hash":"8d601ff539c634a77bcc30c2f398330c39c77aec","modified":1569815413792},{"_id":"public/2019/09/29/2019-09-29-Windows-About/index.html","hash":"99de6f78a6d28823ae6d92bbdfde1f99ff3e2338","modified":1569815413793},{"_id":"public/categories/windows/index.html","hash":"f5de5b0062fb069f7e07290ae1f4cc7b72bd4a65","modified":1569815413796},{"_id":"public/archives/page/2/index.html","hash":"3bc0dd4a432727655c6bff15b31bfa329d54e90d","modified":1569815413803},{"_id":"public/archives/2019/index.html","hash":"7af1b282ffcb8649b88fe62ea565917ad97b554a","modified":1569815413803},{"_id":"public/archives/2019/09/index.html","hash":"e4369a52660b2554d22229d6925a6a2bed5a6de2","modified":1569815413804},{"_id":"public/page/2/index.html","hash":"4b2bf3d947c27a9fec9c8e9c98ae54749a6f8865","modified":1569815413804},{"_id":"public/tags/windows/index.html","hash":"551b5ab04828a4d54c9b16e7029a53071739d55d","modified":1569815413804},{"_id":"public/tags/software/index.html","hash":"6387c5a8a67eace32bfe2c220ec112e53d8b1b42","modified":1569815413804},{"_id":"public/tags/next/index.html","hash":"907d29bc0a21e8afc1f178ab29e53765100d4b82","modified":1569815413804}],"Category":[{"name":"misc","_id":"cjpmbawdr0005psugk7mrpzw4"},{"name":"android","_id":"cjpmbawdy000apsugz0217u7x"},{"name":"git","_id":"cjpmbawe9000ppsugsr7jwea8"},{"name":"windows","_id":"ck15si5s60001kguguxzdx2o2"},{"name":"hexo","_id":"ck15tsb810005x4ug6yfg3rd9"},{"name":"msic","_id":"ck15upzvy000dx4ugc1jbd8fu"}],"Data":[],"Page":[{"_content":"Sorry this page does not exist :(","source":"404.html","raw":"Sorry this page does not exist :(","date":"2018-12-04T07:32:48.248Z","updated":"2018-10-23T03:14:04.000Z","path":"404.html","_id":"cjpmbavzu0000psugcs2mwurh","title":"","comments":1,"layout":"page","content":"Sorry this page does not exist :(","site":{"data":{}},"excerpt":"","more":"Sorry this page does not exist :("},{"title":"关于我","date":"2018-12-05T01:23:22.000Z","_content":"\n\t这是我的个人博客\n\n### 个人信息\n* [Github][1]\n\n### 其他\n\n香蕉是最受欢迎的水果。\n\n[1]:https://github.com/BlackChy","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2018-12-05 09:23:22\n---\n\n\t这是我的个人博客\n\n### 个人信息\n* [Github][1]\n\n### 其他\n\n香蕉是最受欢迎的水果。\n\n[1]:https://github.com/BlackChy","updated":"2018-12-05T01:34:16.152Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjpmbawdm0002psugu491unbn","content":"<pre><code>这是我的个人博客\n</code></pre><h3 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h3><ul>\n<li><a href=\"https://github.com/BlackChy\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>香蕉是最受欢迎的水果。</p>\n","site":{"data":{}},"excerpt":"","more":"<pre><code>这是我的个人博客\n</code></pre><h3 id=\"个人信息\"><a href=\"#个人信息\" class=\"headerlink\" title=\"个人信息\"></a>个人信息</h3><ul>\n<li><a href=\"https://github.com/BlackChy\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><p>香蕉是最受欢迎的水果。</p>\n"},{"title":"所有分类","type":"categories","date":"2018-12-05T01:20:59.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: 所有分类\ntype: categories\ndate: 2018-12-05 09:20:59\n---\n","updated":"2018-12-05T03:26:32.639Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjpmbawdp0004psug3pudmz17","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"所有标签","type":"tags","date":"2018-12-05T01:20:41.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 所有标签\ntype: tags\ndate: 2018-12-05 09:20:41\n---\n","updated":"2018-12-05T03:27:14.554Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjpmbawel000zpsugplm1l2zk","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Github个人博客创建流程","date":"2018-09-14T16:00:00.000Z","_content":"\n有些有价值的东西我想把它记录下来，所以拥有自己的博客方便记录它们是一件非常令人高兴的事。Github Pages提供了自己搭建服务器的渠道，由Github提供的博客服务器是免费且不限空间的。以下是我在网上慢慢查找的搭建博客的简略流程。\n<!-- more -->\n\n###  注册登录github帐号。\n\n[Github][1]\n\n具体注册登录等流程网上搜索，这里不作阐述。\n\n### 创建博客项目\n\n![img][2]\n\n在github新建一个repository,这里的Repository name输入自己github账号的username，比如blackchy，之后会成功创建一个项目`xxx.github.io`，然后`https://xxx.github.io`就是个人博客的网址。\n\n![img][3]\n\n在`xxx.github.io`项目点进Settings，找到GitHub Pages模块，Theme Chooser可以选择一个博客的主题，不过一般都是在jekyll或其他地方寻找合适的主题，下面会简单介绍jekyll。Custom domain可以修改博客地址，如果有自己的个人域名可以修改成自己的域名网址，而不用`https://xxx.github.io`作为博客地址。\n\n### 设计自己的博客网站\n\n可以自己写一个html网站作为博客网站，但是那样对非专业人士、懒人等来说不太友好，所以推荐使用别人写好的模板直接下载下来使用，选择的时候尽量选可塑性较强的模板，以便后面进行修改。jekyll模板地址如下：\n\n[http://jekyllthemes.org/][4]\n\n![img][5]\n\n下载安装桌面github以便对项目进行管理，地址如下：\n\nWindows：\n[https://windows.github.com/][6]\n\n\nMac：\n[https://mac.github.com/][7]\n\n\n把github上的`xxx.github.io`项目克隆到本地，然后下载选择好的模板。\n删除掉本地项目的所有文件和文件夹(.git文件夹除外)，然后把模板的所有文件和文件夹复制到本地项目中，然后commit并推到github远程仓库，大概几秒到1分钟内，刷新`https://xxx.github.io`网页就能看到已经复制过来的网站了。\n\n\n最后，修改一下模板里面的信息再更新，这就是一个完全属于自己的个人博客了。\n\n注：一般博客都是放在posts这个文件夹，用markdown写的，弄好自己的博客网站之后就可以开心地更新博客了。\n\n\n[1]:https://github.com/\n[2]:/uploads/github-person-blog-create/new_repository.jpg\n[3]:/uploads/github-person-blog-create/repository_settings.jpg\n[4]:http://jekyllthemes.org/\n[5]:/uploads/github-person-blog-create/jekyll_demos.jpg\n[6]:https://windows.github.com/\n[7]:https://mac.github.com/","source":"_posts/2018-09-15-Github-Person-Blog-Create.md","raw":"---\ntitle: Github个人博客创建流程\ndate: 2018-09-15 00:00:00\ncategories: misc\ntags: github\n---\n\n有些有价值的东西我想把它记录下来，所以拥有自己的博客方便记录它们是一件非常令人高兴的事。Github Pages提供了自己搭建服务器的渠道，由Github提供的博客服务器是免费且不限空间的。以下是我在网上慢慢查找的搭建博客的简略流程。\n<!-- more -->\n\n###  注册登录github帐号。\n\n[Github][1]\n\n具体注册登录等流程网上搜索，这里不作阐述。\n\n### 创建博客项目\n\n![img][2]\n\n在github新建一个repository,这里的Repository name输入自己github账号的username，比如blackchy，之后会成功创建一个项目`xxx.github.io`，然后`https://xxx.github.io`就是个人博客的网址。\n\n![img][3]\n\n在`xxx.github.io`项目点进Settings，找到GitHub Pages模块，Theme Chooser可以选择一个博客的主题，不过一般都是在jekyll或其他地方寻找合适的主题，下面会简单介绍jekyll。Custom domain可以修改博客地址，如果有自己的个人域名可以修改成自己的域名网址，而不用`https://xxx.github.io`作为博客地址。\n\n### 设计自己的博客网站\n\n可以自己写一个html网站作为博客网站，但是那样对非专业人士、懒人等来说不太友好，所以推荐使用别人写好的模板直接下载下来使用，选择的时候尽量选可塑性较强的模板，以便后面进行修改。jekyll模板地址如下：\n\n[http://jekyllthemes.org/][4]\n\n![img][5]\n\n下载安装桌面github以便对项目进行管理，地址如下：\n\nWindows：\n[https://windows.github.com/][6]\n\n\nMac：\n[https://mac.github.com/][7]\n\n\n把github上的`xxx.github.io`项目克隆到本地，然后下载选择好的模板。\n删除掉本地项目的所有文件和文件夹(.git文件夹除外)，然后把模板的所有文件和文件夹复制到本地项目中，然后commit并推到github远程仓库，大概几秒到1分钟内，刷新`https://xxx.github.io`网页就能看到已经复制过来的网站了。\n\n\n最后，修改一下模板里面的信息再更新，这就是一个完全属于自己的个人博客了。\n\n注：一般博客都是放在posts这个文件夹，用markdown写的，弄好自己的博客网站之后就可以开心地更新博客了。\n\n\n[1]:https://github.com/\n[2]:/uploads/github-person-blog-create/new_repository.jpg\n[3]:/uploads/github-person-blog-create/repository_settings.jpg\n[4]:http://jekyllthemes.org/\n[5]:/uploads/github-person-blog-create/jekyll_demos.jpg\n[6]:https://windows.github.com/\n[7]:https://mac.github.com/","slug":"2018-09-15-Github-Person-Blog-Create","published":1,"updated":"2018-12-05T06:28:32.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpmbawda0001psugn93j2d8e","content":"<p>有些有价值的东西我想把它记录下来，所以拥有自己的博客方便记录它们是一件非常令人高兴的事。Github Pages提供了自己搭建服务器的渠道，由Github提供的博客服务器是免费且不限空间的。以下是我在网上慢慢查找的搭建博客的简略流程。<br><a id=\"more\"></a></p>\n<h3 id=\"注册登录github帐号。\"><a href=\"#注册登录github帐号。\" class=\"headerlink\" title=\"注册登录github帐号。\"></a>注册登录github帐号。</h3><p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a></p>\n<p>具体注册登录等流程网上搜索，这里不作阐述。</p>\n<h3 id=\"创建博客项目\"><a href=\"#创建博客项目\" class=\"headerlink\" title=\"创建博客项目\"></a>创建博客项目</h3><p><img src=\"/uploads/github-person-blog-create/new_repository.jpg\" alt=\"img\"></p>\n<p>在github新建一个repository,这里的Repository name输入自己github账号的username，比如blackchy，之后会成功创建一个项目<code>xxx.github.io</code>，然后<code>https://xxx.github.io</code>就是个人博客的网址。</p>\n<p><img src=\"/uploads/github-person-blog-create/repository_settings.jpg\" alt=\"img\"></p>\n<p>在<code>xxx.github.io</code>项目点进Settings，找到GitHub Pages模块，Theme Chooser可以选择一个博客的主题，不过一般都是在jekyll或其他地方寻找合适的主题，下面会简单介绍jekyll。Custom domain可以修改博客地址，如果有自己的个人域名可以修改成自己的域名网址，而不用<code>https://xxx.github.io</code>作为博客地址。</p>\n<h3 id=\"设计自己的博客网站\"><a href=\"#设计自己的博客网站\" class=\"headerlink\" title=\"设计自己的博客网站\"></a>设计自己的博客网站</h3><p>可以自己写一个html网站作为博客网站，但是那样对非专业人士、懒人等来说不太友好，所以推荐使用别人写好的模板直接下载下来使用，选择的时候尽量选可塑性较强的模板，以便后面进行修改。jekyll模板地址如下：</p>\n<p><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"noopener\">http://jekyllthemes.org/</a></p>\n<p><img src=\"/uploads/github-person-blog-create/jekyll_demos.jpg\" alt=\"img\"></p>\n<p>下载安装桌面github以便对项目进行管理，地址如下：</p>\n<p>Windows：<br><a href=\"https://windows.github.com/\" target=\"_blank\" rel=\"noopener\">https://windows.github.com/</a></p>\n<p>Mac：<br><a href=\"https://mac.github.com/\" target=\"_blank\" rel=\"noopener\">https://mac.github.com/</a></p>\n<p>把github上的<code>xxx.github.io</code>项目克隆到本地，然后下载选择好的模板。<br>删除掉本地项目的所有文件和文件夹(.git文件夹除外)，然后把模板的所有文件和文件夹复制到本地项目中，然后commit并推到github远程仓库，大概几秒到1分钟内，刷新<code>https://xxx.github.io</code>网页就能看到已经复制过来的网站了。</p>\n<p>最后，修改一下模板里面的信息再更新，这就是一个完全属于自己的个人博客了。</p>\n<p>注：一般博客都是放在posts这个文件夹，用markdown写的，弄好自己的博客网站之后就可以开心地更新博客了。</p>\n","site":{"data":{}},"excerpt":"<p>有些有价值的东西我想把它记录下来，所以拥有自己的博客方便记录它们是一件非常令人高兴的事。Github Pages提供了自己搭建服务器的渠道，由Github提供的博客服务器是免费且不限空间的。以下是我在网上慢慢查找的搭建博客的简略流程。<br>","more":"</p>\n<h3 id=\"注册登录github帐号。\"><a href=\"#注册登录github帐号。\" class=\"headerlink\" title=\"注册登录github帐号。\"></a>注册登录github帐号。</h3><p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a></p>\n<p>具体注册登录等流程网上搜索，这里不作阐述。</p>\n<h3 id=\"创建博客项目\"><a href=\"#创建博客项目\" class=\"headerlink\" title=\"创建博客项目\"></a>创建博客项目</h3><p><img src=\"/uploads/github-person-blog-create/new_repository.jpg\" alt=\"img\"></p>\n<p>在github新建一个repository,这里的Repository name输入自己github账号的username，比如blackchy，之后会成功创建一个项目<code>xxx.github.io</code>，然后<code>https://xxx.github.io</code>就是个人博客的网址。</p>\n<p><img src=\"/uploads/github-person-blog-create/repository_settings.jpg\" alt=\"img\"></p>\n<p>在<code>xxx.github.io</code>项目点进Settings，找到GitHub Pages模块，Theme Chooser可以选择一个博客的主题，不过一般都是在jekyll或其他地方寻找合适的主题，下面会简单介绍jekyll。Custom domain可以修改博客地址，如果有自己的个人域名可以修改成自己的域名网址，而不用<code>https://xxx.github.io</code>作为博客地址。</p>\n<h3 id=\"设计自己的博客网站\"><a href=\"#设计自己的博客网站\" class=\"headerlink\" title=\"设计自己的博客网站\"></a>设计自己的博客网站</h3><p>可以自己写一个html网站作为博客网站，但是那样对非专业人士、懒人等来说不太友好，所以推荐使用别人写好的模板直接下载下来使用，选择的时候尽量选可塑性较强的模板，以便后面进行修改。jekyll模板地址如下：</p>\n<p><a href=\"http://jekyllthemes.org/\" target=\"_blank\" rel=\"noopener\">http://jekyllthemes.org/</a></p>\n<p><img src=\"/uploads/github-person-blog-create/jekyll_demos.jpg\" alt=\"img\"></p>\n<p>下载安装桌面github以便对项目进行管理，地址如下：</p>\n<p>Windows：<br><a href=\"https://windows.github.com/\" target=\"_blank\" rel=\"noopener\">https://windows.github.com/</a></p>\n<p>Mac：<br><a href=\"https://mac.github.com/\" target=\"_blank\" rel=\"noopener\">https://mac.github.com/</a></p>\n<p>把github上的<code>xxx.github.io</code>项目克隆到本地，然后下载选择好的模板。<br>删除掉本地项目的所有文件和文件夹(.git文件夹除外)，然后把模板的所有文件和文件夹复制到本地项目中，然后commit并推到github远程仓库，大概几秒到1分钟内，刷新<code>https://xxx.github.io</code>网页就能看到已经复制过来的网站了。</p>\n<p>最后，修改一下模板里面的信息再更新，这就是一个完全属于自己的个人博客了。</p>\n<p>注：一般博客都是放在posts这个文件夹，用markdown写的，弄好自己的博客网站之后就可以开心地更新博客了。</p>"},{"title":"String 相关","date":"2018-11-29T16:00:01.000Z","_content":"\nAndroid中String相关的操作，把它们记录下来。\n<!-- more -->\n\n### 修改部分字体大小\n\n原字体：<font size=4>字体大小改变</font> &nbsp;&nbsp;修改后：<font size=4>字体大小改</font> <font size=2>变</font>\n```\nCharSequence charSequence1 = \"字体改变大小\";\nSpannableString spannableString = new SpannableString(charSequence1);\n  spannableString.setSpan(new RelativeSizeSpan(0.5f), charSequence1.length() - 1,\n  charSequence1.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\ntvTitle.setText(spannableString);\n```\n\n### 修改部分字体颜色\n\n原字体：<font size=4>字体改变颜色</font> &nbsp;&nbsp;修改后：<font size=4>字体改变颜</font> <font size=4 color=#FFB72B>色</font>\n```\nCharSequence charSequence = \"字体改变颜色\";\nSpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(charSequence);\nspannableStringBuilder.setSpan(\n  new ForegroundColorSpan(getResources().getColor(R.color.gl_vip_up)),\n  spannableStringBuilder.length() - 1, spannableStringBuilder.length(),\n  Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\ntvTitle.setText(spannableStringBuilder);\n```\n\n注：待补充","source":"_posts/2018-11-30-String-About.md","raw":"---\ntitle: String 相关\ndate: 2018-11-30 00:00:01\ncategories: android\ntags: string\n---\n\nAndroid中String相关的操作，把它们记录下来。\n<!-- more -->\n\n### 修改部分字体大小\n\n原字体：<font size=4>字体大小改变</font> &nbsp;&nbsp;修改后：<font size=4>字体大小改</font> <font size=2>变</font>\n```\nCharSequence charSequence1 = \"字体改变大小\";\nSpannableString spannableString = new SpannableString(charSequence1);\n  spannableString.setSpan(new RelativeSizeSpan(0.5f), charSequence1.length() - 1,\n  charSequence1.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\ntvTitle.setText(spannableString);\n```\n\n### 修改部分字体颜色\n\n原字体：<font size=4>字体改变颜色</font> &nbsp;&nbsp;修改后：<font size=4>字体改变颜</font> <font size=4 color=#FFB72B>色</font>\n```\nCharSequence charSequence = \"字体改变颜色\";\nSpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(charSequence);\nspannableStringBuilder.setSpan(\n  new ForegroundColorSpan(getResources().getColor(R.color.gl_vip_up)),\n  spannableStringBuilder.length() - 1, spannableStringBuilder.length(),\n  Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\ntvTitle.setText(spannableStringBuilder);\n```\n\n注：待补充","slug":"2018-11-30-String-About","published":1,"updated":"2018-12-05T07:01:55.894Z","_id":"cjpmbawdn0003psugu2hu992f","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Android中String相关的操作，把它们记录下来。<br><a id=\"more\"></a></p>\n<h3 id=\"修改部分字体大小\"><a href=\"#修改部分字体大小\" class=\"headerlink\" title=\"修改部分字体大小\"></a>修改部分字体大小</h3><p>原字体：<font size=\"4\">字体大小改变</font> &nbsp;&nbsp;修改后：<font size=\"4\">字体大小改</font> <font size=\"2\">变</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CharSequence charSequence1 = &quot;字体改变大小&quot;;</span><br><span class=\"line\">SpannableString spannableString = new SpannableString(charSequence1);</span><br><span class=\"line\">  spannableString.setSpan(new RelativeSizeSpan(0.5f), charSequence1.length() - 1,</span><br><span class=\"line\">  charSequence1.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">tvTitle.setText(spannableString);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"修改部分字体颜色\"><a href=\"#修改部分字体颜色\" class=\"headerlink\" title=\"修改部分字体颜色\"></a>修改部分字体颜色</h3><p>原字体：<font size=\"4\">字体改变颜色</font> &nbsp;&nbsp;修改后：<font size=\"4\">字体改变颜</font> <font size=\"4\" color=\"#FFB72B\">色</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CharSequence charSequence = &quot;字体改变颜色&quot;;</span><br><span class=\"line\">SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(charSequence);</span><br><span class=\"line\">spannableStringBuilder.setSpan(</span><br><span class=\"line\">  new ForegroundColorSpan(getResources().getColor(R.color.gl_vip_up)),</span><br><span class=\"line\">  spannableStringBuilder.length() - 1, spannableStringBuilder.length(),</span><br><span class=\"line\">  Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">tvTitle.setText(spannableStringBuilder);</span><br></pre></td></tr></table></figure></p>\n<p>注：待补充</p>\n","site":{"data":{}},"excerpt":"<p>Android中String相关的操作，把它们记录下来。<br>","more":"</p>\n<h3 id=\"修改部分字体大小\"><a href=\"#修改部分字体大小\" class=\"headerlink\" title=\"修改部分字体大小\"></a>修改部分字体大小</h3><p>原字体：<font size=\"4\">字体大小改变</font> &nbsp;&nbsp;修改后：<font size=\"4\">字体大小改</font> <font size=\"2\">变</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CharSequence charSequence1 = &quot;字体改变大小&quot;;</span><br><span class=\"line\">SpannableString spannableString = new SpannableString(charSequence1);</span><br><span class=\"line\">  spannableString.setSpan(new RelativeSizeSpan(0.5f), charSequence1.length() - 1,</span><br><span class=\"line\">  charSequence1.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">tvTitle.setText(spannableString);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"修改部分字体颜色\"><a href=\"#修改部分字体颜色\" class=\"headerlink\" title=\"修改部分字体颜色\"></a>修改部分字体颜色</h3><p>原字体：<font size=\"4\">字体改变颜色</font> &nbsp;&nbsp;修改后：<font size=\"4\">字体改变颜</font> <font size=\"4\" color=\"#FFB72B\">色</font><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CharSequence charSequence = &quot;字体改变颜色&quot;;</span><br><span class=\"line\">SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder(charSequence);</span><br><span class=\"line\">spannableStringBuilder.setSpan(</span><br><span class=\"line\">  new ForegroundColorSpan(getResources().getColor(R.color.gl_vip_up)),</span><br><span class=\"line\">  spannableStringBuilder.length() - 1, spannableStringBuilder.length(),</span><br><span class=\"line\">  Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">tvTitle.setText(spannableStringBuilder);</span><br></pre></td></tr></table></figure></p>\n<p>注：待补充</p>"},{"title":"博客-Jekyll迁移到Hexo","date":"2018-12-03T16:00:01.000Z","_content":"\n发现了比[Jekyll][0]用起来更舒服的[Hexo][1]，它是一个快速、简洁且高效的博客框架，其中使用Markdown（或其他渲染引擎）解析文章，最后生成静态网页。研究了一下[Hexo][1]的[文档][2]过后马上就把它应用到了博客中。\n<!-- more -->\n\n详细流程(Windows环境)如下，具体可参考[Hexo文档][2]。\n\n### 环境准备\n\n1. 安装Git、安装Node.js\n * [Git][3]\n * [Node.js][4]\n\n2. 安装Hexo \n\n```\n$ npm install -g hexo-cli\n```\n### 建站\n\n```\n$ hexo init blackchy.github.io\n$ cd blackchy.github.io\n$ npm install\n```\n### 配置\n\n打开根目录下的`_config.yml`文件，主要配置以下内容。\n```\n# Site\ntitle: Black Chy's Blog\nsubtitle: 香蕉是最受欢迎的水果。\ndescription: Just a dog.\nkeywords: Android, Developer, Dog\nauthor: Black Chy\nlanguage: zh-CN\ntimezone: Asia/Chongqing\n```\n\n### 主题\n\n项目默认是landscape主题，这里修改为[hexo-theme-next][5]。\n首先下载next主题到项目中。\n```\n$ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n然后把根目录下`_config.yml`文件中的`theme`改为`next`。next主题需要手动生成`tags`和`categories`，并修改index文件中的内容:\n```\n$ hexo new page tags\n$ hexo new page categories\n```\n```\n---\ntitle: 所有标签\ntype: tags\ndate: 2018-12-04 00:00:00\n---\n```\n```\n---\ntitle: 所有分类\ntype: categories\ndate: 2018-12-04 00:00:00\n---\n```\n最后，在下载好的next主题中也有一个`_config.yml`文件（路径：`theme->next->_config.yml`），打开进行next主题相关配置。例如：\n1. next内部又有4个不同的设计风格，这里使用的是Gemini\n``` \nscheme: Gemini\n ```\n2. 设置头像\n```\navatar:\n  #头像url\n  url: /uploads/avatar.png\n  #圆头像\n  rounded: true\n  #透明度 0-1\n  opacity: 1\n  #旋转动画\n  rotated: true\n```\n3. 设置菜单列表，仅打开 首页、关于、归档，其他全部关闭。\n```\nmenu:\n  home: / || home\n  about: /about/ || user\n  #tags: /tags/ || tags\n  #categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n\n4. 打开不蒜子网页计数器\n```\nbusuanzi_count:\n  enable: true\n  total_visitors: true\n  total_visitors_icon: user\n  total_views: true\n  total_views_icon: eye\n  post_views: true\n  post_views_icon: eye\n```\n\n5. 安装其他js\n```\nfastclick: true\n$ cd themes/next\n$ git clone https://github.com/theme-next/theme-next-fastclick source/lib/fastclick\n\nlazyload: true\n$ cd themes/next\n$ git clone https://github.com/theme-next/theme-next-jquery-lazyload source/lib/jquery_lazyload\n\npace: true\n$ cd themes/next\n$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n```\n\n等等......\n\n### 添加搜索功能\n\n1. 安装插件\n```\nnpm install hexo-generator-search\nnpm install hexo-generator-searchdb\n```\n2. 修改hexo配置\n根目录下`_config.yml`中增加如下配置:\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n3. 配置next中的搜索入口\n打开`themes/next/_config.yml`，修改配置:\n```\nlocal_search:\n  enable: true\n  trigger: auto\n  top_n_per_article: 1\n```\n\n参考链接：[为hexo和next增加站内搜索功能][6]\n\n### 迁移\n\n把Jekyll目录下的_posts中文章全部复制到Hexo目录下的source/_posts中，并把文章名统一为`:year-:month-:day-:title.md`，需要注意的是` _ `开头的文章不会显示，最后修改文章参数：\n\n```\n---\ntitle: blog title\ndate: YYYY-MM-DD HH:mm:ss \ncategories: misc\ntags: [tag1, tag2]\n---\n```\n文章太长则需要手动添加`<!-- more -->`以显示`阅读全文`。\n\n### 部署 (Git)\n\n部署前可以先本地运行试看效果，在根目录运行服务器命令：\n```\n$hexo server 简写 hexo s\n```\n然后打开浏览器访问查看博客（默认：http://localhost:4000 ）\n\n本地试运行的博客没有问题后就可以去部署到Github上了。\n\n1. 本地配置deploy,打开根目录`_config.yml`。\n```\ndeploy:\n  - type: git\n    repo: git@github.com:blackchy/blackchy.github.io.git\n    branch: [master]\n    message: a commit message\n```\n2. 安装hexo-deployer-git\n```\n$ npm install hexo-deployer-git --save\n```\n3. 执行部署\n```\n$ hexo g -d\n```\n\n### 注意事项\n\n* 由于Jekyll上传github服务器会自动生成并部署，而Hexo需要本地生成静态文件再上传，所以需要另起一个分支存放hexo源码。\n* 通过git克隆下来的theme、js，删除对应的.git文件夹。\n\n----\n\n<b>至此，迁移完毕。</b>\n\n[0]:https://jekyllrb.com/\n[1]:https://github.com/hexojs/hexo\n[2]:https://hexo.io/zh-cn/docs/\n[3]:https://git-scm.com/\n[4]:https://nodejs.org/\n[5]:https://github.com/theme-next/hexo-theme-next\n[6]:https://www.jianshu.com/p/5b62c01c4dfa","source":"_posts/2018-12-04-Jekyll-To-Hexo.md","raw":"---\ntitle: 博客-Jekyll迁移到Hexo\ndate: 2018-12-04 00:00:01\ncategories: misc\ntags: [jekyll,hexo]\n---\n\n发现了比[Jekyll][0]用起来更舒服的[Hexo][1]，它是一个快速、简洁且高效的博客框架，其中使用Markdown（或其他渲染引擎）解析文章，最后生成静态网页。研究了一下[Hexo][1]的[文档][2]过后马上就把它应用到了博客中。\n<!-- more -->\n\n详细流程(Windows环境)如下，具体可参考[Hexo文档][2]。\n\n### 环境准备\n\n1. 安装Git、安装Node.js\n * [Git][3]\n * [Node.js][4]\n\n2. 安装Hexo \n\n```\n$ npm install -g hexo-cli\n```\n### 建站\n\n```\n$ hexo init blackchy.github.io\n$ cd blackchy.github.io\n$ npm install\n```\n### 配置\n\n打开根目录下的`_config.yml`文件，主要配置以下内容。\n```\n# Site\ntitle: Black Chy's Blog\nsubtitle: 香蕉是最受欢迎的水果。\ndescription: Just a dog.\nkeywords: Android, Developer, Dog\nauthor: Black Chy\nlanguage: zh-CN\ntimezone: Asia/Chongqing\n```\n\n### 主题\n\n项目默认是landscape主题，这里修改为[hexo-theme-next][5]。\n首先下载next主题到项目中。\n```\n$ git clone https://github.com/theme-next/hexo-theme-next themes/next\n```\n然后把根目录下`_config.yml`文件中的`theme`改为`next`。next主题需要手动生成`tags`和`categories`，并修改index文件中的内容:\n```\n$ hexo new page tags\n$ hexo new page categories\n```\n```\n---\ntitle: 所有标签\ntype: tags\ndate: 2018-12-04 00:00:00\n---\n```\n```\n---\ntitle: 所有分类\ntype: categories\ndate: 2018-12-04 00:00:00\n---\n```\n最后，在下载好的next主题中也有一个`_config.yml`文件（路径：`theme->next->_config.yml`），打开进行next主题相关配置。例如：\n1. next内部又有4个不同的设计风格，这里使用的是Gemini\n``` \nscheme: Gemini\n ```\n2. 设置头像\n```\navatar:\n  #头像url\n  url: /uploads/avatar.png\n  #圆头像\n  rounded: true\n  #透明度 0-1\n  opacity: 1\n  #旋转动画\n  rotated: true\n```\n3. 设置菜单列表，仅打开 首页、关于、归档，其他全部关闭。\n```\nmenu:\n  home: / || home\n  about: /about/ || user\n  #tags: /tags/ || tags\n  #categories: /categories/ || th\n  archives: /archives/ || archive\n  #schedule: /schedule/ || calendar\n  #sitemap: /sitemap.xml || sitemap\n  #commonweal: /404/ || heartbeat\n```\n\n4. 打开不蒜子网页计数器\n```\nbusuanzi_count:\n  enable: true\n  total_visitors: true\n  total_visitors_icon: user\n  total_views: true\n  total_views_icon: eye\n  post_views: true\n  post_views_icon: eye\n```\n\n5. 安装其他js\n```\nfastclick: true\n$ cd themes/next\n$ git clone https://github.com/theme-next/theme-next-fastclick source/lib/fastclick\n\nlazyload: true\n$ cd themes/next\n$ git clone https://github.com/theme-next/theme-next-jquery-lazyload source/lib/jquery_lazyload\n\npace: true\n$ cd themes/next\n$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace\n```\n\n等等......\n\n### 添加搜索功能\n\n1. 安装插件\n```\nnpm install hexo-generator-search\nnpm install hexo-generator-searchdb\n```\n2. 修改hexo配置\n根目录下`_config.yml`中增加如下配置:\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n```\n3. 配置next中的搜索入口\n打开`themes/next/_config.yml`，修改配置:\n```\nlocal_search:\n  enable: true\n  trigger: auto\n  top_n_per_article: 1\n```\n\n参考链接：[为hexo和next增加站内搜索功能][6]\n\n### 迁移\n\n把Jekyll目录下的_posts中文章全部复制到Hexo目录下的source/_posts中，并把文章名统一为`:year-:month-:day-:title.md`，需要注意的是` _ `开头的文章不会显示，最后修改文章参数：\n\n```\n---\ntitle: blog title\ndate: YYYY-MM-DD HH:mm:ss \ncategories: misc\ntags: [tag1, tag2]\n---\n```\n文章太长则需要手动添加`<!-- more -->`以显示`阅读全文`。\n\n### 部署 (Git)\n\n部署前可以先本地运行试看效果，在根目录运行服务器命令：\n```\n$hexo server 简写 hexo s\n```\n然后打开浏览器访问查看博客（默认：http://localhost:4000 ）\n\n本地试运行的博客没有问题后就可以去部署到Github上了。\n\n1. 本地配置deploy,打开根目录`_config.yml`。\n```\ndeploy:\n  - type: git\n    repo: git@github.com:blackchy/blackchy.github.io.git\n    branch: [master]\n    message: a commit message\n```\n2. 安装hexo-deployer-git\n```\n$ npm install hexo-deployer-git --save\n```\n3. 执行部署\n```\n$ hexo g -d\n```\n\n### 注意事项\n\n* 由于Jekyll上传github服务器会自动生成并部署，而Hexo需要本地生成静态文件再上传，所以需要另起一个分支存放hexo源码。\n* 通过git克隆下来的theme、js，删除对应的.git文件夹。\n\n----\n\n<b>至此，迁移完毕。</b>\n\n[0]:https://jekyllrb.com/\n[1]:https://github.com/hexojs/hexo\n[2]:https://hexo.io/zh-cn/docs/\n[3]:https://git-scm.com/\n[4]:https://nodejs.org/\n[5]:https://github.com/theme-next/hexo-theme-next\n[6]:https://www.jianshu.com/p/5b62c01c4dfa","slug":"2018-12-04-Jekyll-To-Hexo","published":1,"updated":"2018-12-11T00:54:37.400Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpmbawdt0007psugexaj56f8","content":"<p>发现了比<a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a>用起来更舒服的<a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">Hexo</a>，它是一个快速、简洁且高效的博客框架，其中使用Markdown（或其他渲染引擎）解析文章，最后生成静态网页。研究了一下<a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">Hexo</a>的<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">文档</a>过后马上就把它应用到了博客中。<br><a id=\"more\"></a></p>\n<p>详细流程(Windows环境)如下，具体可参考<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo文档</a>。</p>\n<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><ol>\n<li><p>安装Git、安装Node.js</p>\n<ul>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n<li><a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n</ul>\n</li>\n<li><p>安装Hexo </p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init blackchy.github.io</span><br><span class=\"line\">$ cd blackchy.github.io</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>打开根目录下的<code>_config.yml</code>文件，主要配置以下内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: Black Chy&apos;s Blog</span><br><span class=\"line\">subtitle: 香蕉是最受欢迎的水果。</span><br><span class=\"line\">description: Just a dog.</span><br><span class=\"line\">keywords: Android, Developer, Dog</span><br><span class=\"line\">author: Black Chy</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: Asia/Chongqing</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h3><p>项目默认是landscape主题，这里修改为<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-theme-next</a>。<br>首先下载next主题到项目中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p>\n<p>然后把根目录下<code>_config.yml</code>文件中的<code>theme</code>改为<code>next</code>。next主题需要手动生成<code>tags</code>和<code>categories</code>，并修改index文件中的内容:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br><span class=\"line\">$ hexo new page categories</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 所有标签</span><br><span class=\"line\">type: tags</span><br><span class=\"line\">date: 2018-12-04 00:00:00</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 所有分类</span><br><span class=\"line\">type: categories</span><br><span class=\"line\">date: 2018-12-04 00:00:00</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>最后，在下载好的next主题中也有一个<code>_config.yml</code>文件（路径：<code>theme-&gt;next-&gt;_config.yml</code>），打开进行next主题相关配置。例如：</p>\n<ol>\n<li><p>next内部又有4个不同的设计风格，这里使用的是Gemini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置头像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">  #头像url</span><br><span class=\"line\">  url: /uploads/avatar.png</span><br><span class=\"line\">  #圆头像</span><br><span class=\"line\">  rounded: true</span><br><span class=\"line\">  #透明度 0-1</span><br><span class=\"line\">  opacity: 1</span><br><span class=\"line\">  #旋转动画</span><br><span class=\"line\">  rotated: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置菜单列表，仅打开 首页、关于、归档，其他全部关闭。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  #categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br><span class=\"line\">  #sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开不蒜子网页计数器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  total_visitors: true</span><br><span class=\"line\">  total_visitors_icon: user</span><br><span class=\"line\">  total_views: true</span><br><span class=\"line\">  total_views_icon: eye</span><br><span class=\"line\">  post_views: true</span><br><span class=\"line\">  post_views_icon: eye</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装其他js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastclick: true</span><br><span class=\"line\">$ cd themes/next</span><br><span class=\"line\">$ git clone https://github.com/theme-next/theme-next-fastclick source/lib/fastclick</span><br><span class=\"line\"></span><br><span class=\"line\">lazyload: true</span><br><span class=\"line\">$ cd themes/next</span><br><span class=\"line\">$ git clone https://github.com/theme-next/theme-next-jquery-lazyload source/lib/jquery_lazyload</span><br><span class=\"line\"></span><br><span class=\"line\">pace: true</span><br><span class=\"line\">$ cd themes/next</span><br><span class=\"line\">$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>等等……</p>\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><ol>\n<li><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search</span><br><span class=\"line\">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改hexo配置<br>根目录下<code>_config.yml</code>中增加如下配置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置next中的搜索入口<br>打开<code>themes/next/_config.yml</code>，修改配置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/5b62c01c4dfa\" target=\"_blank\" rel=\"noopener\">为hexo和next增加站内搜索功能</a></p>\n<h3 id=\"迁移\"><a href=\"#迁移\" class=\"headerlink\" title=\"迁移\"></a>迁移</h3><p>把Jekyll目录下的_posts中文章全部复制到Hexo目录下的source/_posts中，并把文章名统一为<code>:year-:month-:day-:title.md</code>，需要注意的是<code>_</code>开头的文章不会显示，最后修改文章参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: blog title</span><br><span class=\"line\">date: YYYY-MM-DD HH:mm:ss </span><br><span class=\"line\">categories: misc</span><br><span class=\"line\">tags: [tag1, tag2]</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>文章太长则需要手动添加<code>&lt;!-- more --&gt;</code>以显示<code>阅读全文</code>。</p>\n<h3 id=\"部署-Git\"><a href=\"#部署-Git\" class=\"headerlink\" title=\"部署 (Git)\"></a>部署 (Git)</h3><p>部署前可以先本地运行试看效果，在根目录运行服务器命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$hexo server 简写 hexo s</span><br></pre></td></tr></table></figure></p>\n<p>然后打开浏览器访问查看博客（默认：<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a> ）</p>\n<p>本地试运行的博客没有问题后就可以去部署到Github上了。</p>\n<ol>\n<li><p>本地配置deploy,打开根目录<code>_config.yml</code>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  - type: git</span><br><span class=\"line\">    repo: git@github.com:blackchy/blackchy.github.io.git</span><br><span class=\"line\">    branch: [master]</span><br><span class=\"line\">    message: a commit message</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装hexo-deployer-git</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g -d</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>由于Jekyll上传github服务器会自动生成并部署，而Hexo需要本地生成静态文件再上传，所以需要另起一个分支存放hexo源码。</li>\n<li>通过git克隆下来的theme、js，删除对应的.git文件夹。</li>\n</ul>\n<hr>\n<p><b>至此，迁移完毕。</b></p>\n","site":{"data":{}},"excerpt":"<p>发现了比<a href=\"https://jekyllrb.com/\" target=\"_blank\" rel=\"noopener\">Jekyll</a>用起来更舒服的<a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">Hexo</a>，它是一个快速、简洁且高效的博客框架，其中使用Markdown（或其他渲染引擎）解析文章，最后生成静态网页。研究了一下<a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">Hexo</a>的<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">文档</a>过后马上就把它应用到了博客中。<br>","more":"</p>\n<p>详细流程(Windows环境)如下，具体可参考<a href=\"https://hexo.io/zh-cn/docs/\" target=\"_blank\" rel=\"noopener\">Hexo文档</a>。</p>\n<h3 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h3><ol>\n<li><p>安装Git、安装Node.js</p>\n<ul>\n<li><a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">Git</a></li>\n<li><a href=\"https://nodejs.org/\" target=\"_blank\" rel=\"noopener\">Node.js</a></li>\n</ul>\n</li>\n<li><p>安装Hexo </p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h3 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init blackchy.github.io</span><br><span class=\"line\">$ cd blackchy.github.io</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>打开根目录下的<code>_config.yml</code>文件，主要配置以下内容。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Site</span><br><span class=\"line\">title: Black Chy&apos;s Blog</span><br><span class=\"line\">subtitle: 香蕉是最受欢迎的水果。</span><br><span class=\"line\">description: Just a dog.</span><br><span class=\"line\">keywords: Android, Developer, Dog</span><br><span class=\"line\">author: Black Chy</span><br><span class=\"line\">language: zh-CN</span><br><span class=\"line\">timezone: Asia/Chongqing</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h3><p>项目默认是landscape主题，这里修改为<a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-theme-next</a>。<br>首先下载next主题到项目中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p>\n<p>然后把根目录下<code>_config.yml</code>文件中的<code>theme</code>改为<code>next</code>。next主题需要手动生成<code>tags</code>和<code>categories</code>，并修改index文件中的内容:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br><span class=\"line\">$ hexo new page categories</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 所有标签</span><br><span class=\"line\">type: tags</span><br><span class=\"line\">date: 2018-12-04 00:00:00</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 所有分类</span><br><span class=\"line\">type: categories</span><br><span class=\"line\">date: 2018-12-04 00:00:00</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>最后，在下载好的next主题中也有一个<code>_config.yml</code>文件（路径：<code>theme-&gt;next-&gt;_config.yml</code>），打开进行next主题相关配置。例如：</p>\n<ol>\n<li><p>next内部又有4个不同的设计风格，这里使用的是Gemini</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置头像</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">avatar:</span><br><span class=\"line\">  #头像url</span><br><span class=\"line\">  url: /uploads/avatar.png</span><br><span class=\"line\">  #圆头像</span><br><span class=\"line\">  rounded: true</span><br><span class=\"line\">  #透明度 0-1</span><br><span class=\"line\">  opacity: 1</span><br><span class=\"line\">  #旋转动画</span><br><span class=\"line\">  rotated: true</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置菜单列表，仅打开 首页、关于、归档，其他全部关闭。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: / || home</span><br><span class=\"line\">  about: /about/ || user</span><br><span class=\"line\">  #tags: /tags/ || tags</span><br><span class=\"line\">  #categories: /categories/ || th</span><br><span class=\"line\">  archives: /archives/ || archive</span><br><span class=\"line\">  #schedule: /schedule/ || calendar</span><br><span class=\"line\">  #sitemap: /sitemap.xml || sitemap</span><br><span class=\"line\">  #commonweal: /404/ || heartbeat</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>打开不蒜子网页计数器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  total_visitors: true</span><br><span class=\"line\">  total_visitors_icon: user</span><br><span class=\"line\">  total_views: true</span><br><span class=\"line\">  total_views_icon: eye</span><br><span class=\"line\">  post_views: true</span><br><span class=\"line\">  post_views_icon: eye</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装其他js</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fastclick: true</span><br><span class=\"line\">$ cd themes/next</span><br><span class=\"line\">$ git clone https://github.com/theme-next/theme-next-fastclick source/lib/fastclick</span><br><span class=\"line\"></span><br><span class=\"line\">lazyload: true</span><br><span class=\"line\">$ cd themes/next</span><br><span class=\"line\">$ git clone https://github.com/theme-next/theme-next-jquery-lazyload source/lib/jquery_lazyload</span><br><span class=\"line\"></span><br><span class=\"line\">pace: true</span><br><span class=\"line\">$ cd themes/next</span><br><span class=\"line\">$ git clone https://github.com/theme-next/theme-next-pace source/lib/pace</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>等等……</p>\n<h3 id=\"添加搜索功能\"><a href=\"#添加搜索功能\" class=\"headerlink\" title=\"添加搜索功能\"></a>添加搜索功能</h3><ol>\n<li><p>安装插件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-search</span><br><span class=\"line\">npm install hexo-generator-searchdb</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改hexo配置<br>根目录下<code>_config.yml</code>中增加如下配置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置next中的搜索入口<br>打开<code>themes/next/_config.yml</code>，修改配置:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  trigger: auto</span><br><span class=\"line\">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>参考链接：<a href=\"https://www.jianshu.com/p/5b62c01c4dfa\" target=\"_blank\" rel=\"noopener\">为hexo和next增加站内搜索功能</a></p>\n<h3 id=\"迁移\"><a href=\"#迁移\" class=\"headerlink\" title=\"迁移\"></a>迁移</h3><p>把Jekyll目录下的_posts中文章全部复制到Hexo目录下的source/_posts中，并把文章名统一为<code>:year-:month-:day-:title.md</code>，需要注意的是<code>_</code>开头的文章不会显示，最后修改文章参数：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: blog title</span><br><span class=\"line\">date: YYYY-MM-DD HH:mm:ss </span><br><span class=\"line\">categories: misc</span><br><span class=\"line\">tags: [tag1, tag2]</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>文章太长则需要手动添加<code>&lt;!-- more --&gt;</code>以显示<code>阅读全文</code>。</p>\n<h3 id=\"部署-Git\"><a href=\"#部署-Git\" class=\"headerlink\" title=\"部署 (Git)\"></a>部署 (Git)</h3><p>部署前可以先本地运行试看效果，在根目录运行服务器命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$hexo server 简写 hexo s</span><br></pre></td></tr></table></figure></p>\n<p>然后打开浏览器访问查看博客（默认：<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a> ）</p>\n<p>本地试运行的博客没有问题后就可以去部署到Github上了。</p>\n<ol>\n<li><p>本地配置deploy,打开根目录<code>_config.yml</code>。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  - type: git</span><br><span class=\"line\">    repo: git@github.com:blackchy/blackchy.github.io.git</span><br><span class=\"line\">    branch: [master]</span><br><span class=\"line\">    message: a commit message</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装hexo-deployer-git</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>执行部署</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g -d</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ul>\n<li>由于Jekyll上传github服务器会自动生成并部署，而Hexo需要本地生成静态文件再上传，所以需要另起一个分支存放hexo源码。</li>\n<li>通过git克隆下来的theme、js，删除对应的.git文件夹。</li>\n</ul>\n<hr>\n<p><b>至此，迁移完毕。</b></p>"},{"title":"RxBus的使用","date":"2018-12-10T16:00:01.000Z","_content":"EventBus是一款针对Android优化的发布-订阅事件总线，它简化了应用程序内各组件间、组件与后台线程间的通信，优点是更加简洁、更优雅、开销更小，且将发送者和接收者解耦。而RxBus是使用RxJava实现事件总线的一中思想，比EventBus更方便。简单来说RxBus的作用就是方便组件之间的交互，当然，项目中能避免使用RxBus和EventBus就尽量不用。\n<!-- more -->\n\n### 配置\n\n[RxBinding][2]是[JakeWharton][1]的一个库，可以响应式的方式处理UI的响应问题，当中已经依赖了RxJava等库，不需要重复依赖。也可以不用RxBingding而直接依赖RxJava的相关库。\n```\ncompile 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1'\n```\n\n### 使用\n\nRxBus类：\n```\nprivate Subject<Object> bus = PublishSubject.create().toSerialized();\n\npublic void post(Object o) {\n  bus.onNext(o);\n}\n\npublic <T> Observable<T> toObservable(Class<T> event) {\n  return bus.ofType(event).onErrorReturn(new Function<Throwable, T>() {\n    @Override public T apply(@NonNull Throwable throwable) throws Exception {\n      return null;\n    }\n  }).filter(new Predicate<T>() {\n    @Override public boolean test(@NonNull T t) throws Exception {\n      return t != null;\n    }\n  }).observeOn(AndroidSchedulers.mainThread());\n}\n```\nBaseFragment类,统一处理所有订阅：\n```\nprivate CompositeDisposable mCompositeDisposable;\n\n//create方法中：\nmCompositeDisposable = new CompositeDisposable();\n\nprotected void addDisposable(Disposable mDisposable) {\n  if (mCompositeDisposable == null) {\n    mCompositeDisposable = new CompositeDisposable();\n  }\n  mCompositeDisposable.add(mDisposable);\n}\nprivate void clearDisposable() {\n  if (mCompositeDisposable != null) {\n    mCompositeDisposable.clear();\n  }\n}\n\n//destroy方法中：\nclearDisposable();\n```\n发送者Fragment：\n```\nbtnSend.setOnClickListener(new View.OnClickListener() {\n    @Override public void onClick(View view) {\n      RxBus.getInstance().post(new MessageEvent(DateUtil.getCurrentTime(), \"商城界面的事件\"));\n    }\n  });\n```\n接收者Fragment\n```\n//写在初始化方法中，随时准备接收事件\naddDisposable(RxBus.getInstance()\n        .toObservable(MessageEvent.class)\n        .observeOn(AndroidSchedulers.mainThread())\n        .subscribe(new Consumer<MessageEvent>() {\n          @Override public void accept(MessageEvent messageEvent) throws Exception {\n            tvHomeAccept.setText(messageEvent.getTime() + \"\\n接收到 \" + messageEvent.getMessage());\n          }\n        }));\n```\n\n### 最后\n* 效果\n<img src=\"/uploads/rxbus/rxbus.gif\" width=300 />\n* [项目地址][4]\n---------\n\n<b>完</b>\n\n[1]:https://github.com/JakeWharton\n[2]:https://github.com/JakeWharton/RxBinding\n[3]:/uploads/rxbus/rxbus.gif\n[4]:https://github.com/blackchy/RxBusExample","source":"_posts/2018-12-11-RxBus.md","raw":"---\ntitle: RxBus的使用\ndate: 2018-12-11 00:00:01\ncategories: android\ntags: rx\n---\nEventBus是一款针对Android优化的发布-订阅事件总线，它简化了应用程序内各组件间、组件与后台线程间的通信，优点是更加简洁、更优雅、开销更小，且将发送者和接收者解耦。而RxBus是使用RxJava实现事件总线的一中思想，比EventBus更方便。简单来说RxBus的作用就是方便组件之间的交互，当然，项目中能避免使用RxBus和EventBus就尽量不用。\n<!-- more -->\n\n### 配置\n\n[RxBinding][2]是[JakeWharton][1]的一个库，可以响应式的方式处理UI的响应问题，当中已经依赖了RxJava等库，不需要重复依赖。也可以不用RxBingding而直接依赖RxJava的相关库。\n```\ncompile 'com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1'\n```\n\n### 使用\n\nRxBus类：\n```\nprivate Subject<Object> bus = PublishSubject.create().toSerialized();\n\npublic void post(Object o) {\n  bus.onNext(o);\n}\n\npublic <T> Observable<T> toObservable(Class<T> event) {\n  return bus.ofType(event).onErrorReturn(new Function<Throwable, T>() {\n    @Override public T apply(@NonNull Throwable throwable) throws Exception {\n      return null;\n    }\n  }).filter(new Predicate<T>() {\n    @Override public boolean test(@NonNull T t) throws Exception {\n      return t != null;\n    }\n  }).observeOn(AndroidSchedulers.mainThread());\n}\n```\nBaseFragment类,统一处理所有订阅：\n```\nprivate CompositeDisposable mCompositeDisposable;\n\n//create方法中：\nmCompositeDisposable = new CompositeDisposable();\n\nprotected void addDisposable(Disposable mDisposable) {\n  if (mCompositeDisposable == null) {\n    mCompositeDisposable = new CompositeDisposable();\n  }\n  mCompositeDisposable.add(mDisposable);\n}\nprivate void clearDisposable() {\n  if (mCompositeDisposable != null) {\n    mCompositeDisposable.clear();\n  }\n}\n\n//destroy方法中：\nclearDisposable();\n```\n发送者Fragment：\n```\nbtnSend.setOnClickListener(new View.OnClickListener() {\n    @Override public void onClick(View view) {\n      RxBus.getInstance().post(new MessageEvent(DateUtil.getCurrentTime(), \"商城界面的事件\"));\n    }\n  });\n```\n接收者Fragment\n```\n//写在初始化方法中，随时准备接收事件\naddDisposable(RxBus.getInstance()\n        .toObservable(MessageEvent.class)\n        .observeOn(AndroidSchedulers.mainThread())\n        .subscribe(new Consumer<MessageEvent>() {\n          @Override public void accept(MessageEvent messageEvent) throws Exception {\n            tvHomeAccept.setText(messageEvent.getTime() + \"\\n接收到 \" + messageEvent.getMessage());\n          }\n        }));\n```\n\n### 最后\n* 效果\n<img src=\"/uploads/rxbus/rxbus.gif\" width=300 />\n* [项目地址][4]\n---------\n\n<b>完</b>\n\n[1]:https://github.com/JakeWharton\n[2]:https://github.com/JakeWharton/RxBinding\n[3]:/uploads/rxbus/rxbus.gif\n[4]:https://github.com/blackchy/RxBusExample","slug":"2018-12-11-RxBus","published":1,"updated":"2018-12-18T01:06:21.591Z","_id":"cjpmbawdw0008psugh2b4z2jp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>EventBus是一款针对Android优化的发布-订阅事件总线，它简化了应用程序内各组件间、组件与后台线程间的通信，优点是更加简洁、更优雅、开销更小，且将发送者和接收者解耦。而RxBus是使用RxJava实现事件总线的一中思想，比EventBus更方便。简单来说RxBus的作用就是方便组件之间的交互，当然，项目中能避免使用RxBus和EventBus就尽量不用。<br><a id=\"more\"></a></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p><a href=\"https://github.com/JakeWharton/RxBinding\" target=\"_blank\" rel=\"noopener\">RxBinding</a>是<a href=\"https://github.com/JakeWharton\" target=\"_blank\" rel=\"noopener\">JakeWharton</a>的一个库，可以响应式的方式处理UI的响应问题，当中已经依赖了RxJava等库，不需要重复依赖。也可以不用RxBingding而直接依赖RxJava的相关库。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1&apos;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>RxBus类：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private Subject&lt;Object&gt; bus = PublishSubject.create().toSerialized();</span><br><span class=\"line\"></span><br><span class=\"line\">public void post(Object o) &#123;</span><br><span class=\"line\">  bus.onNext(o);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; event) &#123;</span><br><span class=\"line\">  return bus.ofType(event).onErrorReturn(new Function&lt;Throwable, T&gt;() &#123;</span><br><span class=\"line\">    @Override public T apply(@NonNull Throwable throwable) throws Exception &#123;</span><br><span class=\"line\">      return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).filter(new Predicate&lt;T&gt;() &#123;</span><br><span class=\"line\">    @Override public boolean test(@NonNull T t) throws Exception &#123;</span><br><span class=\"line\">      return t != null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).observeOn(AndroidSchedulers.mainThread());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>BaseFragment类,统一处理所有订阅：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private CompositeDisposable mCompositeDisposable;</span><br><span class=\"line\"></span><br><span class=\"line\">//create方法中：</span><br><span class=\"line\">mCompositeDisposable = new CompositeDisposable();</span><br><span class=\"line\"></span><br><span class=\"line\">protected void addDisposable(Disposable mDisposable) &#123;</span><br><span class=\"line\">  if (mCompositeDisposable == null) &#123;</span><br><span class=\"line\">    mCompositeDisposable = new CompositeDisposable();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mCompositeDisposable.add(mDisposable);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">private void clearDisposable() &#123;</span><br><span class=\"line\">  if (mCompositeDisposable != null) &#123;</span><br><span class=\"line\">    mCompositeDisposable.clear();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//destroy方法中：</span><br><span class=\"line\">clearDisposable();</span><br></pre></td></tr></table></figure></p>\n<p>发送者Fragment：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btnSend.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">    @Override public void onClick(View view) &#123;</span><br><span class=\"line\">      RxBus.getInstance().post(new MessageEvent(DateUtil.getCurrentTime(), &quot;商城界面的事件&quot;));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>接收者Fragment<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//写在初始化方法中，随时准备接收事件</span><br><span class=\"line\">addDisposable(RxBus.getInstance()</span><br><span class=\"line\">        .toObservable(MessageEvent.class)</span><br><span class=\"line\">        .observeOn(AndroidSchedulers.mainThread())</span><br><span class=\"line\">        .subscribe(new Consumer&lt;MessageEvent&gt;() &#123;</span><br><span class=\"line\">          @Override public void accept(MessageEvent messageEvent) throws Exception &#123;</span><br><span class=\"line\">            tvHomeAccept.setText(messageEvent.getTime() + &quot;\\n接收到 &quot; + messageEvent.getMessage());</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;));</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><ul>\n<li>效果<br><img src=\"/uploads/rxbus/rxbus.gif\" width=\"300\"></li>\n<li><a href=\"https://github.com/blackchy/RxBusExample\" target=\"_blank\" rel=\"noopener\">项目地址</a></li>\n</ul>\n<hr>\n<p><b>完</b></p>\n","site":{"data":{}},"excerpt":"<p>EventBus是一款针对Android优化的发布-订阅事件总线，它简化了应用程序内各组件间、组件与后台线程间的通信，优点是更加简洁、更优雅、开销更小，且将发送者和接收者解耦。而RxBus是使用RxJava实现事件总线的一中思想，比EventBus更方便。简单来说RxBus的作用就是方便组件之间的交互，当然，项目中能避免使用RxBus和EventBus就尽量不用。<br>","more":"</p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p><a href=\"https://github.com/JakeWharton/RxBinding\" target=\"_blank\" rel=\"noopener\">RxBinding</a>是<a href=\"https://github.com/JakeWharton\" target=\"_blank\" rel=\"noopener\">JakeWharton</a>的一个库，可以响应式的方式处理UI的响应问题，当中已经依赖了RxJava等库，不需要重复依赖。也可以不用RxBingding而直接依赖RxJava的相关库。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;com.jakewharton.rxbinding3:rxbinding:3.0.0-alpha1&apos;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>RxBus类：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private Subject&lt;Object&gt; bus = PublishSubject.create().toSerialized();</span><br><span class=\"line\"></span><br><span class=\"line\">public void post(Object o) &#123;</span><br><span class=\"line\">  bus.onNext(o);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public &lt;T&gt; Observable&lt;T&gt; toObservable(Class&lt;T&gt; event) &#123;</span><br><span class=\"line\">  return bus.ofType(event).onErrorReturn(new Function&lt;Throwable, T&gt;() &#123;</span><br><span class=\"line\">    @Override public T apply(@NonNull Throwable throwable) throws Exception &#123;</span><br><span class=\"line\">      return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).filter(new Predicate&lt;T&gt;() &#123;</span><br><span class=\"line\">    @Override public boolean test(@NonNull T t) throws Exception &#123;</span><br><span class=\"line\">      return t != null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;).observeOn(AndroidSchedulers.mainThread());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>BaseFragment类,统一处理所有订阅：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private CompositeDisposable mCompositeDisposable;</span><br><span class=\"line\"></span><br><span class=\"line\">//create方法中：</span><br><span class=\"line\">mCompositeDisposable = new CompositeDisposable();</span><br><span class=\"line\"></span><br><span class=\"line\">protected void addDisposable(Disposable mDisposable) &#123;</span><br><span class=\"line\">  if (mCompositeDisposable == null) &#123;</span><br><span class=\"line\">    mCompositeDisposable = new CompositeDisposable();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  mCompositeDisposable.add(mDisposable);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">private void clearDisposable() &#123;</span><br><span class=\"line\">  if (mCompositeDisposable != null) &#123;</span><br><span class=\"line\">    mCompositeDisposable.clear();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">//destroy方法中：</span><br><span class=\"line\">clearDisposable();</span><br></pre></td></tr></table></figure></p>\n<p>发送者Fragment：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btnSend.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">    @Override public void onClick(View view) &#123;</span><br><span class=\"line\">      RxBus.getInstance().post(new MessageEvent(DateUtil.getCurrentTime(), &quot;商城界面的事件&quot;));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>接收者Fragment<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//写在初始化方法中，随时准备接收事件</span><br><span class=\"line\">addDisposable(RxBus.getInstance()</span><br><span class=\"line\">        .toObservable(MessageEvent.class)</span><br><span class=\"line\">        .observeOn(AndroidSchedulers.mainThread())</span><br><span class=\"line\">        .subscribe(new Consumer&lt;MessageEvent&gt;() &#123;</span><br><span class=\"line\">          @Override public void accept(MessageEvent messageEvent) throws Exception &#123;</span><br><span class=\"line\">            tvHomeAccept.setText(messageEvent.getTime() + &quot;\\n接收到 &quot; + messageEvent.getMessage());</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;));</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><ul>\n<li>效果<br><img src=\"/uploads/rxbus/rxbus.gif\" width=\"300\"></li>\n<li><a href=\"https://github.com/blackchy/RxBusExample\" target=\"_blank\" rel=\"noopener\">项目地址</a></li>\n</ul>\n<hr>\n<p><b>完</b></p>"},{"title":"Git:操作和问题的收集","date":"2018-09-16T16:00:01.000Z","_content":"\nGit是一个很好的工具，偶尔想用某个命令的时候却突然忘记了:(，网上再去查找又有点浪费时间，所以收集了一些常用的命令，顺带一些其他相关的东西。\n<!-- more -->\n\n### Git安装\n\nGit安装、配置等教程省略，网上搜索。\n\n### GitHub\n\nGithub上创建空项目会提示如何初步使用\n\n![img][1]\n\n### Git操作收集\n\n1. git变基\n\n\t在需要变基的分支上：\n\n\t`#git rebase <other branch>`\n\n\t如果有冲突，解决冲突后\n\n\t`#git rebase --continue`\n\n2. git合并commit并强推\n\n\t查看有几笔提交\t\n\n\t`#git log` \n\n\t编辑commit（n为commit数量）\n\n\t`#git rebase -i HEAD~n`  \n\n\t强推到远程\n\n\t`#git push -f origin chy/add-market`\n\n\t终止rebase\n\n\t`#git rebase --abort` \n\n3. git合并分支到new主分支\n\n\t`#git rebase -i new-master`\n\n4. git合并其他分支到当前分支\n\n\t`#git merge <other branch>`\n\n\t如果没有冲突，直接就完成了\n\n\t如果有冲突，则解决冲突，然后执行：\n\n\t`#git add .`\n\n\t`#git commit`\n\n5. git回到之前的节点\n\n\t(首先`#git log`查看节点)\n\t\n\t回到节点06b3680，并保留更改\n\n\t`#git reset --soft 06b3680`\n\n\t回到节点06b3680，并丢弃修改\n\n\t`#git reset --hard 06b3680`\n\n6.  git获取远程分支\n\n\t`#git fetch`\n\n\t`#git checkout -b local-branchname origin/remote_branchname`\n\n7. git强制覆盖本地文件\n\n\t`#git fetch --all`\n\n\t`#git reset --hard origin/master`\n\n\t`#git pull`\n\n8. git强制跳转到某个版本\n\n\t查看所有的commit\n\n\t`git log -g`\n\n\t强制跳转到某个commit版本\n\n\t`git reset --hard d87da1f81de631fbe68c60c1e192aebce5a3cc72`\n\n9. git提交、拉取、推送\n\n\t提交全部\n\n\t`#git add -A`\n\n\t`#git commit -m \"Your mark!\"`\n\n\t拉取同步远程仓库master分支\n\n\t`#git pull origin master`\n\n\t推送到远程仓库master分支\n\n\t`#git push origin master`\n\n10. git修改远程仓库地址\n\n\t`#git remote set-url origin http://xxxxx.git`\n\n11. git暂存文件\n\n\t将文件放入暂存区\n\n\t`#git stash `\n\n\t弹出暂存区的文件\n\n\t`#git stash pop `\n\n\t丢弃暂存区的文件\n\n\t`#git stash drop `\n\n\n### Git问题收集\n\n1. `error: RPC failed; result=22, HTTP code = 411`\n\n\t`fatal: The remote end hung up unexpectedly`\n\n\t`fatal: The remote end hung up unexpectedly`\n\t\n\t这个是因为http buffer不够造成的，可以简单配置git来解决：\n\n\tgit config http.postBuffer 67108864 2.想要把已经push的文件（夹）加入到.ignore中 <br> 直接添加到.ignore中是不能成功的，因为已经push到服务器了，需要先删除本地缓存的文件：\n\n\tgit rm -r --cached .idea 然后再将其添加到.ignore中，最后git push就ok了\n\n\t有些文件无法删除，比如sh.exe.stackdump，亦可用此法。\n\t\n\t修正：\n\n\t处理sh.exe.stackdump文件方法：\n\t\n\t1. 关闭SourceTree\n\t\n\t2. AndroidStudio中删除sh.exe.stackdump文件\n\t\n\t3. 再进行git相关操作，不会因为sh.exe.stackdump文件而出现问题\n\n2. `fatal: Unable to create '/.git/index.lock': File exists.`\n\n\t解决办法：\n\n\t`$rm -f ./.git/index.lock`\n\n\t`In your repository directory.`\n\n### Pro Git(中文版) 链接\n\n[Pro Git(中文版)][2]\n\n[1]:/uploads/git-operation-probem/img_git_new_repository.jpg\n[2]:https://gitee.com/progit/index.html","source":"_posts/2018-09-17-Git-Operations-Problem.md","raw":"---\ntitle: Git:操作和问题的收集\ndate: 2018-09-17 00:00:01\ncategories: git\ntags: git\n---\n\nGit是一个很好的工具，偶尔想用某个命令的时候却突然忘记了:(，网上再去查找又有点浪费时间，所以收集了一些常用的命令，顺带一些其他相关的东西。\n<!-- more -->\n\n### Git安装\n\nGit安装、配置等教程省略，网上搜索。\n\n### GitHub\n\nGithub上创建空项目会提示如何初步使用\n\n![img][1]\n\n### Git操作收集\n\n1. git变基\n\n\t在需要变基的分支上：\n\n\t`#git rebase <other branch>`\n\n\t如果有冲突，解决冲突后\n\n\t`#git rebase --continue`\n\n2. git合并commit并强推\n\n\t查看有几笔提交\t\n\n\t`#git log` \n\n\t编辑commit（n为commit数量）\n\n\t`#git rebase -i HEAD~n`  \n\n\t强推到远程\n\n\t`#git push -f origin chy/add-market`\n\n\t终止rebase\n\n\t`#git rebase --abort` \n\n3. git合并分支到new主分支\n\n\t`#git rebase -i new-master`\n\n4. git合并其他分支到当前分支\n\n\t`#git merge <other branch>`\n\n\t如果没有冲突，直接就完成了\n\n\t如果有冲突，则解决冲突，然后执行：\n\n\t`#git add .`\n\n\t`#git commit`\n\n5. git回到之前的节点\n\n\t(首先`#git log`查看节点)\n\t\n\t回到节点06b3680，并保留更改\n\n\t`#git reset --soft 06b3680`\n\n\t回到节点06b3680，并丢弃修改\n\n\t`#git reset --hard 06b3680`\n\n6.  git获取远程分支\n\n\t`#git fetch`\n\n\t`#git checkout -b local-branchname origin/remote_branchname`\n\n7. git强制覆盖本地文件\n\n\t`#git fetch --all`\n\n\t`#git reset --hard origin/master`\n\n\t`#git pull`\n\n8. git强制跳转到某个版本\n\n\t查看所有的commit\n\n\t`git log -g`\n\n\t强制跳转到某个commit版本\n\n\t`git reset --hard d87da1f81de631fbe68c60c1e192aebce5a3cc72`\n\n9. git提交、拉取、推送\n\n\t提交全部\n\n\t`#git add -A`\n\n\t`#git commit -m \"Your mark!\"`\n\n\t拉取同步远程仓库master分支\n\n\t`#git pull origin master`\n\n\t推送到远程仓库master分支\n\n\t`#git push origin master`\n\n10. git修改远程仓库地址\n\n\t`#git remote set-url origin http://xxxxx.git`\n\n11. git暂存文件\n\n\t将文件放入暂存区\n\n\t`#git stash `\n\n\t弹出暂存区的文件\n\n\t`#git stash pop `\n\n\t丢弃暂存区的文件\n\n\t`#git stash drop `\n\n\n### Git问题收集\n\n1. `error: RPC failed; result=22, HTTP code = 411`\n\n\t`fatal: The remote end hung up unexpectedly`\n\n\t`fatal: The remote end hung up unexpectedly`\n\t\n\t这个是因为http buffer不够造成的，可以简单配置git来解决：\n\n\tgit config http.postBuffer 67108864 2.想要把已经push的文件（夹）加入到.ignore中 <br> 直接添加到.ignore中是不能成功的，因为已经push到服务器了，需要先删除本地缓存的文件：\n\n\tgit rm -r --cached .idea 然后再将其添加到.ignore中，最后git push就ok了\n\n\t有些文件无法删除，比如sh.exe.stackdump，亦可用此法。\n\t\n\t修正：\n\n\t处理sh.exe.stackdump文件方法：\n\t\n\t1. 关闭SourceTree\n\t\n\t2. AndroidStudio中删除sh.exe.stackdump文件\n\t\n\t3. 再进行git相关操作，不会因为sh.exe.stackdump文件而出现问题\n\n2. `fatal: Unable to create '/.git/index.lock': File exists.`\n\n\t解决办法：\n\n\t`$rm -f ./.git/index.lock`\n\n\t`In your repository directory.`\n\n### Pro Git(中文版) 链接\n\n[Pro Git(中文版)][2]\n\n[1]:/uploads/git-operation-probem/img_git_new_repository.jpg\n[2]:https://gitee.com/progit/index.html","slug":"2018-09-17-Git-Operations-Problem","published":1,"updated":"2018-12-05T07:20:49.634Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpmbawe0000dpsugxoahlhlm","content":"<p>Git是一个很好的工具，偶尔想用某个命令的时候却突然忘记了:(，网上再去查找又有点浪费时间，所以收集了一些常用的命令，顺带一些其他相关的东西。<br><a id=\"more\"></a></p>\n<h3 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h3><p>Git安装、配置等教程省略，网上搜索。</p>\n<h3 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h3><p>Github上创建空项目会提示如何初步使用</p>\n<p><img src=\"/uploads/git-operation-probem/img_git_new_repository.jpg\" alt=\"img\"></p>\n<h3 id=\"Git操作收集\"><a href=\"#Git操作收集\" class=\"headerlink\" title=\"Git操作收集\"></a>Git操作收集</h3><ol>\n<li><p>git变基</p>\n<p> 在需要变基的分支上：</p>\n<p> <code>#git rebase &lt;other branch&gt;</code></p>\n<p> 如果有冲突，解决冲突后</p>\n<p> <code>#git rebase --continue</code></p>\n</li>\n<li><p>git合并commit并强推</p>\n<p> 查看有几笔提交    </p>\n<p> <code>#git log</code> </p>\n<p> 编辑commit（n为commit数量）</p>\n<p> <code>#git rebase -i HEAD~n</code>  </p>\n<p> 强推到远程</p>\n<p> <code>#git push -f origin chy/add-market</code></p>\n<p> 终止rebase</p>\n<p> <code>#git rebase --abort</code> </p>\n</li>\n<li><p>git合并分支到new主分支</p>\n<p> <code>#git rebase -i new-master</code></p>\n</li>\n<li><p>git合并其他分支到当前分支</p>\n<p> <code>#git merge &lt;other branch&gt;</code></p>\n<p> 如果没有冲突，直接就完成了</p>\n<p> 如果有冲突，则解决冲突，然后执行：</p>\n<p> <code>#git add .</code></p>\n<p> <code>#git commit</code></p>\n</li>\n<li><p>git回到之前的节点</p>\n<p> (首先<code>#git log</code>查看节点)</p>\n<p> 回到节点06b3680，并保留更改</p>\n<p> <code>#git reset --soft 06b3680</code></p>\n<p> 回到节点06b3680，并丢弃修改</p>\n<p> <code>#git reset --hard 06b3680</code></p>\n</li>\n<li><p>git获取远程分支</p>\n<p><code>#git fetch</code></p>\n<p><code>#git checkout -b local-branchname origin/remote_branchname</code></p>\n</li>\n<li><p>git强制覆盖本地文件</p>\n<p> <code>#git fetch --all</code></p>\n<p> <code>#git reset --hard origin/master</code></p>\n<p> <code>#git pull</code></p>\n</li>\n<li><p>git强制跳转到某个版本</p>\n<p> 查看所有的commit</p>\n<p> <code>git log -g</code></p>\n<p> 强制跳转到某个commit版本</p>\n<p> <code>git reset --hard d87da1f81de631fbe68c60c1e192aebce5a3cc72</code></p>\n</li>\n<li><p>git提交、拉取、推送</p>\n<p> 提交全部</p>\n<p> <code>#git add -A</code></p>\n<p> <code>#git commit -m &quot;Your mark!&quot;</code></p>\n<p> 拉取同步远程仓库master分支</p>\n<p> <code>#git pull origin master</code></p>\n<p> 推送到远程仓库master分支</p>\n<p> <code>#git push origin master</code></p>\n</li>\n<li><p>git修改远程仓库地址</p>\n<p><code>#git remote set-url origin http://xxxxx.git</code></p>\n</li>\n<li><p>git暂存文件</p>\n<p>将文件放入暂存区</p>\n<p><code>#git stash</code></p>\n<p>弹出暂存区的文件</p>\n<p><code>#git stash pop</code></p>\n<p>丢弃暂存区的文件</p>\n<p><code>#git stash drop</code></p>\n</li>\n</ol>\n<h3 id=\"Git问题收集\"><a href=\"#Git问题收集\" class=\"headerlink\" title=\"Git问题收集\"></a>Git问题收集</h3><ol>\n<li><p><code>error: RPC failed; result=22, HTTP code = 411</code></p>\n<p> <code>fatal: The remote end hung up unexpectedly</code></p>\n<p> <code>fatal: The remote end hung up unexpectedly</code></p>\n<p> 这个是因为http buffer不够造成的，可以简单配置git来解决：</p>\n<p> git config http.postBuffer 67108864 2.想要把已经push的文件（夹）加入到.ignore中 <br> 直接添加到.ignore中是不能成功的，因为已经push到服务器了，需要先删除本地缓存的文件：</p>\n<p> git rm -r –cached .idea 然后再将其添加到.ignore中，最后git push就ok了</p>\n<p> 有些文件无法删除，比如sh.exe.stackdump，亦可用此法。</p>\n<p> 修正：</p>\n<p> 处理sh.exe.stackdump文件方法：</p>\n<ol>\n<li><p>关闭SourceTree</p>\n</li>\n<li><p>AndroidStudio中删除sh.exe.stackdump文件</p>\n</li>\n<li><p>再进行git相关操作，不会因为sh.exe.stackdump文件而出现问题</p>\n</li>\n</ol>\n</li>\n<li><p><code>fatal: Unable to create &#39;/.git/index.lock&#39;: File exists.</code></p>\n<p> 解决办法：</p>\n<p> <code>$rm -f ./.git/index.lock</code></p>\n<p> <code>In your repository directory.</code></p>\n</li>\n</ol>\n<h3 id=\"Pro-Git-中文版-链接\"><a href=\"#Pro-Git-中文版-链接\" class=\"headerlink\" title=\"Pro Git(中文版) 链接\"></a>Pro Git(中文版) 链接</h3><p><a href=\"https://gitee.com/progit/index.html\" target=\"_blank\" rel=\"noopener\">Pro Git(中文版)</a></p>\n","site":{"data":{}},"excerpt":"<p>Git是一个很好的工具，偶尔想用某个命令的时候却突然忘记了:(，网上再去查找又有点浪费时间，所以收集了一些常用的命令，顺带一些其他相关的东西。<br>","more":"</p>\n<h3 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h3><p>Git安装、配置等教程省略，网上搜索。</p>\n<h3 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h3><p>Github上创建空项目会提示如何初步使用</p>\n<p><img src=\"/uploads/git-operation-probem/img_git_new_repository.jpg\" alt=\"img\"></p>\n<h3 id=\"Git操作收集\"><a href=\"#Git操作收集\" class=\"headerlink\" title=\"Git操作收集\"></a>Git操作收集</h3><ol>\n<li><p>git变基</p>\n<p> 在需要变基的分支上：</p>\n<p> <code>#git rebase &lt;other branch&gt;</code></p>\n<p> 如果有冲突，解决冲突后</p>\n<p> <code>#git rebase --continue</code></p>\n</li>\n<li><p>git合并commit并强推</p>\n<p> 查看有几笔提交    </p>\n<p> <code>#git log</code> </p>\n<p> 编辑commit（n为commit数量）</p>\n<p> <code>#git rebase -i HEAD~n</code>  </p>\n<p> 强推到远程</p>\n<p> <code>#git push -f origin chy/add-market</code></p>\n<p> 终止rebase</p>\n<p> <code>#git rebase --abort</code> </p>\n</li>\n<li><p>git合并分支到new主分支</p>\n<p> <code>#git rebase -i new-master</code></p>\n</li>\n<li><p>git合并其他分支到当前分支</p>\n<p> <code>#git merge &lt;other branch&gt;</code></p>\n<p> 如果没有冲突，直接就完成了</p>\n<p> 如果有冲突，则解决冲突，然后执行：</p>\n<p> <code>#git add .</code></p>\n<p> <code>#git commit</code></p>\n</li>\n<li><p>git回到之前的节点</p>\n<p> (首先<code>#git log</code>查看节点)</p>\n<p> 回到节点06b3680，并保留更改</p>\n<p> <code>#git reset --soft 06b3680</code></p>\n<p> 回到节点06b3680，并丢弃修改</p>\n<p> <code>#git reset --hard 06b3680</code></p>\n</li>\n<li><p>git获取远程分支</p>\n<p><code>#git fetch</code></p>\n<p><code>#git checkout -b local-branchname origin/remote_branchname</code></p>\n</li>\n<li><p>git强制覆盖本地文件</p>\n<p> <code>#git fetch --all</code></p>\n<p> <code>#git reset --hard origin/master</code></p>\n<p> <code>#git pull</code></p>\n</li>\n<li><p>git强制跳转到某个版本</p>\n<p> 查看所有的commit</p>\n<p> <code>git log -g</code></p>\n<p> 强制跳转到某个commit版本</p>\n<p> <code>git reset --hard d87da1f81de631fbe68c60c1e192aebce5a3cc72</code></p>\n</li>\n<li><p>git提交、拉取、推送</p>\n<p> 提交全部</p>\n<p> <code>#git add -A</code></p>\n<p> <code>#git commit -m &quot;Your mark!&quot;</code></p>\n<p> 拉取同步远程仓库master分支</p>\n<p> <code>#git pull origin master</code></p>\n<p> 推送到远程仓库master分支</p>\n<p> <code>#git push origin master</code></p>\n</li>\n<li><p>git修改远程仓库地址</p>\n<p><code>#git remote set-url origin http://xxxxx.git</code></p>\n</li>\n<li><p>git暂存文件</p>\n<p>将文件放入暂存区</p>\n<p><code>#git stash</code></p>\n<p>弹出暂存区的文件</p>\n<p><code>#git stash pop</code></p>\n<p>丢弃暂存区的文件</p>\n<p><code>#git stash drop</code></p>\n</li>\n</ol>\n<h3 id=\"Git问题收集\"><a href=\"#Git问题收集\" class=\"headerlink\" title=\"Git问题收集\"></a>Git问题收集</h3><ol>\n<li><p><code>error: RPC failed; result=22, HTTP code = 411</code></p>\n<p> <code>fatal: The remote end hung up unexpectedly</code></p>\n<p> <code>fatal: The remote end hung up unexpectedly</code></p>\n<p> 这个是因为http buffer不够造成的，可以简单配置git来解决：</p>\n<p> git config http.postBuffer 67108864 2.想要把已经push的文件（夹）加入到.ignore中 <br> 直接添加到.ignore中是不能成功的，因为已经push到服务器了，需要先删除本地缓存的文件：</p>\n<p> git rm -r –cached .idea 然后再将其添加到.ignore中，最后git push就ok了</p>\n<p> 有些文件无法删除，比如sh.exe.stackdump，亦可用此法。</p>\n<p> 修正：</p>\n<p> 处理sh.exe.stackdump文件方法：</p>\n<ol>\n<li><p>关闭SourceTree</p>\n</li>\n<li><p>AndroidStudio中删除sh.exe.stackdump文件</p>\n</li>\n<li><p>再进行git相关操作，不会因为sh.exe.stackdump文件而出现问题</p>\n</li>\n</ol>\n</li>\n<li><p><code>fatal: Unable to create &#39;/.git/index.lock&#39;: File exists.</code></p>\n<p> 解决办法：</p>\n<p> <code>$rm -f ./.git/index.lock</code></p>\n<p> <code>In your repository directory.</code></p>\n</li>\n</ol>\n<h3 id=\"Pro-Git-中文版-链接\"><a href=\"#Pro-Git-中文版-链接\" class=\"headerlink\" title=\"Pro Git(中文版) 链接\"></a>Pro Git(中文版) 链接</h3><p><a href=\"https://gitee.com/progit/index.html\" target=\"_blank\" rel=\"noopener\">Pro Git(中文版)</a></p>"},{"title":"GitHub Pages与阿里云域名的绑定","date":"2018-09-14T16:00:01.000Z","_content":"\n搭建好自己的个人博客过后，会发现博客的访问地址是github.io后缀，于是我在阿里云买了一个域名，并把这个域名指向了我的博客服务器地址。\n<!-- more -->\n\n### 获取github pages的ip地址\n\n![img][1]\n\n### 配置阿里云域名解析\n\n![img][2]\n\n![img][3]\n\n### 配置github pages的custom domain\n\n进入github pages项目的设置，将解析的域名地址添加到custom domain中并保存。\n\n![img][4]\n\n### 验证\n\nblog : [blackchy's blog][5]\n\n[1]:/uploads/githubpages-binding-aliyun/ping.png\n[2]:/uploads/githubpages-binding-aliyun/peiz0.png\n[3]:/uploads/githubpages-binding-aliyun/peiz.png\n[4]:/uploads/githubpages-binding-aliyun/setting.png\n[5]:http://blackchy.com","source":"_posts/2018-09-15-GitHubPages-Binding-Aliyun.md","raw":"---\ntitle: GitHub Pages与阿里云域名的绑定\ndate: 2018-09-15 00:00:01\ncategories: misc\ntags: github\n---\n\n搭建好自己的个人博客过后，会发现博客的访问地址是github.io后缀，于是我在阿里云买了一个域名，并把这个域名指向了我的博客服务器地址。\n<!-- more -->\n\n### 获取github pages的ip地址\n\n![img][1]\n\n### 配置阿里云域名解析\n\n![img][2]\n\n![img][3]\n\n### 配置github pages的custom domain\n\n进入github pages项目的设置，将解析的域名地址添加到custom domain中并保存。\n\n![img][4]\n\n### 验证\n\nblog : [blackchy's blog][5]\n\n[1]:/uploads/githubpages-binding-aliyun/ping.png\n[2]:/uploads/githubpages-binding-aliyun/peiz0.png\n[3]:/uploads/githubpages-binding-aliyun/peiz.png\n[4]:/uploads/githubpages-binding-aliyun/setting.png\n[5]:http://blackchy.com","slug":"2018-09-15-GitHubPages-Binding-Aliyun","published":1,"updated":"2018-12-05T06:39:14.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjpmbawem0010psugji8h2dzg","content":"<p>搭建好自己的个人博客过后，会发现博客的访问地址是github.io后缀，于是我在阿里云买了一个域名，并把这个域名指向了我的博客服务器地址。<br><a id=\"more\"></a></p>\n<h3 id=\"获取github-pages的ip地址\"><a href=\"#获取github-pages的ip地址\" class=\"headerlink\" title=\"获取github pages的ip地址\"></a>获取github pages的ip地址</h3><p><img src=\"/uploads/githubpages-binding-aliyun/ping.png\" alt=\"img\"></p>\n<h3 id=\"配置阿里云域名解析\"><a href=\"#配置阿里云域名解析\" class=\"headerlink\" title=\"配置阿里云域名解析\"></a>配置阿里云域名解析</h3><p><img src=\"/uploads/githubpages-binding-aliyun/peiz0.png\" alt=\"img\"></p>\n<p><img src=\"/uploads/githubpages-binding-aliyun/peiz.png\" alt=\"img\"></p>\n<h3 id=\"配置github-pages的custom-domain\"><a href=\"#配置github-pages的custom-domain\" class=\"headerlink\" title=\"配置github pages的custom domain\"></a>配置github pages的custom domain</h3><p>进入github pages项目的设置，将解析的域名地址添加到custom domain中并保存。</p>\n<p><img src=\"/uploads/githubpages-binding-aliyun/setting.png\" alt=\"img\"></p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p>blog : <a href=\"http://blackchy.com\">blackchy’s blog</a></p>\n","site":{"data":{}},"excerpt":"<p>搭建好自己的个人博客过后，会发现博客的访问地址是github.io后缀，于是我在阿里云买了一个域名，并把这个域名指向了我的博客服务器地址。<br>","more":"</p>\n<h3 id=\"获取github-pages的ip地址\"><a href=\"#获取github-pages的ip地址\" class=\"headerlink\" title=\"获取github pages的ip地址\"></a>获取github pages的ip地址</h3><p><img src=\"/uploads/githubpages-binding-aliyun/ping.png\" alt=\"img\"></p>\n<h3 id=\"配置阿里云域名解析\"><a href=\"#配置阿里云域名解析\" class=\"headerlink\" title=\"配置阿里云域名解析\"></a>配置阿里云域名解析</h3><p><img src=\"/uploads/githubpages-binding-aliyun/peiz0.png\" alt=\"img\"></p>\n<p><img src=\"/uploads/githubpages-binding-aliyun/peiz.png\" alt=\"img\"></p>\n<h3 id=\"配置github-pages的custom-domain\"><a href=\"#配置github-pages的custom-domain\" class=\"headerlink\" title=\"配置github pages的custom domain\"></a>配置github pages的custom domain</h3><p>进入github pages项目的设置，将解析的域名地址添加到custom domain中并保存。</p>\n<p><img src=\"/uploads/githubpages-binding-aliyun/setting.png\" alt=\"img\"></p>\n<h3 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h3><p>blog : <a href=\"http://blackchy.com\">blackchy’s blog</a></p>"},{"title":"fmod变声方法简单调用","date":"2018-12-09T16:00:01.000Z","_content":"\n[fmod][1]是一个强大的声音引擎框架，QQ、魔兽世界及其他很多游戏都是使用的这套框架，框架内包含几十种声音类型，还可以修改声音的频率、速度等等。下面来简单调用一下[fmod][1]的变声方法。\n<!-- more -->\n\n### 下载 fmod API\n\n进入[fmod download][2]下载Android API。\n\n![img][3]\n\n### 新建项目\n\n勾选include c/c++ support。\n\n![img][4]\n\n勾选异常检测和安全转换\n\n![img][5]\n\n### 加入API\n\n打开下载之后解压的fmod API目录，到`api/lowlevel`文件夹，把`inc`文件夹及里面的文件全部复制到项目的`app/src/main/cpp`文件夹中,把`lib`文件夹中的所有文件夹和文件复制到项目的`app/libs`文件夹中，jar包要右键`add as library`。\n\n![img][6]\n\n### 配置app/build.gradle\n\nandroid/defaultConfig里新增：\n```\nndk {\n  abiFilters \"armeabi\",\"arm64-v8a\",\"armeabi-v7a\",\"x86\"\n}\n```\nandroid里新增：\n```\nsourceSets.main {\n  jniLibs.srcDirs = ['libs']\n  jni.srcDirs = []\n}\n```\n![img][7]\n\n### 配置app/CMakeLists.txt\n```\ncmake_minimum_required(VERSION 3.4.1)\n\n#-----------------------------------------\nfind_library( log-lib\n              log )\n\nset(my_lib_path ${CMAKE_SOURCE_DIR}/libs)\n\n# 添加三方的so库\nadd_library(libfmod\n            SHARED\n            IMPORTED )\n\n # 指名第三方库的绝对路径\n set_target_properties( libfmod\n                        PROPERTIES IMPORTED_LOCATION\n                        ${my_lib_path}/${ANDROID_ABI}/libfmod.so )\n\n add_library(libfmodL\n             SHARED\n             IMPORTED )\n\n set_target_properties( libfmodL\n                        PROPERTIES IMPORTED_LOCATION\n                        ${my_lib_path}/${ANDROID_ABI}/libfmodL.so )\n\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++11\")\n\n#--------------------------------\nadd_library( # Sets the name of the library.\n             changeVoice\n\n             # Sets the library as a shared library.\n             SHARED\n\n             # Provides a relative path to your source file(s).\n             src/main/cpp/native-lib.cpp )\n\n#---------------------\n# 导入路径，为了让编译时能够寻找到这个文件夹\ninclude_directories(src/main/cpp/inc)\n\n# 链接好三个路径\ntarget_link_libraries( changeVoice\n                       libfmod\n                       libfmodL\n\n                       ${log-lib} )\n```\n\n### 代码部分\n\n布局文件：\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#FFF\"\n    android:gravity=\"center_horizontal\"\n    android:orientation=\"vertical\"\n    android:padding=\"10pt\"\n    >\n\n  <LinearLayout\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      >\n\n    <Button\n        android:id=\"@+id/btn_1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"原声\"\n        />\n\n    <Button\n        android:id=\"@+id/btn_2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"萝莉\"\n        />\n\n\n    <Button\n        android:id=\"@+id/btn_3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"大叔\"\n        />\n  </LinearLayout>\n\n  <LinearLayout\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      >\n\n    <Button\n        android:id=\"@+id/btn_4\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"惊悚\"\n        />\n\n    <Button\n        android:id=\"@+id/btn_5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"搞怪\"\n        />\n\n    <Button\n        android:id=\"@+id/btn_6\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"空灵\"\n        />\n  </LinearLayout>\n</LinearLayout>\n```\njava代码，新建Util类：\n```\npublic class Util {\n\n  //音效的类型\n  public static final int MODE_NORMAL = 0;//正常\n  public static final int MODE_LUOLI = 1;//萝莉\n  public static final int MODE_DASHU = 2;//大叔\n  public static final int MODE_JINGSONG = 3;//惊悚\n  public static final int MODE_GAOGUAI = 4;//搞怪\n  public static final int MODE_KONGLING = 5;//空灵\n\n  /**\n   * 变声\n   *\n   * @param path 声音路径\n   * @param type 变声类型\n   */\n  public static native void voiceChange(String path, int type);\n\n  static {\n    System.loadLibrary(\"fmodL\");\n    System.loadLibrary(\"fmod\");\n    System.loadLibrary(\"changeVoice\");\n  }\n}\n```\njava代码，MainActivity类：\n```\npublic class MainActivity extends AppCompatActivity {\n\n  @Override protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    FMOD.init(this);\n    setContentView(R.layout.activity_main);\n    findViewById(R.id.btn_1).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun1(v);\n      }\n    });\n    findViewById(R.id.btn_2).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun2(v);\n      }\n    });\n    findViewById(R.id.btn_3).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun3(v);\n      }\n    });\n    findViewById(R.id.btn_4).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun4(v);\n      }\n    });\n    findViewById(R.id.btn_5).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun5(v);\n      }\n    });\n    findViewById(R.id.btn_6).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun6(v);\n      }\n    });\n  }\n\n  public void VoiceFun1(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-正常\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_NORMAL);\n      Log.e(\"x---\", \"VoiceFun1\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun2(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-萝莉\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_LUOLI);\n      Log.d(\"jason\", \"VoiceFun2\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun3(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-大叔\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_DASHU);\n      Log.e(\"x---\", \"VoiceFun3\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun4(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-惊悚\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_JINGSONG);\n      Log.e(\"x---\", \"VoiceFun4\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun5(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-搞笑\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_GAOGUAI);\n      Log.e(\"x---\", \"VoiceFun5\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun6(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-空灵\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_KONGLING);\n      Log.e(\"x---\", \"VoiceFun6\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  @Override protected void onDestroy() {\n    super.onDestroy();\n    FMOD.close();\n  }\n\n  @Override public void onBackPressed() {\n    super.onBackPressed();\n    finish();\n  }\n}\n```\nC++代码，app/src/main/cpp/native-lib.cpp:\n```\n#include <jni.h>\n#include \"inc/fmod.hpp\"\n#include <string>\n\n#include <unistd.h>\n\nusing namespace FMOD;\n\n#define MODE_NORMAL 0\n#define MODE_LUOLI 1\n#define MODE_DASHU 2\n#define MODE_JINGSONG 3\n#define MODE_GAOGUAI 4\n#define MODE_KONGLING 5\n\n#include <android/log.h>\n\n#define LOGI(FORMAT, ...) __android_log_print(ANDROID_LOG_INFO,\"voiceChange\",FORMAT,##__VA_ARGS__);\n#define LOGE(FORMAT, ...) __android_log_print(ANDROID_LOG_ERROR,\"voiceChange\",FORMAT,##__VA_ARGS__);\n\nextern \"C\"\nJNIEXPORT void JNICALL\nJava_com_exp_fmodvoicechange_Util_voiceChange(JNIEnv *env, jclass cls, jstring path_str, jint type) {\n    System * system;\n    Sound * sound;\n    Channel  *channel;\n    DSP *dsp;\n    bool playing= true;\n    float frequency=1;\n\n    //初始化\n    System_Create(&system);\n    system->init(32, FMOD_INIT_NORMAL, NULL);\n\n    //将string转成char*\n    const char* path=env->GetStringUTFChars(path_str,NULL);\n\n    //创建声音\n    system->createSound(path,FMOD_DEFAULT, 0, &sound);\n    try {\n        //根据类型改变声音\n        switch (type) {\n            case MODE_NORMAL:\n                //正常声音\n                system->playSound(sound, 0, false, &channel);\n                break;\n            case MODE_LUOLI:\n                //萝莉\n                //DSP digital signal process\n                //dsp -> 音效 创建fmod中预定义好的音效\n                //FMOD_DSP_TYPE_PITCHSHIFT dsp，提升或者降低音调用的一种音效\n                system->createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &dsp);\n                //提高音效\n                dsp->setParameterFloat(FMOD_DSP_TYPE_PITCHSHIFT, 2.5);\n                //播放声音\n                system->playSound(sound, 0, false, &channel);\n                //将channel添加到dsp\n                channel->addDSP(0, dsp);\n                break;\n            case MODE_DASHU:\n                //大叔\n                system->createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &dsp);\n                //降低声音\n                dsp->setParameterFloat(FMOD_DSP_PITCHSHIFT_PITCH, 0.8);\n                //播放声音\n                system->playSound(sound, 0, false, &channel);\n                //将channel添加到dsp\n                channel->addDSP(0, dsp);\n                break;\n            case MODE_JINGSONG:\n                //惊悚\n                system->createDSPByType(FMOD_DSP_TYPE_TREMOLO, &dsp);\n                dsp->setParameterFloat(FMOD_DSP_TREMOLO_SKEW, 0.5);\n                system->playSound(sound, 0, false, &channel);\n                channel->addDSP(0, dsp);\n                break;\n            case MODE_GAOGUAI:\n                //搞怪\n                //提高说话的速度\n                system->playSound(sound, 0, false, &channel);\n                //frequency  原来的声音速度\n                channel->getFrequency(&frequency);\n                frequency = frequency * 1.6;\n                channel->setFrequency(frequency);\n                break;\n            case MODE_KONGLING:\n                //空灵\n                system->createDSPByType(FMOD_DSP_TYPE_ECHO, &dsp);\n                dsp->setParameterFloat(FMOD_DSP_ECHO_DELAY, 300);\n                dsp->setParameterFloat(FMOD_DSP_ECHO_FEEDBACK, 20);\n                system->playSound(sound, 0, false, &channel);\n                channel->addDSP(0, dsp);\n                break;\n            default:\n                break;\n        }\n    }\n    catch (...){\n        //捕捉异常\n        LOGE(\"%s\",\"发生异常\");\n    }\n    system->update();\n    //释放资源\n    //单位是微秒\n    //每秒钟判断下是否在播放\n    while(playing){\n        channel->isPlaying(&playing);\n        usleep(1000 * 1000);\n    }\n\n    //释放\n    sound->release();\n    system->close();\n    system->release();\n    env->ReleaseStringUTFChars(path_str,path);\n}\n```\n### 最后\n\n* 界面：\n![img][8]\n* 项目配置：\n\t1. Android Studio 2.3.3\n\t2. gradle 2.3.3\n\t3. sdk version 26\n\t4. [fmod API version 1.10.10][2]\n\t5. [ndk version 14][9]\n* 权限：\n```\n<!-- xmlns:tools=\"http://schemas.android.com/tools\" -->\n<!--读写sd卡权限-->\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n<uses-permission\n      android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"\n      tools:ignore=\"ProtectedPermissions\" />\n```\n* [项目地址][10]\n\n[1]:https://www.fmod.com/\n[2]:https://www.fmod.com/download\n[3]:/uploads/fmod-voice-change/fmod-download.png\n[4]:/uploads/fmod-voice-change/new-project.png\n[5]:/uploads/fmod-voice-change/new-project2.png\n[6]:/uploads/fmod-voice-change/add-api.png\n[7]:/uploads/fmod-voice-change/modify-gradle.png\n[8]:/uploads/fmod-voice-change/page.png\n[9]:https://developer.android.google.cn/ndk/downloads/older_releases\n[10]:https://github.com/blackchy/FmodVoiceChange","source":"_posts/2018-12-10-Fmod-Voice-Change.md","raw":"---\ntitle: fmod变声方法简单调用\ndate: 2018-12-10 00:00:01\ncategories: android\ntags: audio\n---\n\n[fmod][1]是一个强大的声音引擎框架，QQ、魔兽世界及其他很多游戏都是使用的这套框架，框架内包含几十种声音类型，还可以修改声音的频率、速度等等。下面来简单调用一下[fmod][1]的变声方法。\n<!-- more -->\n\n### 下载 fmod API\n\n进入[fmod download][2]下载Android API。\n\n![img][3]\n\n### 新建项目\n\n勾选include c/c++ support。\n\n![img][4]\n\n勾选异常检测和安全转换\n\n![img][5]\n\n### 加入API\n\n打开下载之后解压的fmod API目录，到`api/lowlevel`文件夹，把`inc`文件夹及里面的文件全部复制到项目的`app/src/main/cpp`文件夹中,把`lib`文件夹中的所有文件夹和文件复制到项目的`app/libs`文件夹中，jar包要右键`add as library`。\n\n![img][6]\n\n### 配置app/build.gradle\n\nandroid/defaultConfig里新增：\n```\nndk {\n  abiFilters \"armeabi\",\"arm64-v8a\",\"armeabi-v7a\",\"x86\"\n}\n```\nandroid里新增：\n```\nsourceSets.main {\n  jniLibs.srcDirs = ['libs']\n  jni.srcDirs = []\n}\n```\n![img][7]\n\n### 配置app/CMakeLists.txt\n```\ncmake_minimum_required(VERSION 3.4.1)\n\n#-----------------------------------------\nfind_library( log-lib\n              log )\n\nset(my_lib_path ${CMAKE_SOURCE_DIR}/libs)\n\n# 添加三方的so库\nadd_library(libfmod\n            SHARED\n            IMPORTED )\n\n # 指名第三方库的绝对路径\n set_target_properties( libfmod\n                        PROPERTIES IMPORTED_LOCATION\n                        ${my_lib_path}/${ANDROID_ABI}/libfmod.so )\n\n add_library(libfmodL\n             SHARED\n             IMPORTED )\n\n set_target_properties( libfmodL\n                        PROPERTIES IMPORTED_LOCATION\n                        ${my_lib_path}/${ANDROID_ABI}/libfmodL.so )\n\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=gnu++11\")\n\n#--------------------------------\nadd_library( # Sets the name of the library.\n             changeVoice\n\n             # Sets the library as a shared library.\n             SHARED\n\n             # Provides a relative path to your source file(s).\n             src/main/cpp/native-lib.cpp )\n\n#---------------------\n# 导入路径，为了让编译时能够寻找到这个文件夹\ninclude_directories(src/main/cpp/inc)\n\n# 链接好三个路径\ntarget_link_libraries( changeVoice\n                       libfmod\n                       libfmodL\n\n                       ${log-lib} )\n```\n\n### 代码部分\n\n布局文件：\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"#FFF\"\n    android:gravity=\"center_horizontal\"\n    android:orientation=\"vertical\"\n    android:padding=\"10pt\"\n    >\n\n  <LinearLayout\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      >\n\n    <Button\n        android:id=\"@+id/btn_1\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"原声\"\n        />\n\n    <Button\n        android:id=\"@+id/btn_2\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"萝莉\"\n        />\n\n\n    <Button\n        android:id=\"@+id/btn_3\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"大叔\"\n        />\n  </LinearLayout>\n\n  <LinearLayout\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      >\n\n    <Button\n        android:id=\"@+id/btn_4\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"惊悚\"\n        />\n\n    <Button\n        android:id=\"@+id/btn_5\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"搞怪\"\n        />\n\n    <Button\n        android:id=\"@+id/btn_6\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"空灵\"\n        />\n  </LinearLayout>\n</LinearLayout>\n```\njava代码，新建Util类：\n```\npublic class Util {\n\n  //音效的类型\n  public static final int MODE_NORMAL = 0;//正常\n  public static final int MODE_LUOLI = 1;//萝莉\n  public static final int MODE_DASHU = 2;//大叔\n  public static final int MODE_JINGSONG = 3;//惊悚\n  public static final int MODE_GAOGUAI = 4;//搞怪\n  public static final int MODE_KONGLING = 5;//空灵\n\n  /**\n   * 变声\n   *\n   * @param path 声音路径\n   * @param type 变声类型\n   */\n  public static native void voiceChange(String path, int type);\n\n  static {\n    System.loadLibrary(\"fmodL\");\n    System.loadLibrary(\"fmod\");\n    System.loadLibrary(\"changeVoice\");\n  }\n}\n```\njava代码，MainActivity类：\n```\npublic class MainActivity extends AppCompatActivity {\n\n  @Override protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    FMOD.init(this);\n    setContentView(R.layout.activity_main);\n    findViewById(R.id.btn_1).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun1(v);\n      }\n    });\n    findViewById(R.id.btn_2).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun2(v);\n      }\n    });\n    findViewById(R.id.btn_3).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun3(v);\n      }\n    });\n    findViewById(R.id.btn_4).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun4(v);\n      }\n    });\n    findViewById(R.id.btn_5).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun5(v);\n      }\n    });\n    findViewById(R.id.btn_6).setOnClickListener(new View.OnClickListener() {\n      @Override public void onClick(View v) {\n        VoiceFun6(v);\n      }\n    });\n  }\n\n  public void VoiceFun1(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-正常\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_NORMAL);\n      Log.e(\"x---\", \"VoiceFun1\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun2(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-萝莉\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_LUOLI);\n      Log.d(\"jason\", \"VoiceFun2\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun3(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-大叔\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_DASHU);\n      Log.e(\"x---\", \"VoiceFun3\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun4(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-惊悚\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_JINGSONG);\n      Log.e(\"x---\", \"VoiceFun4\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun5(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-搞笑\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_GAOGUAI);\n      Log.e(\"x---\", \"VoiceFun5\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  public void VoiceFun6(View btn) {\n    String path = Environment.getExternalStorageDirectory().getAbsolutePath()\n        + File.separatorChar\n        + \"/Download/10028.wav\";\n    File file = new File(path);\n    if (file.exists()) {\n      Toast.makeText(this, \"变声-空灵\", Toast.LENGTH_SHORT).show();\n      Util.voiceChange(path, Util.MODE_KONGLING);\n      Log.e(\"x---\", \"VoiceFun6\");\n    } else {\n      Log.e(\"x---\", \"file is not exist\");\n      Toast.makeText(this, \"file is not exist\", Toast.LENGTH_SHORT).show();\n    }\n  }\n\n  @Override protected void onDestroy() {\n    super.onDestroy();\n    FMOD.close();\n  }\n\n  @Override public void onBackPressed() {\n    super.onBackPressed();\n    finish();\n  }\n}\n```\nC++代码，app/src/main/cpp/native-lib.cpp:\n```\n#include <jni.h>\n#include \"inc/fmod.hpp\"\n#include <string>\n\n#include <unistd.h>\n\nusing namespace FMOD;\n\n#define MODE_NORMAL 0\n#define MODE_LUOLI 1\n#define MODE_DASHU 2\n#define MODE_JINGSONG 3\n#define MODE_GAOGUAI 4\n#define MODE_KONGLING 5\n\n#include <android/log.h>\n\n#define LOGI(FORMAT, ...) __android_log_print(ANDROID_LOG_INFO,\"voiceChange\",FORMAT,##__VA_ARGS__);\n#define LOGE(FORMAT, ...) __android_log_print(ANDROID_LOG_ERROR,\"voiceChange\",FORMAT,##__VA_ARGS__);\n\nextern \"C\"\nJNIEXPORT void JNICALL\nJava_com_exp_fmodvoicechange_Util_voiceChange(JNIEnv *env, jclass cls, jstring path_str, jint type) {\n    System * system;\n    Sound * sound;\n    Channel  *channel;\n    DSP *dsp;\n    bool playing= true;\n    float frequency=1;\n\n    //初始化\n    System_Create(&system);\n    system->init(32, FMOD_INIT_NORMAL, NULL);\n\n    //将string转成char*\n    const char* path=env->GetStringUTFChars(path_str,NULL);\n\n    //创建声音\n    system->createSound(path,FMOD_DEFAULT, 0, &sound);\n    try {\n        //根据类型改变声音\n        switch (type) {\n            case MODE_NORMAL:\n                //正常声音\n                system->playSound(sound, 0, false, &channel);\n                break;\n            case MODE_LUOLI:\n                //萝莉\n                //DSP digital signal process\n                //dsp -> 音效 创建fmod中预定义好的音效\n                //FMOD_DSP_TYPE_PITCHSHIFT dsp，提升或者降低音调用的一种音效\n                system->createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &dsp);\n                //提高音效\n                dsp->setParameterFloat(FMOD_DSP_TYPE_PITCHSHIFT, 2.5);\n                //播放声音\n                system->playSound(sound, 0, false, &channel);\n                //将channel添加到dsp\n                channel->addDSP(0, dsp);\n                break;\n            case MODE_DASHU:\n                //大叔\n                system->createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &dsp);\n                //降低声音\n                dsp->setParameterFloat(FMOD_DSP_PITCHSHIFT_PITCH, 0.8);\n                //播放声音\n                system->playSound(sound, 0, false, &channel);\n                //将channel添加到dsp\n                channel->addDSP(0, dsp);\n                break;\n            case MODE_JINGSONG:\n                //惊悚\n                system->createDSPByType(FMOD_DSP_TYPE_TREMOLO, &dsp);\n                dsp->setParameterFloat(FMOD_DSP_TREMOLO_SKEW, 0.5);\n                system->playSound(sound, 0, false, &channel);\n                channel->addDSP(0, dsp);\n                break;\n            case MODE_GAOGUAI:\n                //搞怪\n                //提高说话的速度\n                system->playSound(sound, 0, false, &channel);\n                //frequency  原来的声音速度\n                channel->getFrequency(&frequency);\n                frequency = frequency * 1.6;\n                channel->setFrequency(frequency);\n                break;\n            case MODE_KONGLING:\n                //空灵\n                system->createDSPByType(FMOD_DSP_TYPE_ECHO, &dsp);\n                dsp->setParameterFloat(FMOD_DSP_ECHO_DELAY, 300);\n                dsp->setParameterFloat(FMOD_DSP_ECHO_FEEDBACK, 20);\n                system->playSound(sound, 0, false, &channel);\n                channel->addDSP(0, dsp);\n                break;\n            default:\n                break;\n        }\n    }\n    catch (...){\n        //捕捉异常\n        LOGE(\"%s\",\"发生异常\");\n    }\n    system->update();\n    //释放资源\n    //单位是微秒\n    //每秒钟判断下是否在播放\n    while(playing){\n        channel->isPlaying(&playing);\n        usleep(1000 * 1000);\n    }\n\n    //释放\n    sound->release();\n    system->close();\n    system->release();\n    env->ReleaseStringUTFChars(path_str,path);\n}\n```\n### 最后\n\n* 界面：\n![img][8]\n* 项目配置：\n\t1. Android Studio 2.3.3\n\t2. gradle 2.3.3\n\t3. sdk version 26\n\t4. [fmod API version 1.10.10][2]\n\t5. [ndk version 14][9]\n* 权限：\n```\n<!-- xmlns:tools=\"http://schemas.android.com/tools\" -->\n<!--读写sd卡权限-->\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n<uses-permission\n      android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"\n      tools:ignore=\"ProtectedPermissions\" />\n```\n* [项目地址][10]\n\n[1]:https://www.fmod.com/\n[2]:https://www.fmod.com/download\n[3]:/uploads/fmod-voice-change/fmod-download.png\n[4]:/uploads/fmod-voice-change/new-project.png\n[5]:/uploads/fmod-voice-change/new-project2.png\n[6]:/uploads/fmod-voice-change/add-api.png\n[7]:/uploads/fmod-voice-change/modify-gradle.png\n[8]:/uploads/fmod-voice-change/page.png\n[9]:https://developer.android.google.cn/ndk/downloads/older_releases\n[10]:https://github.com/blackchy/FmodVoiceChange","slug":"2018-12-10-Fmod-Voice-Change","published":1,"updated":"2018-12-11T02:19:15.608Z","_id":"cjpmbawfv0013psug3pcntzin","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://www.fmod.com/\" target=\"_blank\" rel=\"noopener\">fmod</a>是一个强大的声音引擎框架，QQ、魔兽世界及其他很多游戏都是使用的这套框架，框架内包含几十种声音类型，还可以修改声音的频率、速度等等。下面来简单调用一下<a href=\"https://www.fmod.com/\" target=\"_blank\" rel=\"noopener\">fmod</a>的变声方法。<br><a id=\"more\"></a></p>\n<h3 id=\"下载-fmod-API\"><a href=\"#下载-fmod-API\" class=\"headerlink\" title=\"下载 fmod API\"></a>下载 fmod API</h3><p>进入<a href=\"https://www.fmod.com/download\" target=\"_blank\" rel=\"noopener\">fmod download</a>下载Android API。</p>\n<p><img src=\"/uploads/fmod-voice-change/fmod-download.png\" alt=\"img\"></p>\n<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>勾选include c/c++ support。</p>\n<p><img src=\"/uploads/fmod-voice-change/new-project.png\" alt=\"img\"></p>\n<p>勾选异常检测和安全转换</p>\n<p><img src=\"/uploads/fmod-voice-change/new-project2.png\" alt=\"img\"></p>\n<h3 id=\"加入API\"><a href=\"#加入API\" class=\"headerlink\" title=\"加入API\"></a>加入API</h3><p>打开下载之后解压的fmod API目录，到<code>api/lowlevel</code>文件夹，把<code>inc</code>文件夹及里面的文件全部复制到项目的<code>app/src/main/cpp</code>文件夹中,把<code>lib</code>文件夹中的所有文件夹和文件复制到项目的<code>app/libs</code>文件夹中，jar包要右键<code>add as library</code>。</p>\n<p><img src=\"/uploads/fmod-voice-change/add-api.png\" alt=\"img\"></p>\n<h3 id=\"配置app-build-gradle\"><a href=\"#配置app-build-gradle\" class=\"headerlink\" title=\"配置app/build.gradle\"></a>配置app/build.gradle</h3><p>android/defaultConfig里新增：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ndk &#123;</span><br><span class=\"line\">  abiFilters &quot;armeabi&quot;,&quot;arm64-v8a&quot;,&quot;armeabi-v7a&quot;,&quot;x86&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>android里新增：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sourceSets.main &#123;</span><br><span class=\"line\">  jniLibs.srcDirs = [&apos;libs&apos;]</span><br><span class=\"line\">  jni.srcDirs = []</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/uploads/fmod-voice-change/modify-gradle.png\" alt=\"img\"></p>\n<h3 id=\"配置app-CMakeLists-txt\"><a href=\"#配置app-CMakeLists-txt\" class=\"headerlink\" title=\"配置app/CMakeLists.txt\"></a>配置app/CMakeLists.txt</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake_minimum_required(VERSION 3.4.1)</span><br><span class=\"line\"></span><br><span class=\"line\">#-----------------------------------------</span><br><span class=\"line\">find_library( log-lib</span><br><span class=\"line\">              log )</span><br><span class=\"line\"></span><br><span class=\"line\">set(my_lib_path $&#123;CMAKE_SOURCE_DIR&#125;/libs)</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加三方的so库</span><br><span class=\"line\">add_library(libfmod</span><br><span class=\"line\">            SHARED</span><br><span class=\"line\">            IMPORTED )</span><br><span class=\"line\"></span><br><span class=\"line\"> # 指名第三方库的绝对路径</span><br><span class=\"line\"> set_target_properties( libfmod</span><br><span class=\"line\">                        PROPERTIES IMPORTED_LOCATION</span><br><span class=\"line\">                        $&#123;my_lib_path&#125;/$&#123;ANDROID_ABI&#125;/libfmod.so )</span><br><span class=\"line\"></span><br><span class=\"line\"> add_library(libfmodL</span><br><span class=\"line\">             SHARED</span><br><span class=\"line\">             IMPORTED )</span><br><span class=\"line\"></span><br><span class=\"line\"> set_target_properties( libfmodL</span><br><span class=\"line\">                        PROPERTIES IMPORTED_LOCATION</span><br><span class=\"line\">                        $&#123;my_lib_path&#125;/$&#123;ANDROID_ABI&#125;/libfmodL.so )</span><br><span class=\"line\"></span><br><span class=\"line\">set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=gnu++11&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#--------------------------------</span><br><span class=\"line\">add_library( # Sets the name of the library.</span><br><span class=\"line\">             changeVoice</span><br><span class=\"line\"></span><br><span class=\"line\">             # Sets the library as a shared library.</span><br><span class=\"line\">             SHARED</span><br><span class=\"line\"></span><br><span class=\"line\">             # Provides a relative path to your source file(s).</span><br><span class=\"line\">             src/main/cpp/native-lib.cpp )</span><br><span class=\"line\"></span><br><span class=\"line\">#---------------------</span><br><span class=\"line\"># 导入路径，为了让编译时能够寻找到这个文件夹</span><br><span class=\"line\">include_directories(src/main/cpp/inc)</span><br><span class=\"line\"></span><br><span class=\"line\"># 链接好三个路径</span><br><span class=\"line\">target_link_libraries( changeVoice</span><br><span class=\"line\">                       libfmod</span><br><span class=\"line\">                       libfmodL</span><br><span class=\"line\"></span><br><span class=\"line\">                       $&#123;log-lib&#125; )</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码部分\"><a href=\"#代码部分\" class=\"headerlink\" title=\"代码部分\"></a>代码部分</h3><p>布局文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;#FFF&quot;</span><br><span class=\"line\">    android:gravity=&quot;center_horizontal&quot;</span><br><span class=\"line\">    android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">    android:padding=&quot;10pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;LinearLayout</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_1&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;原声&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_2&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;萝莉&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_3&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;大叔&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/LinearLayout&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;LinearLayout</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_4&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;惊悚&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_5&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;搞怪&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_6&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;空灵&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>java代码，新建Util类：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Util &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  //音效的类型</span><br><span class=\"line\">  public static final int MODE_NORMAL = 0;//正常</span><br><span class=\"line\">  public static final int MODE_LUOLI = 1;//萝莉</span><br><span class=\"line\">  public static final int MODE_DASHU = 2;//大叔</span><br><span class=\"line\">  public static final int MODE_JINGSONG = 3;//惊悚</span><br><span class=\"line\">  public static final int MODE_GAOGUAI = 4;//搞怪</span><br><span class=\"line\">  public static final int MODE_KONGLING = 5;//空灵</span><br><span class=\"line\"></span><br><span class=\"line\">  /**</span><br><span class=\"line\">   * 变声</span><br><span class=\"line\">   *</span><br><span class=\"line\">   * @param path 声音路径</span><br><span class=\"line\">   * @param type 变声类型</span><br><span class=\"line\">   */</span><br><span class=\"line\">  public static native void voiceChange(String path, int type);</span><br><span class=\"line\"></span><br><span class=\"line\">  static &#123;</span><br><span class=\"line\">    System.loadLibrary(&quot;fmodL&quot;);</span><br><span class=\"line\">    System.loadLibrary(&quot;fmod&quot;);</span><br><span class=\"line\">    System.loadLibrary(&quot;changeVoice&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>java代码，MainActivity类：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MainActivity extends AppCompatActivity &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">    super.onCreate(savedInstanceState);</span><br><span class=\"line\">    FMOD.init(this);</span><br><span class=\"line\">    setContentView(R.layout.activity_main);</span><br><span class=\"line\">    findViewById(R.id.btn_1).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun1(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_2).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun2(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_3).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun3(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_4).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun4(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_5).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun5(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_6).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun6(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun1(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-正常&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_NORMAL);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun1&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun2(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-萝莉&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_LUOLI);</span><br><span class=\"line\">      Log.d(&quot;jason&quot;, &quot;VoiceFun2&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun3(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-大叔&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_DASHU);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun3&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun4(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-惊悚&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_JINGSONG);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun4&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun5(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-搞笑&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_GAOGUAI);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun5&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun6(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-空灵&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_KONGLING);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun6&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override protected void onDestroy() &#123;</span><br><span class=\"line\">    super.onDestroy();</span><br><span class=\"line\">    FMOD.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override public void onBackPressed() &#123;</span><br><span class=\"line\">    super.onBackPressed();</span><br><span class=\"line\">    finish();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>C++代码，app/src/main/cpp/native-lib.cpp:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;jni.h&gt;</span><br><span class=\"line\">#include &quot;inc/fmod.hpp&quot;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;unistd.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace FMOD;</span><br><span class=\"line\"></span><br><span class=\"line\">#define MODE_NORMAL 0</span><br><span class=\"line\">#define MODE_LUOLI 1</span><br><span class=\"line\">#define MODE_DASHU 2</span><br><span class=\"line\">#define MODE_JINGSONG 3</span><br><span class=\"line\">#define MODE_GAOGUAI 4</span><br><span class=\"line\">#define MODE_KONGLING 5</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;android/log.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#define LOGI(FORMAT, ...) __android_log_print(ANDROID_LOG_INFO,&quot;voiceChange&quot;,FORMAT,##__VA_ARGS__);</span><br><span class=\"line\">#define LOGE(FORMAT, ...) __android_log_print(ANDROID_LOG_ERROR,&quot;voiceChange&quot;,FORMAT,##__VA_ARGS__);</span><br><span class=\"line\"></span><br><span class=\"line\">extern &quot;C&quot;</span><br><span class=\"line\">JNIEXPORT void JNICALL</span><br><span class=\"line\">Java_com_exp_fmodvoicechange_Util_voiceChange(JNIEnv *env, jclass cls, jstring path_str, jint type) &#123;</span><br><span class=\"line\">    System * system;</span><br><span class=\"line\">    Sound * sound;</span><br><span class=\"line\">    Channel  *channel;</span><br><span class=\"line\">    DSP *dsp;</span><br><span class=\"line\">    bool playing= true;</span><br><span class=\"line\">    float frequency=1;</span><br><span class=\"line\"></span><br><span class=\"line\">    //初始化</span><br><span class=\"line\">    System_Create(&amp;system);</span><br><span class=\"line\">    system-&gt;init(32, FMOD_INIT_NORMAL, NULL);</span><br><span class=\"line\"></span><br><span class=\"line\">    //将string转成char*</span><br><span class=\"line\">    const char* path=env-&gt;GetStringUTFChars(path_str,NULL);</span><br><span class=\"line\"></span><br><span class=\"line\">    //创建声音</span><br><span class=\"line\">    system-&gt;createSound(path,FMOD_DEFAULT, 0, &amp;sound);</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        //根据类型改变声音</span><br><span class=\"line\">        switch (type) &#123;</span><br><span class=\"line\">            case MODE_NORMAL:</span><br><span class=\"line\">                //正常声音</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_LUOLI:</span><br><span class=\"line\">                //萝莉</span><br><span class=\"line\">                //DSP digital signal process</span><br><span class=\"line\">                //dsp -&gt; 音效 创建fmod中预定义好的音效</span><br><span class=\"line\">                //FMOD_DSP_TYPE_PITCHSHIFT dsp，提升或者降低音调用的一种音效</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &amp;dsp);</span><br><span class=\"line\">                //提高音效</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_TYPE_PITCHSHIFT, 2.5);</span><br><span class=\"line\">                //播放声音</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                //将channel添加到dsp</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_DASHU:</span><br><span class=\"line\">                //大叔</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &amp;dsp);</span><br><span class=\"line\">                //降低声音</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_PITCHSHIFT_PITCH, 0.8);</span><br><span class=\"line\">                //播放声音</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                //将channel添加到dsp</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_JINGSONG:</span><br><span class=\"line\">                //惊悚</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_TREMOLO, &amp;dsp);</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_TREMOLO_SKEW, 0.5);</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_GAOGUAI:</span><br><span class=\"line\">                //搞怪</span><br><span class=\"line\">                //提高说话的速度</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                //frequency  原来的声音速度</span><br><span class=\"line\">                channel-&gt;getFrequency(&amp;frequency);</span><br><span class=\"line\">                frequency = frequency * 1.6;</span><br><span class=\"line\">                channel-&gt;setFrequency(frequency);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_KONGLING:</span><br><span class=\"line\">                //空灵</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_ECHO, &amp;dsp);</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_ECHO_DELAY, 300);</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_ECHO_FEEDBACK, 20);</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    catch (...)&#123;</span><br><span class=\"line\">        //捕捉异常</span><br><span class=\"line\">        LOGE(&quot;%s&quot;,&quot;发生异常&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    system-&gt;update();</span><br><span class=\"line\">    //释放资源</span><br><span class=\"line\">    //单位是微秒</span><br><span class=\"line\">    //每秒钟判断下是否在播放</span><br><span class=\"line\">    while(playing)&#123;</span><br><span class=\"line\">        channel-&gt;isPlaying(&amp;playing);</span><br><span class=\"line\">        usleep(1000 * 1000);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //释放</span><br><span class=\"line\">    sound-&gt;release();</span><br><span class=\"line\">    system-&gt;close();</span><br><span class=\"line\">    system-&gt;release();</span><br><span class=\"line\">    env-&gt;ReleaseStringUTFChars(path_str,path);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><ul>\n<li>界面：<br><img src=\"/uploads/fmod-voice-change/page.png\" alt=\"img\"></li>\n<li>项目配置：<ol>\n<li>Android Studio 2.3.3</li>\n<li>gradle 2.3.3</li>\n<li>sdk version 26</li>\n<li><a href=\"https://www.fmod.com/download\" target=\"_blank\" rel=\"noopener\">fmod API version 1.10.10</a></li>\n<li><a href=\"https://developer.android.google.cn/ndk/downloads/older_releases\" target=\"_blank\" rel=\"noopener\">ndk version 14</a></li>\n</ol>\n</li>\n<li><p>权限：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- xmlns:tools=&quot;http://schemas.android.com/tools&quot; --&gt;</span><br><span class=\"line\">&lt;!--读写sd卡权限--&gt;</span><br><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;</span><br><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;</span><br><span class=\"line\">&lt;uses-permission</span><br><span class=\"line\">      android:name=&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;</span><br><span class=\"line\">      tools:ignore=&quot;ProtectedPermissions&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><a href=\"https://github.com/blackchy/FmodVoiceChange\" target=\"_blank\" rel=\"noopener\">项目地址</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><a href=\"https://www.fmod.com/\" target=\"_blank\" rel=\"noopener\">fmod</a>是一个强大的声音引擎框架，QQ、魔兽世界及其他很多游戏都是使用的这套框架，框架内包含几十种声音类型，还可以修改声音的频率、速度等等。下面来简单调用一下<a href=\"https://www.fmod.com/\" target=\"_blank\" rel=\"noopener\">fmod</a>的变声方法。<br>","more":"</p>\n<h3 id=\"下载-fmod-API\"><a href=\"#下载-fmod-API\" class=\"headerlink\" title=\"下载 fmod API\"></a>下载 fmod API</h3><p>进入<a href=\"https://www.fmod.com/download\" target=\"_blank\" rel=\"noopener\">fmod download</a>下载Android API。</p>\n<p><img src=\"/uploads/fmod-voice-change/fmod-download.png\" alt=\"img\"></p>\n<h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>勾选include c/c++ support。</p>\n<p><img src=\"/uploads/fmod-voice-change/new-project.png\" alt=\"img\"></p>\n<p>勾选异常检测和安全转换</p>\n<p><img src=\"/uploads/fmod-voice-change/new-project2.png\" alt=\"img\"></p>\n<h3 id=\"加入API\"><a href=\"#加入API\" class=\"headerlink\" title=\"加入API\"></a>加入API</h3><p>打开下载之后解压的fmod API目录，到<code>api/lowlevel</code>文件夹，把<code>inc</code>文件夹及里面的文件全部复制到项目的<code>app/src/main/cpp</code>文件夹中,把<code>lib</code>文件夹中的所有文件夹和文件复制到项目的<code>app/libs</code>文件夹中，jar包要右键<code>add as library</code>。</p>\n<p><img src=\"/uploads/fmod-voice-change/add-api.png\" alt=\"img\"></p>\n<h3 id=\"配置app-build-gradle\"><a href=\"#配置app-build-gradle\" class=\"headerlink\" title=\"配置app/build.gradle\"></a>配置app/build.gradle</h3><p>android/defaultConfig里新增：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ndk &#123;</span><br><span class=\"line\">  abiFilters &quot;armeabi&quot;,&quot;arm64-v8a&quot;,&quot;armeabi-v7a&quot;,&quot;x86&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>android里新增：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sourceSets.main &#123;</span><br><span class=\"line\">  jniLibs.srcDirs = [&apos;libs&apos;]</span><br><span class=\"line\">  jni.srcDirs = []</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/uploads/fmod-voice-change/modify-gradle.png\" alt=\"img\"></p>\n<h3 id=\"配置app-CMakeLists-txt\"><a href=\"#配置app-CMakeLists-txt\" class=\"headerlink\" title=\"配置app/CMakeLists.txt\"></a>配置app/CMakeLists.txt</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmake_minimum_required(VERSION 3.4.1)</span><br><span class=\"line\"></span><br><span class=\"line\">#-----------------------------------------</span><br><span class=\"line\">find_library( log-lib</span><br><span class=\"line\">              log )</span><br><span class=\"line\"></span><br><span class=\"line\">set(my_lib_path $&#123;CMAKE_SOURCE_DIR&#125;/libs)</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加三方的so库</span><br><span class=\"line\">add_library(libfmod</span><br><span class=\"line\">            SHARED</span><br><span class=\"line\">            IMPORTED )</span><br><span class=\"line\"></span><br><span class=\"line\"> # 指名第三方库的绝对路径</span><br><span class=\"line\"> set_target_properties( libfmod</span><br><span class=\"line\">                        PROPERTIES IMPORTED_LOCATION</span><br><span class=\"line\">                        $&#123;my_lib_path&#125;/$&#123;ANDROID_ABI&#125;/libfmod.so )</span><br><span class=\"line\"></span><br><span class=\"line\"> add_library(libfmodL</span><br><span class=\"line\">             SHARED</span><br><span class=\"line\">             IMPORTED )</span><br><span class=\"line\"></span><br><span class=\"line\"> set_target_properties( libfmodL</span><br><span class=\"line\">                        PROPERTIES IMPORTED_LOCATION</span><br><span class=\"line\">                        $&#123;my_lib_path&#125;/$&#123;ANDROID_ABI&#125;/libfmodL.so )</span><br><span class=\"line\"></span><br><span class=\"line\">set(CMAKE_CXX_FLAGS &quot;$&#123;CMAKE_CXX_FLAGS&#125; -std=gnu++11&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">#--------------------------------</span><br><span class=\"line\">add_library( # Sets the name of the library.</span><br><span class=\"line\">             changeVoice</span><br><span class=\"line\"></span><br><span class=\"line\">             # Sets the library as a shared library.</span><br><span class=\"line\">             SHARED</span><br><span class=\"line\"></span><br><span class=\"line\">             # Provides a relative path to your source file(s).</span><br><span class=\"line\">             src/main/cpp/native-lib.cpp )</span><br><span class=\"line\"></span><br><span class=\"line\">#---------------------</span><br><span class=\"line\"># 导入路径，为了让编译时能够寻找到这个文件夹</span><br><span class=\"line\">include_directories(src/main/cpp/inc)</span><br><span class=\"line\"></span><br><span class=\"line\"># 链接好三个路径</span><br><span class=\"line\">target_link_libraries( changeVoice</span><br><span class=\"line\">                       libfmod</span><br><span class=\"line\">                       libfmodL</span><br><span class=\"line\"></span><br><span class=\"line\">                       $&#123;log-lib&#125; )</span><br></pre></td></tr></table></figure>\n<h3 id=\"代码部分\"><a href=\"#代码部分\" class=\"headerlink\" title=\"代码部分\"></a>代码部分</h3><p>布局文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;#FFF&quot;</span><br><span class=\"line\">    android:gravity=&quot;center_horizontal&quot;</span><br><span class=\"line\">    android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">    android:padding=&quot;10pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;LinearLayout</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_1&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;原声&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_2&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;萝莉&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_3&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;大叔&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/LinearLayout&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;LinearLayout</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_4&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;惊悚&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_5&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;搞怪&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;Button</span><br><span class=\"line\">        android:id=&quot;@+id/btn_6&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:text=&quot;空灵&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/LinearLayout&gt;</span><br><span class=\"line\">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>java代码，新建Util类：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class Util &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  //音效的类型</span><br><span class=\"line\">  public static final int MODE_NORMAL = 0;//正常</span><br><span class=\"line\">  public static final int MODE_LUOLI = 1;//萝莉</span><br><span class=\"line\">  public static final int MODE_DASHU = 2;//大叔</span><br><span class=\"line\">  public static final int MODE_JINGSONG = 3;//惊悚</span><br><span class=\"line\">  public static final int MODE_GAOGUAI = 4;//搞怪</span><br><span class=\"line\">  public static final int MODE_KONGLING = 5;//空灵</span><br><span class=\"line\"></span><br><span class=\"line\">  /**</span><br><span class=\"line\">   * 变声</span><br><span class=\"line\">   *</span><br><span class=\"line\">   * @param path 声音路径</span><br><span class=\"line\">   * @param type 变声类型</span><br><span class=\"line\">   */</span><br><span class=\"line\">  public static native void voiceChange(String path, int type);</span><br><span class=\"line\"></span><br><span class=\"line\">  static &#123;</span><br><span class=\"line\">    System.loadLibrary(&quot;fmodL&quot;);</span><br><span class=\"line\">    System.loadLibrary(&quot;fmod&quot;);</span><br><span class=\"line\">    System.loadLibrary(&quot;changeVoice&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>java代码，MainActivity类：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class MainActivity extends AppCompatActivity &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class=\"line\">    super.onCreate(savedInstanceState);</span><br><span class=\"line\">    FMOD.init(this);</span><br><span class=\"line\">    setContentView(R.layout.activity_main);</span><br><span class=\"line\">    findViewById(R.id.btn_1).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun1(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_2).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun2(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_3).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun3(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_4).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun4(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_5).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun5(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    findViewById(R.id.btn_6).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class=\"line\">      @Override public void onClick(View v) &#123;</span><br><span class=\"line\">        VoiceFun6(v);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun1(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-正常&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_NORMAL);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun1&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun2(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-萝莉&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_LUOLI);</span><br><span class=\"line\">      Log.d(&quot;jason&quot;, &quot;VoiceFun2&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun3(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-大叔&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_DASHU);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun3&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun4(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-惊悚&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_JINGSONG);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun4&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun5(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-搞笑&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_GAOGUAI);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun5&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  public void VoiceFun6(View btn) &#123;</span><br><span class=\"line\">    String path = Environment.getExternalStorageDirectory().getAbsolutePath()</span><br><span class=\"line\">        + File.separatorChar</span><br><span class=\"line\">        + &quot;/Download/10028.wav&quot;;</span><br><span class=\"line\">    File file = new File(path);</span><br><span class=\"line\">    if (file.exists()) &#123;</span><br><span class=\"line\">      Toast.makeText(this, &quot;变声-空灵&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">      Util.voiceChange(path, Util.MODE_KONGLING);</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;VoiceFun6&quot;);</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">      Log.e(&quot;x---&quot;, &quot;file is not exist&quot;);</span><br><span class=\"line\">      Toast.makeText(this, &quot;file is not exist&quot;, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override protected void onDestroy() &#123;</span><br><span class=\"line\">    super.onDestroy();</span><br><span class=\"line\">    FMOD.close();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override public void onBackPressed() &#123;</span><br><span class=\"line\">    super.onBackPressed();</span><br><span class=\"line\">    finish();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>C++代码，app/src/main/cpp/native-lib.cpp:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;jni.h&gt;</span><br><span class=\"line\">#include &quot;inc/fmod.hpp&quot;</span><br><span class=\"line\">#include &lt;string&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;unistd.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">using namespace FMOD;</span><br><span class=\"line\"></span><br><span class=\"line\">#define MODE_NORMAL 0</span><br><span class=\"line\">#define MODE_LUOLI 1</span><br><span class=\"line\">#define MODE_DASHU 2</span><br><span class=\"line\">#define MODE_JINGSONG 3</span><br><span class=\"line\">#define MODE_GAOGUAI 4</span><br><span class=\"line\">#define MODE_KONGLING 5</span><br><span class=\"line\"></span><br><span class=\"line\">#include &lt;android/log.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">#define LOGI(FORMAT, ...) __android_log_print(ANDROID_LOG_INFO,&quot;voiceChange&quot;,FORMAT,##__VA_ARGS__);</span><br><span class=\"line\">#define LOGE(FORMAT, ...) __android_log_print(ANDROID_LOG_ERROR,&quot;voiceChange&quot;,FORMAT,##__VA_ARGS__);</span><br><span class=\"line\"></span><br><span class=\"line\">extern &quot;C&quot;</span><br><span class=\"line\">JNIEXPORT void JNICALL</span><br><span class=\"line\">Java_com_exp_fmodvoicechange_Util_voiceChange(JNIEnv *env, jclass cls, jstring path_str, jint type) &#123;</span><br><span class=\"line\">    System * system;</span><br><span class=\"line\">    Sound * sound;</span><br><span class=\"line\">    Channel  *channel;</span><br><span class=\"line\">    DSP *dsp;</span><br><span class=\"line\">    bool playing= true;</span><br><span class=\"line\">    float frequency=1;</span><br><span class=\"line\"></span><br><span class=\"line\">    //初始化</span><br><span class=\"line\">    System_Create(&amp;system);</span><br><span class=\"line\">    system-&gt;init(32, FMOD_INIT_NORMAL, NULL);</span><br><span class=\"line\"></span><br><span class=\"line\">    //将string转成char*</span><br><span class=\"line\">    const char* path=env-&gt;GetStringUTFChars(path_str,NULL);</span><br><span class=\"line\"></span><br><span class=\"line\">    //创建声音</span><br><span class=\"line\">    system-&gt;createSound(path,FMOD_DEFAULT, 0, &amp;sound);</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        //根据类型改变声音</span><br><span class=\"line\">        switch (type) &#123;</span><br><span class=\"line\">            case MODE_NORMAL:</span><br><span class=\"line\">                //正常声音</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_LUOLI:</span><br><span class=\"line\">                //萝莉</span><br><span class=\"line\">                //DSP digital signal process</span><br><span class=\"line\">                //dsp -&gt; 音效 创建fmod中预定义好的音效</span><br><span class=\"line\">                //FMOD_DSP_TYPE_PITCHSHIFT dsp，提升或者降低音调用的一种音效</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &amp;dsp);</span><br><span class=\"line\">                //提高音效</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_TYPE_PITCHSHIFT, 2.5);</span><br><span class=\"line\">                //播放声音</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                //将channel添加到dsp</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_DASHU:</span><br><span class=\"line\">                //大叔</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_PITCHSHIFT, &amp;dsp);</span><br><span class=\"line\">                //降低声音</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_PITCHSHIFT_PITCH, 0.8);</span><br><span class=\"line\">                //播放声音</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                //将channel添加到dsp</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_JINGSONG:</span><br><span class=\"line\">                //惊悚</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_TREMOLO, &amp;dsp);</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_TREMOLO_SKEW, 0.5);</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_GAOGUAI:</span><br><span class=\"line\">                //搞怪</span><br><span class=\"line\">                //提高说话的速度</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                //frequency  原来的声音速度</span><br><span class=\"line\">                channel-&gt;getFrequency(&amp;frequency);</span><br><span class=\"line\">                frequency = frequency * 1.6;</span><br><span class=\"line\">                channel-&gt;setFrequency(frequency);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            case MODE_KONGLING:</span><br><span class=\"line\">                //空灵</span><br><span class=\"line\">                system-&gt;createDSPByType(FMOD_DSP_TYPE_ECHO, &amp;dsp);</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_ECHO_DELAY, 300);</span><br><span class=\"line\">                dsp-&gt;setParameterFloat(FMOD_DSP_ECHO_FEEDBACK, 20);</span><br><span class=\"line\">                system-&gt;playSound(sound, 0, false, &amp;channel);</span><br><span class=\"line\">                channel-&gt;addDSP(0, dsp);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            default:</span><br><span class=\"line\">                break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    catch (...)&#123;</span><br><span class=\"line\">        //捕捉异常</span><br><span class=\"line\">        LOGE(&quot;%s&quot;,&quot;发生异常&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    system-&gt;update();</span><br><span class=\"line\">    //释放资源</span><br><span class=\"line\">    //单位是微秒</span><br><span class=\"line\">    //每秒钟判断下是否在播放</span><br><span class=\"line\">    while(playing)&#123;</span><br><span class=\"line\">        channel-&gt;isPlaying(&amp;playing);</span><br><span class=\"line\">        usleep(1000 * 1000);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //释放</span><br><span class=\"line\">    sound-&gt;release();</span><br><span class=\"line\">    system-&gt;close();</span><br><span class=\"line\">    system-&gt;release();</span><br><span class=\"line\">    env-&gt;ReleaseStringUTFChars(path_str,path);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><ul>\n<li>界面：<br><img src=\"/uploads/fmod-voice-change/page.png\" alt=\"img\"></li>\n<li>项目配置：<ol>\n<li>Android Studio 2.3.3</li>\n<li>gradle 2.3.3</li>\n<li>sdk version 26</li>\n<li><a href=\"https://www.fmod.com/download\" target=\"_blank\" rel=\"noopener\">fmod API version 1.10.10</a></li>\n<li><a href=\"https://developer.android.google.cn/ndk/downloads/older_releases\" target=\"_blank\" rel=\"noopener\">ndk version 14</a></li>\n</ol>\n</li>\n<li><p>权限：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- xmlns:tools=&quot;http://schemas.android.com/tools&quot; --&gt;</span><br><span class=\"line\">&lt;!--读写sd卡权限--&gt;</span><br><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot; /&gt;</span><br><span class=\"line\">&lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt;</span><br><span class=\"line\">&lt;uses-permission</span><br><span class=\"line\">      android:name=&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;</span><br><span class=\"line\">      tools:ignore=&quot;ProtectedPermissions&quot; /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><a href=\"https://github.com/blackchy/FmodVoiceChange\" target=\"_blank\" rel=\"noopener\">项目地址</a></p>\n</li>\n</ul>"},{"title":"AndroidTV入门","date":"2018-12-18T07:38:36.000Z","_content":"\n机顶盒现在基本都是通过安装的APK进行操作的，这些APK又分为EPG(Android嵌套Web，主要为Web端开发)和AndroidTV原生(主要为Android开发)，本文介绍AndroidTV开发入门流程。AndroidTV和手机App开发的主要区别就是它的布局是按照横屏显示器布局的，而且它是焦点控制（手机App主要是屏幕点击控制），在音视频方面比手机App需要注意更多的细节，以及其他一些小问题。还有比较重要的一点，AndroidTV需要考虑更多硬件的问题以及适配更老的Android版本，甚至是4.4以前的版本都有可能需要考虑。\n<!-- more -->\n### 准备\n\n大多数机顶盒的版本都比较低，所以AndroidStudio不推荐使用3.0（推荐2.3.3）及以上的版本进行开发，还有jdk版本也是一样（1.8足够了），所以记得复制别人代码的时候把lambda表达式改成常规的表达式，等等等等。\n\n### 适配\n\n1. 文字间距等布局时统一使用pt作为单位，例如：\n```\n<TextView\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"30pt\"\n      android:gravity=\"center\"\n      android:paddingLeft=\"10pt\"\n      android:paddingRight=\"10pt\"\n      android:text=\"Text\"\n      android:textColor=\"@color/colorWhite\"\n      android:textSize=\"20pt\"\n      />\n```\n2. 屏幕适配则使用[JessYan的Android适配方案][1]，首先添加依赖：\n```\ncompile 'me.jessyan:autosize:1.0.6'\n```\n  然后在自定义`Applicatio`的`create`方法中添加适配：\n```\nAutoSizeConfig.getInstance().getUnitsManager().setSupportDP(false).setSupportSubunits(Subunits.PT);\n```\n  最后，代码中需要转换的地方则用`AutoSizeUtils`里面的方法：\n```\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 20));\n```\n\n  当然，肯定还有其他更好的适配方式。\n\n### 列表\n\nAndroidTV开发中经常用到列表这种布局，这里有两种方法。\n\n1. Google提供的[androidtv-Leanback][2]。\n  布局文件：\n```\n<com.example.core.leanback.HorizontalGridView\n    android:id=\"@+id/hgv_item\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"100pt\"\n    android:clipChildren=\"false\"\n    android:clipToPadding=\"false\"\n    android:padding=\"20pt\"\n    />\n```\n  其中`android:clipChildren=\"false\"`和`android:clipToPadding=\"false\"`是为了做选中放大子视图时避免子视图不完整。\n\n  代码：\n```\n//@BindView(R.id.hgv_item) HorizontalGridView hgvItem;\n//private ListItemAdapter listItemAdapter;\nlistItemAdapter = new ListItemAdapter();\nhgvItem.setAdapter(listItemAdapter);\nhgvItem.setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));\nhgvItem.setOnItemListener(new OnItemListener() {\n  @Override public void onItemSelected(Object parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.05f)\n        .scaleY(1.05f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundResource(R.drawable.bg_item);\n  }\n\n  @Override public void onItemPreSelected(Object parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.0f)\n        .scaleY(1.0f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n  }\n});\nlistItemAdapter.setNewData(mockData.listItems);\n\n```\n  其中，`setHorizontalSpacing`方法为设置子视图之间的水平间距，`setOnItemListener`为子视图获得焦点和失去焦点的监听，`setOnItemListener`监听中添加了获得焦点的子视图放大1.05倍的动画和改变子视图背景使获得焦点的子视图视觉上更明显的效果。具体效果如下图：\n![img][3]\n\n  `Adapter`类:\n```\npublic class ListItemAdapter extends BaseQuickAdapter<String, BaseViewHolder> {\n  public ListItemAdapter() {\n    super(R.layout.item_list);\n  }\n\n  @Override protected void convert(BaseViewHolder helper, String item) {\n    helper.setText(R.id.tv_text, item);\n  }\n}\n```\n  子视图布局文件： \n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"150pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <TextView\n        android:id=\"@+id/tv_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:text=\"text\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"25pt\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  其中，`android:focusable=\"true\"`表示可获取控件的焦点（键盘、遥控器），`android:focusableInTouchMode=\"true\"`表示可通过触摸获取焦点（AndroidTV不需要，开发时使用模拟器会用到）。\n\n  > 注：\n  * leanback的垂直和水平列表是继承RecyclerView的自定义控件。\n  * leanback默认选中项滑动到屏幕中间位置。\n  * 列表的Adapter继承[BaseRecyclerViewAdapterHelper][4]，方便操作与管理。\n  * 垂直列表基本相同，使用的是`VerticalGridView`类。\n  * 水平列表有一个拓展类`HorizontalRowView`，以方便处理嵌套。\n   \n\n2. Github上有很多开发者自己仿照leanback自定义的RecyclerViewTV，也是继承的Recyclerview，它们也基本都是水平列表、垂直列表用一个布局，通过属性修改。这里找了一个（具体出处忘记了）来用一下。\n  布局文件：\n```\n<com.example.core.view.RecyclerViewTV\n    android:id=\"@+id/rvt_item\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"100pt\"\n    android:orientation=\"horizontal\"\n    android:padding=\"20pt\"\n    app:layoutManagerTV=\"V7LinearLayoutManage\n    app:selectedItemIsCenteredTV=\"true\"\n    />\n```\n  其中，`layoutManagerTV`定义布局方式（`V7GridLayoutManager`、`V7LinearLayoutManager`、`V7StaggeredGridLayoutManager`），`selectedItemIsCenteredTV`设置选中项滑动到屏幕中间，`orientation`设置水平和垂直（`vertical`、`horizontal`）。`clipChildren`和`clipToPadding`根据需要添加。\n\n  代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ListItemAdapter listItemAdapter;\nlistItemAdapter = new ListItemAdapter();\nrvtItem.setAdapter(listItemAdapter);\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),\n    AutoSizeUtils.pt2px(context, 20));\nrvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.05f)\n        .scaleY(1.05f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundResource(R.drawable.bg_item);\n  }\n  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.0f)\n        .scaleY(1.0f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n  }\n});\nlistItemAdapter.setNewData(mockData.listItems);\n```\n  和leanback实现差不多的功能，adapter也是用的同一个adapter，其中设置间距的方法为`setSpacingWithMargins(verticalSpacing,horizontalSpacing)`，展示效果和上面leanback的一样。\n\n  RecyclerViewTV的网格布局可以避免部分嵌套。\n  布局文件：\n```\n<com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:padding=\"20pt\"\n      app:layoutManagerTV=\"V7GridLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n```\n  将`layoutManagerTV`设置为上面提到的`V7GridLayoutManager`即可。\n  效果：\n  ![img][5]\n\n### 列表嵌套\n\n1. leanback嵌套，这里采用先使用垂直列表，再嵌套水平列表。\n  垂直列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.leanback.VerticalGridView\n      android:id=\"@+id/vgv_item\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:clipChildren=\"false\"\n      android:clipToPadding=\"false\"\n      android:padding=\"20pt\"\n      />\n</RelativeLayout>\n```\n  水平列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:clipChildren=\"false\"\n    android:clipToPadding=\"false\"\n    >\n  <com.example.core.leanback.HorizontalRowView\n      android:id=\"@+id/hrv_item\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:clipChildren=\"false\"\n      android:clipToPadding=\"false\"\n      />\n</FrameLayout>\n```\n  代码：\n```\n//@BindView(R.id.vgv_item) VerticalGridView vgvItem;\n//private ItemAdapter itemAdapter;\nitemAdapter = new ItemAdapter();\nvgvItem.setAdapter(itemAdapter);\nvgvItem.setVerticalSpacing(AutoSizeUtils.pt2px(context, 20));\nitemAdapter.setNewData(mockData.gnLists);\n```\n  垂直列表adapter：\n```\npublic class ItemAdapter extends BaseQuickAdapter<GNList, BaseViewHolder> {\n  public ItemAdapter() {\n    super(R.layout.layout_gn);\n  }\n  @Override protected void convert(BaseViewHolder helper, GNList item) {\n    HorizontalRowView horizontalRowView = helper.getView(R.id.hrv_item);\n    ListItemAdapter listItemAdapter = new ListItemAdapter();\n    horizontalRowView.getGridView().setAdapter(listItemAdapter);\n    horizontalRowView.getGridView().setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));\n    horizontalRowView.getGridView().setOnItemListener(new OnItemListener() {\n      @Override public void onItemSelected(Object parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.05f)\n            .scaleY(1.05f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundResource(R.drawable.bg_item);\n      }\n      @Override public void onItemPreSelected(Object parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.0f)\n            .scaleY(1.0f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n      }\n    });\n    listItemAdapter.setNewData(mockData.listItems);\n  }\n}\n```\n  `GNList`类是一个普通的对象，里面只放了一个`String`列表。水平列表adapter使用上面提到的同一个adapter。\n  效果：\n  ![img][6]\n2. RecyclerViewTV嵌套，也是先使用垂直列表，再嵌套水平列表。\n  垂直列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:orientation=\"vertical\"\n      android:padding=\"20pt\"\n      app:layoutManagerTV=\"V7LinearLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</RelativeLayout>\n```\n  水平列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:clipChildren=\"false\"\n    android:clipToPadding=\"false\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_h_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      app:layoutManagerTV=\"V7LinearLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</FrameLayout>\n```\n  代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ItemAdapter itemAdapter;\nitemAdapter = new ItemAdapter();\nrvtItem.setAdapter(itemAdapter);\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 0));\nitemAdapter.setNewData(mockData.rnLists);\n```\n  垂直列表adapter：\n```\npublic class ItemAdapter extends BaseQuickAdapter<RNList, BaseViewHolder> {\n    public ItemAdapter() {\n      super(R.layout.layout_rn);\n    }\n\n    @Override protected void convert(BaseViewHolder helper, RNList item) {\n      RecyclerViewTV rvthItem = helper.getView(R.id.rvt_h_item);\n      ListItemAdapter listItemAdapter = new ListItemAdapter();\n      rvthItem.setAdapter(listItemAdapter);\n      rvthItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),\n          AutoSizeUtils.pt2px(context, 20));\n      rvthItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n        @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n          itemView.animate()\n              .scaleX(1.05f)\n              .scaleY(1.05f)\n              .setInterpolator(new BounceInterpolator())\n              .setDuration(300)\n              .start();\n          itemView.setBackgroundResource(R.drawable.bg_item);\n        }\n\n        @Override\n        public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n          itemView.animate()\n              .scaleX(1.0f)\n              .scaleY(1.0f)\n              .setInterpolator(new BounceInterpolator())\n              .setDuration(300)\n              .start();\n          itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n        }\n      });\n      listItemAdapter.setNewData(mockData.listItems);\n    }\n  }\n```\n  `RNList`类和`GNList`一样，里面只放了一个`String`列表。\n  效果和leanback嵌套的效果一样。\n\n### 同一个列表不相同的item\n  在一个列表中，item展示的内容可能是不一样的，这里使用RecyclerViewTV演示，leanback使用方法差不多。\n  列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:layout_gravity=\"center_horizontal\"\n      android:padding=\"20pt\"\n      android:orientation=\"vertical\"\n      app:layoutManagerTV=\"V7GridLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</FrameLayout>\n```\n  item1(150pt x 150pt，中间文字)布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"150pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <TextView\n        android:id=\"@+id/tv_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:text=\"text\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"25pt\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  item2(320pt x 150pt，中间图片和文字)布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"324pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <ImageView\n        android:layout_width=\"50pt\"\n        android:layout_height=\"50pt\"\n        android:layout_gravity=\"center_vertical\"\n        android:layout_marginLeft=\"30pt\"\n        android:src=\"@mipmap/ic_launcher\"\n        />\n    <TextView\n        android:id=\"@+id/tv_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center_vertical|right\"\n        android:layout_marginRight=\"30pt\"\n        android:text=\"text\"\n        android:textColor=\"@android:color/holo_green_light\"\n        android:textSize=\"25pt\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  item3(150pt x 150pt，中间图片)布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"150pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <ImageView\n        android:id=\"@+id/iv_img\"\n        android:layout_width=\"50pt\"\n        android:layout_height=\"50pt\"\n        android:layout_gravity=\"center\"\n        android:src=\"@drawable/ic_launcher\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ItemAdapter itemAdapter;\nitemAdapter = new ItemAdapter();\nitemAdapter.setSpanSizeLookup(new BaseQuickAdapter.SpanSizeLookup() {\n  @Override public int getSpanSize(GridLayoutManager gridLayoutManager, int position) {\n    return RS_TYPE_LONG == mockData.rsModels.get(position).getItemType() ? 2 : 1;\n  }\n});\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 20));\nrvtItem.setLayoutManager(new V7GridLayoutManager(context, 3));\nrvtItem.setAdapter(itemAdapter);\nrvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.05f)\n        .scaleY(1.05f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundResource(R.drawable.bg_item);\n  }\n  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.0f)\n        .scaleY(1.0f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n  }\n});\nitemAdapter.setNewData(mockData.rsModels);\nitemAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {\n  @Override public void onItemClick(BaseQuickAdapter adapter, View view, int position) {\n    toastor.showToast(\"click\" + position);\n  }\n});\n```\n  注：**`RecyclerViewTV`的`setAdapter`方法要放在`setLayoutManager`方法后面，否则`Adapter`的`setSpanSizeLookup`方法不会执行。**\n  效果：\n  ![img][7]\n\n### 暗焦点\n暗焦点也是一个经常需要用到的功能，比如下面就是一个左边菜单右边内容的布局，需要暗焦点提示使用者菜单的当前选中项。先放效果图：\n![img][8]\n外框架activity布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_menu\"\n      android:layout_width=\"200pt\"\n      android:layout_height=\"wrap_content\"\n      android:layout_centerVertical=\"true\"\n      android:orientation=\"vertical\"\n      app:layoutManagerTV=\"V7LinearLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n  <com.example.core.view.VerticalViewPager\n      android:id=\"@+id/vvp_content\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:layout_toRightOf=\"@id/rvt_menu\"\n      />\n</RelativeLayout>\n```\nfragment布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:padding=\"20pt\"\n      app:layoutManagerTV=\"V7GridLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</RelativeLayout>\n```\n外框架activity主要代码：\n```\n//@BindView(R.id.rvt_menu) RecyclerViewTV rvtMenu;\n//@BindView(R.id.vvp_content) VerticalViewPager vvpContent;\n//@BindColor(android.R.color.transparent) int transparent;\n//@BindColor(R.color.colorPrimary) int darkerGray;\n//@BindColor(android.R.color.tertiary_text_light) int textLight;\n//private MenuAdapter menuAdapter;\n//private boolean isRight = false;\n//private ViewPagerAdapter pagerAdapter;\nmenuAdapter = new MenuAdapter();\nrvtMenu.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 0));\nrvtMenu.setAdapter(menuAdapter);\nrvtMenu.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n    if (position != vvpContent.getCurrentItem()) {\n      vvpContent.setCurrentItem(position);\n    }\n    itemView.setBackgroundColor(darkerGray);\n  }\n  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.setBackgroundColor(isRight ? textLight : transparent);\n  }\n});\nrvtMenu.setOnChildViewHolderSelectedListener(\n    new RecyclerViewTV.OnChildViewHolderSelectedListener() {\n      @Override\n      public void onChildViewHolderSelected(RecyclerViewTV parent, RecyclerView.ViewHolder vh,\n          int position) {\n        vh.itemView.setOnKeyListener(new View.OnKeyListener() {\n          @Override public boolean onKey(View view, int i, KeyEvent keyEvent) {\n            if (keyEvent.getAction() == KeyEvent.ACTION_DOWN) {\n              isRight = i == KeyEvent.KEYCODE_DPAD_RIGHT;\n            }\n            return false;\n          }\n        });\n      }\n    });\nmenuAdapter.setNewData(mockData.outMenu);\nfor (int i = 0; i < mockData.outMenu.size(); i++) {\n  BaseFragment fragment = new ConentFragment();\n  Bundle bundle = new Bundle();\n  bundle.putInt(\"menuIndex\", i);\n  fragment.setArguments(bundle);\n  fragments.add(fragment);\n}\npagerAdapter = new ViewPagerAdapter(fragmentManager, fragments);\nvvpContent.setAdapter(pagerAdapter);\nsetViewPagerSpeed(vvpContent, 300);//设置viewpager切换的速度\n```\n  `MenuAdapter`上面例子已经有很多不再重复放了。这里是通过一个布尔值`isRight`和`setOnChildViewHolderSelectedListener`方法记录操作状态实现暗焦点的，`setOnChildViewHolderSelectedListener`是一个列表子项的监听事件。还可以通过`View`的`activated`值来记录暗焦点，比如列表选中的最后一项的子视图设置为`activated`,在子视图监听事件`setOnItemListener`中通过`itemView.isActivated()`判断是否为暗焦点。本项目使用的RecyclerViewTV专门针对暗焦点做了处理就是通过`activated`实现的，通过`isMenu(true)`打开即可进行暗焦点的设置和判断操作。\n\n外框架activity需要注意的方法：\n```\n@Override public void onAttachedToWindow() {\n  super.onAttachedToWindow();\n  rvtMenu.setSelection(0);\n}\nprotected void setViewPagerSpeed(VerticalViewPager viewPager, int mDuration) {\n  try {\n    Field field = VerticalViewPager.class.getDeclaredField(\"mScroller\");\n    field.setAccessible(true);\n    FixedSpeedScroller scroller =\n        new FixedSpeedScroller(viewPager.getContext(), new AccelerateInterpolator());\n    field.set(viewPager, scroller);\n    scroller.setmDuration(mDuration);\n  } catch (Exception e) {\n  }\n}\n```\n  因为fragment里面的数据可能会后渲染，在刚进入这个界面的时候焦点会在fragment上面，所以需要再`onAttachedToWindow`方法中让焦点进入界面渲染完成后回到菜单上，这里不用`requestFocus()`而使用`setSelection()`是因为`setSelection()`里面已经包含了`requestFocus()`方法并且它能选择列表具体哪一个子项获得焦点。\n  `setViewPagerSpeed`是一个设置viewpager页面切换速度的方法。\n\nfragment代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ListItemAdapter listItemAdapter;\nBundle bundle = getArguments();\n    if (bundle != null) {\n      int menuIndex = bundle.getInt(\"menuIndex\");//获取activity传过来的数据\n    }\n    listItemAdapter = new ListItemAdapter();\n    rvtItem.setAdapter(listItemAdapter);\n    rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(mContext, 20),\n        AutoSizeUtils.pt2px(mContext, 20));\n    rvtItem.setLayoutManager(new V7GridLayoutManager(mContext, 4));\n    rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n      @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.05f)\n            .scaleY(1.05f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundResource(R.drawable.bg_item);\n      }\n\n      @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.0f)\n            .scaleY(1.0f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n      }\n    });\n```\n  fragment没什么需要注意的东西，和之前的`RecyclerViewTV`网格列表一样的代码。\n\n### 遥控器按键\n遥控器按键主要有方向键(上、下、左、右)、确定、返回、播放（暂停）、数字等。\nactivity中可以通过`onKeyDown`和`dispatchKeyEvent`方法进行监听操作：\n```\n@Override public boolean onKeyDown(int keyCode, KeyEvent event) {\n  //TODO operating\n  return super.onKeyDown(keyCode, event);\n}\n@Override public boolean dispatchKeyEvent(KeyEvent event) {\n  //TODO operating\n  return super.dispatchKeyEvent(event);\n}\n```\n返回事件也可以通过`onBackPressed`方法监听操作。\n\nview可以通过`setOnKeyListener`方法进行监听操作：\n```\nview.setOnKeyListener(new View.OnKeyListener() {\n  @Override public boolean onKey(View view, int keyCode, KeyEvent keyEvent) {\n    //TODO operating\n    return false;\n  }\n});\n```\n按键监听的返回值为true时，则表示不执行按键操作，可自定义操作。\n\n| 键值 | 事件 |\n| :------ | :------: |\n| KeyEvent.KEYCODE_DPAD_UP | 上 |\n| KeyEvent.KEYCODE_DPAD_DOWN | 下 |\n| KeyEvent.KEYCODE_DPAD_LEFT | 左 |\n| KeyEvent.KEYCODE_DPAD_RIGHT | 右 |\n| KeyEvent.KEYCODE_DPAD_CENTER | 确定 |\n| KeyEvent.KEYCODE_MEDIA_PAUSE | 视频播放、暂停 |\n| KeyEvent.KEYCODE_1 | 0~9，10个数字 |\n| KeyEvent.KEYCODE_BACK | 返回键 |\n| KeyEvent.KEYCODE_HOME | 主页 |\n| KeyEvent.KEYCODE_A | A~Z，26个字母 |\n| KeyEvent.KEYCODE_MENU | 菜单 |\n| ... | ... |\n\n------\n \n  附：[项目地址][9]\n\n[1]:https://github.com/JessYanCoding/AndroidAutoSize\n[2]:https://github.com/googlesamples/androidtv-Leanback\n[3]:/uploads/androidtv/andridtv_gh_list.gif\n[4]:https://github.com/CymChad/BaseRecyclerViewAdapterHelper\n[5]:/uploads/androidtv/andridtv_rg_list.gif\n[6]:/uploads/androidtv/androidtv_gn_list.gif\n[7]:/uploads/androidtv/androidtv_rs_list.gif\n[8]:/uploads/androidtv/androidtv_o.gif\n[9]:https://github.com/blackchy/AndroidTV","source":"_posts/2018-12-18-AndroidTV.md","raw":"---\ntitle: AndroidTV入门\ndate: 2018-12-18 15:38:36\ncategories: android\ntags: AndroidTV\n---\n\n机顶盒现在基本都是通过安装的APK进行操作的，这些APK又分为EPG(Android嵌套Web，主要为Web端开发)和AndroidTV原生(主要为Android开发)，本文介绍AndroidTV开发入门流程。AndroidTV和手机App开发的主要区别就是它的布局是按照横屏显示器布局的，而且它是焦点控制（手机App主要是屏幕点击控制），在音视频方面比手机App需要注意更多的细节，以及其他一些小问题。还有比较重要的一点，AndroidTV需要考虑更多硬件的问题以及适配更老的Android版本，甚至是4.4以前的版本都有可能需要考虑。\n<!-- more -->\n### 准备\n\n大多数机顶盒的版本都比较低，所以AndroidStudio不推荐使用3.0（推荐2.3.3）及以上的版本进行开发，还有jdk版本也是一样（1.8足够了），所以记得复制别人代码的时候把lambda表达式改成常规的表达式，等等等等。\n\n### 适配\n\n1. 文字间距等布局时统一使用pt作为单位，例如：\n```\n<TextView\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"30pt\"\n      android:gravity=\"center\"\n      android:paddingLeft=\"10pt\"\n      android:paddingRight=\"10pt\"\n      android:text=\"Text\"\n      android:textColor=\"@color/colorWhite\"\n      android:textSize=\"20pt\"\n      />\n```\n2. 屏幕适配则使用[JessYan的Android适配方案][1]，首先添加依赖：\n```\ncompile 'me.jessyan:autosize:1.0.6'\n```\n  然后在自定义`Applicatio`的`create`方法中添加适配：\n```\nAutoSizeConfig.getInstance().getUnitsManager().setSupportDP(false).setSupportSubunits(Subunits.PT);\n```\n  最后，代码中需要转换的地方则用`AutoSizeUtils`里面的方法：\n```\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 20));\n```\n\n  当然，肯定还有其他更好的适配方式。\n\n### 列表\n\nAndroidTV开发中经常用到列表这种布局，这里有两种方法。\n\n1. Google提供的[androidtv-Leanback][2]。\n  布局文件：\n```\n<com.example.core.leanback.HorizontalGridView\n    android:id=\"@+id/hgv_item\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"100pt\"\n    android:clipChildren=\"false\"\n    android:clipToPadding=\"false\"\n    android:padding=\"20pt\"\n    />\n```\n  其中`android:clipChildren=\"false\"`和`android:clipToPadding=\"false\"`是为了做选中放大子视图时避免子视图不完整。\n\n  代码：\n```\n//@BindView(R.id.hgv_item) HorizontalGridView hgvItem;\n//private ListItemAdapter listItemAdapter;\nlistItemAdapter = new ListItemAdapter();\nhgvItem.setAdapter(listItemAdapter);\nhgvItem.setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));\nhgvItem.setOnItemListener(new OnItemListener() {\n  @Override public void onItemSelected(Object parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.05f)\n        .scaleY(1.05f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundResource(R.drawable.bg_item);\n  }\n\n  @Override public void onItemPreSelected(Object parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.0f)\n        .scaleY(1.0f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n  }\n});\nlistItemAdapter.setNewData(mockData.listItems);\n\n```\n  其中，`setHorizontalSpacing`方法为设置子视图之间的水平间距，`setOnItemListener`为子视图获得焦点和失去焦点的监听，`setOnItemListener`监听中添加了获得焦点的子视图放大1.05倍的动画和改变子视图背景使获得焦点的子视图视觉上更明显的效果。具体效果如下图：\n![img][3]\n\n  `Adapter`类:\n```\npublic class ListItemAdapter extends BaseQuickAdapter<String, BaseViewHolder> {\n  public ListItemAdapter() {\n    super(R.layout.item_list);\n  }\n\n  @Override protected void convert(BaseViewHolder helper, String item) {\n    helper.setText(R.id.tv_text, item);\n  }\n}\n```\n  子视图布局文件： \n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"150pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <TextView\n        android:id=\"@+id/tv_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:text=\"text\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"25pt\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  其中，`android:focusable=\"true\"`表示可获取控件的焦点（键盘、遥控器），`android:focusableInTouchMode=\"true\"`表示可通过触摸获取焦点（AndroidTV不需要，开发时使用模拟器会用到）。\n\n  > 注：\n  * leanback的垂直和水平列表是继承RecyclerView的自定义控件。\n  * leanback默认选中项滑动到屏幕中间位置。\n  * 列表的Adapter继承[BaseRecyclerViewAdapterHelper][4]，方便操作与管理。\n  * 垂直列表基本相同，使用的是`VerticalGridView`类。\n  * 水平列表有一个拓展类`HorizontalRowView`，以方便处理嵌套。\n   \n\n2. Github上有很多开发者自己仿照leanback自定义的RecyclerViewTV，也是继承的Recyclerview，它们也基本都是水平列表、垂直列表用一个布局，通过属性修改。这里找了一个（具体出处忘记了）来用一下。\n  布局文件：\n```\n<com.example.core.view.RecyclerViewTV\n    android:id=\"@+id/rvt_item\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_marginTop=\"100pt\"\n    android:orientation=\"horizontal\"\n    android:padding=\"20pt\"\n    app:layoutManagerTV=\"V7LinearLayoutManage\n    app:selectedItemIsCenteredTV=\"true\"\n    />\n```\n  其中，`layoutManagerTV`定义布局方式（`V7GridLayoutManager`、`V7LinearLayoutManager`、`V7StaggeredGridLayoutManager`），`selectedItemIsCenteredTV`设置选中项滑动到屏幕中间，`orientation`设置水平和垂直（`vertical`、`horizontal`）。`clipChildren`和`clipToPadding`根据需要添加。\n\n  代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ListItemAdapter listItemAdapter;\nlistItemAdapter = new ListItemAdapter();\nrvtItem.setAdapter(listItemAdapter);\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),\n    AutoSizeUtils.pt2px(context, 20));\nrvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.05f)\n        .scaleY(1.05f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundResource(R.drawable.bg_item);\n  }\n  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.0f)\n        .scaleY(1.0f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n  }\n});\nlistItemAdapter.setNewData(mockData.listItems);\n```\n  和leanback实现差不多的功能，adapter也是用的同一个adapter，其中设置间距的方法为`setSpacingWithMargins(verticalSpacing,horizontalSpacing)`，展示效果和上面leanback的一样。\n\n  RecyclerViewTV的网格布局可以避免部分嵌套。\n  布局文件：\n```\n<com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:padding=\"20pt\"\n      app:layoutManagerTV=\"V7GridLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n```\n  将`layoutManagerTV`设置为上面提到的`V7GridLayoutManager`即可。\n  效果：\n  ![img][5]\n\n### 列表嵌套\n\n1. leanback嵌套，这里采用先使用垂直列表，再嵌套水平列表。\n  垂直列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.leanback.VerticalGridView\n      android:id=\"@+id/vgv_item\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:clipChildren=\"false\"\n      android:clipToPadding=\"false\"\n      android:padding=\"20pt\"\n      />\n</RelativeLayout>\n```\n  水平列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:clipChildren=\"false\"\n    android:clipToPadding=\"false\"\n    >\n  <com.example.core.leanback.HorizontalRowView\n      android:id=\"@+id/hrv_item\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"wrap_content\"\n      android:clipChildren=\"false\"\n      android:clipToPadding=\"false\"\n      />\n</FrameLayout>\n```\n  代码：\n```\n//@BindView(R.id.vgv_item) VerticalGridView vgvItem;\n//private ItemAdapter itemAdapter;\nitemAdapter = new ItemAdapter();\nvgvItem.setAdapter(itemAdapter);\nvgvItem.setVerticalSpacing(AutoSizeUtils.pt2px(context, 20));\nitemAdapter.setNewData(mockData.gnLists);\n```\n  垂直列表adapter：\n```\npublic class ItemAdapter extends BaseQuickAdapter<GNList, BaseViewHolder> {\n  public ItemAdapter() {\n    super(R.layout.layout_gn);\n  }\n  @Override protected void convert(BaseViewHolder helper, GNList item) {\n    HorizontalRowView horizontalRowView = helper.getView(R.id.hrv_item);\n    ListItemAdapter listItemAdapter = new ListItemAdapter();\n    horizontalRowView.getGridView().setAdapter(listItemAdapter);\n    horizontalRowView.getGridView().setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));\n    horizontalRowView.getGridView().setOnItemListener(new OnItemListener() {\n      @Override public void onItemSelected(Object parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.05f)\n            .scaleY(1.05f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundResource(R.drawable.bg_item);\n      }\n      @Override public void onItemPreSelected(Object parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.0f)\n            .scaleY(1.0f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n      }\n    });\n    listItemAdapter.setNewData(mockData.listItems);\n  }\n}\n```\n  `GNList`类是一个普通的对象，里面只放了一个`String`列表。水平列表adapter使用上面提到的同一个adapter。\n  效果：\n  ![img][6]\n2. RecyclerViewTV嵌套，也是先使用垂直列表，再嵌套水平列表。\n  垂直列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:orientation=\"vertical\"\n      android:padding=\"20pt\"\n      app:layoutManagerTV=\"V7LinearLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</RelativeLayout>\n```\n  水平列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:clipChildren=\"false\"\n    android:clipToPadding=\"false\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_h_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:orientation=\"horizontal\"\n      app:layoutManagerTV=\"V7LinearLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</FrameLayout>\n```\n  代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ItemAdapter itemAdapter;\nitemAdapter = new ItemAdapter();\nrvtItem.setAdapter(itemAdapter);\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 0));\nitemAdapter.setNewData(mockData.rnLists);\n```\n  垂直列表adapter：\n```\npublic class ItemAdapter extends BaseQuickAdapter<RNList, BaseViewHolder> {\n    public ItemAdapter() {\n      super(R.layout.layout_rn);\n    }\n\n    @Override protected void convert(BaseViewHolder helper, RNList item) {\n      RecyclerViewTV rvthItem = helper.getView(R.id.rvt_h_item);\n      ListItemAdapter listItemAdapter = new ListItemAdapter();\n      rvthItem.setAdapter(listItemAdapter);\n      rvthItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),\n          AutoSizeUtils.pt2px(context, 20));\n      rvthItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n        @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n          itemView.animate()\n              .scaleX(1.05f)\n              .scaleY(1.05f)\n              .setInterpolator(new BounceInterpolator())\n              .setDuration(300)\n              .start();\n          itemView.setBackgroundResource(R.drawable.bg_item);\n        }\n\n        @Override\n        public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n          itemView.animate()\n              .scaleX(1.0f)\n              .scaleY(1.0f)\n              .setInterpolator(new BounceInterpolator())\n              .setDuration(300)\n              .start();\n          itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n        }\n      });\n      listItemAdapter.setNewData(mockData.listItems);\n    }\n  }\n```\n  `RNList`类和`GNList`一样，里面只放了一个`String`列表。\n  效果和leanback嵌套的效果一样。\n\n### 同一个列表不相同的item\n  在一个列表中，item展示的内容可能是不一样的，这里使用RecyclerViewTV演示，leanback使用方法差不多。\n  列表布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:layout_gravity=\"center_horizontal\"\n      android:padding=\"20pt\"\n      android:orientation=\"vertical\"\n      app:layoutManagerTV=\"V7GridLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</FrameLayout>\n```\n  item1(150pt x 150pt，中间文字)布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"150pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <TextView\n        android:id=\"@+id/tv_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:text=\"text\"\n        android:textColor=\"@android:color/white\"\n        android:textSize=\"25pt\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  item2(320pt x 150pt，中间图片和文字)布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"324pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <ImageView\n        android:layout_width=\"50pt\"\n        android:layout_height=\"50pt\"\n        android:layout_gravity=\"center_vertical\"\n        android:layout_marginLeft=\"30pt\"\n        android:src=\"@mipmap/ic_launcher\"\n        />\n    <TextView\n        android:id=\"@+id/tv_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center_vertical|right\"\n        android:layout_marginRight=\"30pt\"\n        android:text=\"text\"\n        android:textColor=\"@android:color/holo_green_light\"\n        android:textSize=\"25pt\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  item3(150pt x 150pt，中间图片)布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:focusable=\"true\"\n    android:focusableInTouchMode=\"true\"\n    android:padding=\"2pt\"\n    >\n  <FrameLayout\n      android:id=\"@+id/fl_content\"\n      android:layout_width=\"150pt\"\n      android:layout_height=\"150pt\"\n      android:background=\"@color/colorPrimary\"\n      >\n    <ImageView\n        android:id=\"@+id/iv_img\"\n        android:layout_width=\"50pt\"\n        android:layout_height=\"50pt\"\n        android:layout_gravity=\"center\"\n        android:src=\"@drawable/ic_launcher\"\n        />\n  </FrameLayout>\n</RelativeLayout>\n```\n  代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ItemAdapter itemAdapter;\nitemAdapter = new ItemAdapter();\nitemAdapter.setSpanSizeLookup(new BaseQuickAdapter.SpanSizeLookup() {\n  @Override public int getSpanSize(GridLayoutManager gridLayoutManager, int position) {\n    return RS_TYPE_LONG == mockData.rsModels.get(position).getItemType() ? 2 : 1;\n  }\n});\nrvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 20));\nrvtItem.setLayoutManager(new V7GridLayoutManager(context, 3));\nrvtItem.setAdapter(itemAdapter);\nrvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.05f)\n        .scaleY(1.05f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundResource(R.drawable.bg_item);\n  }\n  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.animate()\n        .scaleX(1.0f)\n        .scaleY(1.0f)\n        .setInterpolator(new BounceInterpolator())\n        .setDuration(300)\n        .start();\n    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n  }\n});\nitemAdapter.setNewData(mockData.rsModels);\nitemAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {\n  @Override public void onItemClick(BaseQuickAdapter adapter, View view, int position) {\n    toastor.showToast(\"click\" + position);\n  }\n});\n```\n  注：**`RecyclerViewTV`的`setAdapter`方法要放在`setLayoutManager`方法后面，否则`Adapter`的`setSpanSizeLookup`方法不会执行。**\n  效果：\n  ![img][7]\n\n### 暗焦点\n暗焦点也是一个经常需要用到的功能，比如下面就是一个左边菜单右边内容的布局，需要暗焦点提示使用者菜单的当前选中项。先放效果图：\n![img][8]\n外框架activity布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:background=\"@android:color/black\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_menu\"\n      android:layout_width=\"200pt\"\n      android:layout_height=\"wrap_content\"\n      android:layout_centerVertical=\"true\"\n      android:orientation=\"vertical\"\n      app:layoutManagerTV=\"V7LinearLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n  <com.example.core.view.VerticalViewPager\n      android:id=\"@+id/vvp_content\"\n      android:layout_width=\"match_parent\"\n      android:layout_height=\"match_parent\"\n      android:layout_toRightOf=\"@id/rvt_menu\"\n      />\n</RelativeLayout>\n```\nfragment布局：\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    >\n  <com.example.core.view.RecyclerViewTV\n      android:id=\"@+id/rvt_item\"\n      android:layout_width=\"wrap_content\"\n      android:layout_height=\"wrap_content\"\n      android:padding=\"20pt\"\n      app:layoutManagerTV=\"V7GridLayoutManager\"\n      app:selectedItemIsCenteredTV=\"true\"\n      />\n</RelativeLayout>\n```\n外框架activity主要代码：\n```\n//@BindView(R.id.rvt_menu) RecyclerViewTV rvtMenu;\n//@BindView(R.id.vvp_content) VerticalViewPager vvpContent;\n//@BindColor(android.R.color.transparent) int transparent;\n//@BindColor(R.color.colorPrimary) int darkerGray;\n//@BindColor(android.R.color.tertiary_text_light) int textLight;\n//private MenuAdapter menuAdapter;\n//private boolean isRight = false;\n//private ViewPagerAdapter pagerAdapter;\nmenuAdapter = new MenuAdapter();\nrvtMenu.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),\n    AutoSizeUtils.pt2px(context, 0));\nrvtMenu.setAdapter(menuAdapter);\nrvtMenu.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n    if (position != vvpContent.getCurrentItem()) {\n      vvpContent.setCurrentItem(position);\n    }\n    itemView.setBackgroundColor(darkerGray);\n  }\n  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n    itemView.setBackgroundColor(isRight ? textLight : transparent);\n  }\n});\nrvtMenu.setOnChildViewHolderSelectedListener(\n    new RecyclerViewTV.OnChildViewHolderSelectedListener() {\n      @Override\n      public void onChildViewHolderSelected(RecyclerViewTV parent, RecyclerView.ViewHolder vh,\n          int position) {\n        vh.itemView.setOnKeyListener(new View.OnKeyListener() {\n          @Override public boolean onKey(View view, int i, KeyEvent keyEvent) {\n            if (keyEvent.getAction() == KeyEvent.ACTION_DOWN) {\n              isRight = i == KeyEvent.KEYCODE_DPAD_RIGHT;\n            }\n            return false;\n          }\n        });\n      }\n    });\nmenuAdapter.setNewData(mockData.outMenu);\nfor (int i = 0; i < mockData.outMenu.size(); i++) {\n  BaseFragment fragment = new ConentFragment();\n  Bundle bundle = new Bundle();\n  bundle.putInt(\"menuIndex\", i);\n  fragment.setArguments(bundle);\n  fragments.add(fragment);\n}\npagerAdapter = new ViewPagerAdapter(fragmentManager, fragments);\nvvpContent.setAdapter(pagerAdapter);\nsetViewPagerSpeed(vvpContent, 300);//设置viewpager切换的速度\n```\n  `MenuAdapter`上面例子已经有很多不再重复放了。这里是通过一个布尔值`isRight`和`setOnChildViewHolderSelectedListener`方法记录操作状态实现暗焦点的，`setOnChildViewHolderSelectedListener`是一个列表子项的监听事件。还可以通过`View`的`activated`值来记录暗焦点，比如列表选中的最后一项的子视图设置为`activated`,在子视图监听事件`setOnItemListener`中通过`itemView.isActivated()`判断是否为暗焦点。本项目使用的RecyclerViewTV专门针对暗焦点做了处理就是通过`activated`实现的，通过`isMenu(true)`打开即可进行暗焦点的设置和判断操作。\n\n外框架activity需要注意的方法：\n```\n@Override public void onAttachedToWindow() {\n  super.onAttachedToWindow();\n  rvtMenu.setSelection(0);\n}\nprotected void setViewPagerSpeed(VerticalViewPager viewPager, int mDuration) {\n  try {\n    Field field = VerticalViewPager.class.getDeclaredField(\"mScroller\");\n    field.setAccessible(true);\n    FixedSpeedScroller scroller =\n        new FixedSpeedScroller(viewPager.getContext(), new AccelerateInterpolator());\n    field.set(viewPager, scroller);\n    scroller.setmDuration(mDuration);\n  } catch (Exception e) {\n  }\n}\n```\n  因为fragment里面的数据可能会后渲染，在刚进入这个界面的时候焦点会在fragment上面，所以需要再`onAttachedToWindow`方法中让焦点进入界面渲染完成后回到菜单上，这里不用`requestFocus()`而使用`setSelection()`是因为`setSelection()`里面已经包含了`requestFocus()`方法并且它能选择列表具体哪一个子项获得焦点。\n  `setViewPagerSpeed`是一个设置viewpager页面切换速度的方法。\n\nfragment代码：\n```\n//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;\n//private ListItemAdapter listItemAdapter;\nBundle bundle = getArguments();\n    if (bundle != null) {\n      int menuIndex = bundle.getInt(\"menuIndex\");//获取activity传过来的数据\n    }\n    listItemAdapter = new ListItemAdapter();\n    rvtItem.setAdapter(listItemAdapter);\n    rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(mContext, 20),\n        AutoSizeUtils.pt2px(mContext, 20));\n    rvtItem.setLayoutManager(new V7GridLayoutManager(mContext, 4));\n    rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() {\n      @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.05f)\n            .scaleY(1.05f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundResource(R.drawable.bg_item);\n      }\n\n      @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) {\n        itemView.animate()\n            .scaleX(1.0f)\n            .scaleY(1.0f)\n            .setInterpolator(new BounceInterpolator())\n            .setDuration(300)\n            .start();\n        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));\n      }\n    });\n```\n  fragment没什么需要注意的东西，和之前的`RecyclerViewTV`网格列表一样的代码。\n\n### 遥控器按键\n遥控器按键主要有方向键(上、下、左、右)、确定、返回、播放（暂停）、数字等。\nactivity中可以通过`onKeyDown`和`dispatchKeyEvent`方法进行监听操作：\n```\n@Override public boolean onKeyDown(int keyCode, KeyEvent event) {\n  //TODO operating\n  return super.onKeyDown(keyCode, event);\n}\n@Override public boolean dispatchKeyEvent(KeyEvent event) {\n  //TODO operating\n  return super.dispatchKeyEvent(event);\n}\n```\n返回事件也可以通过`onBackPressed`方法监听操作。\n\nview可以通过`setOnKeyListener`方法进行监听操作：\n```\nview.setOnKeyListener(new View.OnKeyListener() {\n  @Override public boolean onKey(View view, int keyCode, KeyEvent keyEvent) {\n    //TODO operating\n    return false;\n  }\n});\n```\n按键监听的返回值为true时，则表示不执行按键操作，可自定义操作。\n\n| 键值 | 事件 |\n| :------ | :------: |\n| KeyEvent.KEYCODE_DPAD_UP | 上 |\n| KeyEvent.KEYCODE_DPAD_DOWN | 下 |\n| KeyEvent.KEYCODE_DPAD_LEFT | 左 |\n| KeyEvent.KEYCODE_DPAD_RIGHT | 右 |\n| KeyEvent.KEYCODE_DPAD_CENTER | 确定 |\n| KeyEvent.KEYCODE_MEDIA_PAUSE | 视频播放、暂停 |\n| KeyEvent.KEYCODE_1 | 0~9，10个数字 |\n| KeyEvent.KEYCODE_BACK | 返回键 |\n| KeyEvent.KEYCODE_HOME | 主页 |\n| KeyEvent.KEYCODE_A | A~Z，26个字母 |\n| KeyEvent.KEYCODE_MENU | 菜单 |\n| ... | ... |\n\n------\n \n  附：[项目地址][9]\n\n[1]:https://github.com/JessYanCoding/AndroidAutoSize\n[2]:https://github.com/googlesamples/androidtv-Leanback\n[3]:/uploads/androidtv/andridtv_gh_list.gif\n[4]:https://github.com/CymChad/BaseRecyclerViewAdapterHelper\n[5]:/uploads/androidtv/andridtv_rg_list.gif\n[6]:/uploads/androidtv/androidtv_gn_list.gif\n[7]:/uploads/androidtv/androidtv_rs_list.gif\n[8]:/uploads/androidtv/androidtv_o.gif\n[9]:https://github.com/blackchy/AndroidTV","slug":"2018-12-18-AndroidTV","published":1,"updated":"2018-12-18T08:51:21.728Z","_id":"cjptgnrry00006gugoxtwpsp8","comments":1,"layout":"post","photos":[],"link":"","content":"<p>机顶盒现在基本都是通过安装的APK进行操作的，这些APK又分为EPG(Android嵌套Web，主要为Web端开发)和AndroidTV原生(主要为Android开发)，本文介绍AndroidTV开发入门流程。AndroidTV和手机App开发的主要区别就是它的布局是按照横屏显示器布局的，而且它是焦点控制（手机App主要是屏幕点击控制），在音视频方面比手机App需要注意更多的细节，以及其他一些小问题。还有比较重要的一点，AndroidTV需要考虑更多硬件的问题以及适配更老的Android版本，甚至是4.4以前的版本都有可能需要考虑。<br><a id=\"more\"></a></p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>大多数机顶盒的版本都比较低，所以AndroidStudio不推荐使用3.0（推荐2.3.3）及以上的版本进行开发，还有jdk版本也是一样（1.8足够了），所以记得复制别人代码的时候把lambda表达式改成常规的表达式，等等等等。</p>\n<h3 id=\"适配\"><a href=\"#适配\" class=\"headerlink\" title=\"适配\"></a>适配</h3><ol>\n<li><p>文字间距等布局时统一使用pt作为单位，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;TextView</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;30pt&quot;</span><br><span class=\"line\">      android:gravity=&quot;center&quot;</span><br><span class=\"line\">      android:paddingLeft=&quot;10pt&quot;</span><br><span class=\"line\">      android:paddingRight=&quot;10pt&quot;</span><br><span class=\"line\">      android:text=&quot;Text&quot;</span><br><span class=\"line\">      android:textColor=&quot;@color/colorWhite&quot;</span><br><span class=\"line\">      android:textSize=&quot;20pt&quot;</span><br><span class=\"line\">      /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>屏幕适配则使用<a href=\"https://github.com/JessYanCoding/AndroidAutoSize\" target=\"_blank\" rel=\"noopener\">JessYan的Android适配方案</a>，首先添加依赖：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;me.jessyan:autosize:1.0.6&apos;</span><br></pre></td></tr></table></figure>\n<p>然后在自定义<code>Applicatio</code>的<code>create</code>方法中添加适配：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AutoSizeConfig.getInstance().getUnitsManager().setSupportDP(false).setSupportSubunits(Subunits.PT);</span><br></pre></td></tr></table></figure>\n<p>最后，代码中需要转换的地方则用<code>AutoSizeUtils</code>里面的方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 20));</span><br></pre></td></tr></table></figure>\n<p>当然，肯定还有其他更好的适配方式。</p>\n</li>\n</ol>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>AndroidTV开发中经常用到列表这种布局，这里有两种方法。</p>\n<ol>\n<li><p>Google提供的<a href=\"https://github.com/googlesamples/androidtv-Leanback\" target=\"_blank\" rel=\"noopener\">androidtv-Leanback</a>。<br>布局文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.example.core.leanback.HorizontalGridView</span><br><span class=\"line\">    android:id=&quot;@+id/hgv_item&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_marginTop=&quot;100pt&quot;</span><br><span class=\"line\">    android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">    android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">    android:padding=&quot;20pt&quot;</span><br><span class=\"line\">    /&gt;</span><br></pre></td></tr></table></figure>\n<p>其中<code>android:clipChildren=&quot;false&quot;</code>和<code>android:clipToPadding=&quot;false&quot;</code>是为了做选中放大子视图时避免子视图不完整。</p>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.hgv_item) HorizontalGridView hgvItem;</span><br><span class=\"line\">//private ListItemAdapter listItemAdapter;</span><br><span class=\"line\">listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">hgvItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">hgvItem.setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">hgvItem.setOnItemListener(new OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.05f)</span><br><span class=\"line\">        .scaleY(1.05f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override public void onItemPreSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.0f)</span><br><span class=\"line\">        .scaleY(1.0f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">listItemAdapter.setNewData(mockData.listItems);</span><br></pre></td></tr></table></figure>\n<p>其中，<code>setHorizontalSpacing</code>方法为设置子视图之间的水平间距，<code>setOnItemListener</code>为子视图获得焦点和失去焦点的监听，<code>setOnItemListener</code>监听中添加了获得焦点的子视图放大1.05倍的动画和改变子视图背景使获得焦点的子视图视觉上更明显的效果。具体效果如下图：<br><img src=\"/uploads/androidtv/andridtv_gh_list.gif\" alt=\"img\"></p>\n<p><code>Adapter</code>类:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ListItemAdapter extends BaseQuickAdapter&lt;String, BaseViewHolder&gt; &#123;</span><br><span class=\"line\">  public ListItemAdapter() &#123;</span><br><span class=\"line\">    super(R.layout.item_list);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override protected void convert(BaseViewHolder helper, String item) &#123;</span><br><span class=\"line\">    helper.setText(R.id.tv_text, item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>子视图布局文件： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;150pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/tv_text&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center&quot;</span><br><span class=\"line\">        android:text=&quot;text&quot;</span><br><span class=\"line\">        android:textColor=&quot;@android:color/white&quot;</span><br><span class=\"line\">        android:textSize=&quot;25pt&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>android:focusable=&quot;true&quot;</code>表示可获取控件的焦点（键盘、遥控器），<code>android:focusableInTouchMode=&quot;true&quot;</code>表示可通过触摸获取焦点（AndroidTV不需要，开发时使用模拟器会用到）。</p>\n<blockquote>\n<p>注：</p>\n<ul>\n<li>leanback的垂直和水平列表是继承RecyclerView的自定义控件。</li>\n<li>leanback默认选中项滑动到屏幕中间位置。</li>\n<li>列表的Adapter继承<a href=\"https://github.com/CymChad/BaseRecyclerViewAdapterHelper\" target=\"_blank\" rel=\"noopener\">BaseRecyclerViewAdapterHelper</a>，方便操作与管理。</li>\n<li>垂直列表基本相同，使用的是<code>VerticalGridView</code>类。</li>\n<li>水平列表有一个拓展类<code>HorizontalRowView</code>，以方便处理嵌套。</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>Github上有很多开发者自己仿照leanback自定义的RecyclerViewTV，也是继承的Recyclerview，它们也基本都是水平列表、垂直列表用一个布局，通过属性修改。这里找了一个（具体出处忘记了）来用一下。<br>布局文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">    android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_marginTop=&quot;100pt&quot;</span><br><span class=\"line\">    android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">    android:padding=&quot;20pt&quot;</span><br><span class=\"line\">    app:layoutManagerTV=&quot;V7LinearLayoutManage</span><br><span class=\"line\">    app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">    /&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>layoutManagerTV</code>定义布局方式（<code>V7GridLayoutManager</code>、<code>V7LinearLayoutManager</code>、<code>V7StaggeredGridLayoutManager</code>），<code>selectedItemIsCenteredTV</code>设置选中项滑动到屏幕中间，<code>orientation</code>设置水平和垂直（<code>vertical</code>、<code>horizontal</code>）。<code>clipChildren</code>和<code>clipToPadding</code>根据需要添加。</p>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ListItemAdapter listItemAdapter;</span><br><span class=\"line\">listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">rvtItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.05f)</span><br><span class=\"line\">        .scaleY(1.05f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.0f)</span><br><span class=\"line\">        .scaleY(1.0f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">listItemAdapter.setNewData(mockData.listItems);</span><br></pre></td></tr></table></figure>\n<p>和leanback实现差不多的功能，adapter也是用的同一个adapter，其中设置间距的方法为<code>setSpacingWithMargins(verticalSpacing,horizontalSpacing)</code>，展示效果和上面leanback的一样。</p>\n<p>RecyclerViewTV的网格布局可以避免部分嵌套。<br>布局文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br></pre></td></tr></table></figure>\n<p>将<code>layoutManagerTV</code>设置为上面提到的<code>V7GridLayoutManager</code>即可。<br>效果：<br><img src=\"/uploads/androidtv/andridtv_rg_list.gif\" alt=\"img\"></p>\n</li>\n</ol>\n<h3 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h3><ol>\n<li><p>leanback嵌套，这里采用先使用垂直列表，再嵌套水平列表。<br>垂直列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.leanback.VerticalGridView</span><br><span class=\"line\">      android:id=&quot;@+id/vgv_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">      android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">      android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>水平列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">    android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.leanback.HorizontalRowView</span><br><span class=\"line\">      android:id=&quot;@+id/hrv_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">      android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.vgv_item) VerticalGridView vgvItem;</span><br><span class=\"line\">//private ItemAdapter itemAdapter;</span><br><span class=\"line\">itemAdapter = new ItemAdapter();</span><br><span class=\"line\">vgvItem.setAdapter(itemAdapter);</span><br><span class=\"line\">vgvItem.setVerticalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">itemAdapter.setNewData(mockData.gnLists);</span><br></pre></td></tr></table></figure>\n<p>垂直列表adapter：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ItemAdapter extends BaseQuickAdapter&lt;GNList, BaseViewHolder&gt; &#123;</span><br><span class=\"line\">  public ItemAdapter() &#123;</span><br><span class=\"line\">    super(R.layout.layout_gn);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override protected void convert(BaseViewHolder helper, GNList item) &#123;</span><br><span class=\"line\">    HorizontalRowView horizontalRowView = helper.getView(R.id.hrv_item);</span><br><span class=\"line\">    ListItemAdapter listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">    horizontalRowView.getGridView().setAdapter(listItemAdapter);</span><br><span class=\"line\">    horizontalRowView.getGridView().setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">    horizontalRowView.getGridView().setOnItemListener(new OnItemListener() &#123;</span><br><span class=\"line\">      @Override public void onItemSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.05f)</span><br><span class=\"line\">            .scaleY(1.05f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      @Override public void onItemPreSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.0f)</span><br><span class=\"line\">            .scaleY(1.0f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    listItemAdapter.setNewData(mockData.listItems);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>GNList</code>类是一个普通的对象，里面只放了一个<code>String</code>列表。水平列表adapter使用上面提到的同一个adapter。<br>效果：<br><img src=\"/uploads/androidtv/androidtv_gn_list.gif\" alt=\"img\"></p>\n</li>\n<li><p>RecyclerViewTV嵌套，也是先使用垂直列表，再嵌套水平列表。<br>垂直列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">      android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>水平列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">    android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_h_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ItemAdapter itemAdapter;</span><br><span class=\"line\">itemAdapter = new ItemAdapter();</span><br><span class=\"line\">rvtItem.setAdapter(itemAdapter);</span><br><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 0));</span><br><span class=\"line\">itemAdapter.setNewData(mockData.rnLists);</span><br></pre></td></tr></table></figure>\n<p>垂直列表adapter：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ItemAdapter extends BaseQuickAdapter&lt;RNList, BaseViewHolder&gt; &#123;</span><br><span class=\"line\">    public ItemAdapter() &#123;</span><br><span class=\"line\">      super(R.layout.layout_rn);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override protected void convert(BaseViewHolder helper, RNList item) &#123;</span><br><span class=\"line\">      RecyclerViewTV rvthItem = helper.getView(R.id.rvt_h_item);</span><br><span class=\"line\">      ListItemAdapter listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">      rvthItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">      rvthItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),</span><br><span class=\"line\">          AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">      rvthItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">        @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">          itemView.animate()</span><br><span class=\"line\">              .scaleX(1.05f)</span><br><span class=\"line\">              .scaleY(1.05f)</span><br><span class=\"line\">              .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">              .setDuration(300)</span><br><span class=\"line\">              .start();</span><br><span class=\"line\">          itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">          itemView.animate()</span><br><span class=\"line\">              .scaleX(1.0f)</span><br><span class=\"line\">              .scaleY(1.0f)</span><br><span class=\"line\">              .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">              .setDuration(300)</span><br><span class=\"line\">              .start();</span><br><span class=\"line\">          itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      listItemAdapter.setNewData(mockData.listItems);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><code>RNList</code>类和<code>GNList</code>一样，里面只放了一个<code>String</code>列表。<br>效果和leanback嵌套的效果一样。</p>\n</li>\n</ol>\n<h3 id=\"同一个列表不相同的item\"><a href=\"#同一个列表不相同的item\" class=\"headerlink\" title=\"同一个列表不相同的item\"></a>同一个列表不相同的item</h3><p>  在一个列表中，item展示的内容可能是不一样的，这里使用RecyclerViewTV演示，leanback使用方法差不多。<br>  列表布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_gravity=&quot;center_horizontal&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  item1(150pt x 150pt，中间文字)布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;150pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/tv_text&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center&quot;</span><br><span class=\"line\">        android:text=&quot;text&quot;</span><br><span class=\"line\">        android:textColor=&quot;@android:color/white&quot;</span><br><span class=\"line\">        android:textSize=&quot;25pt&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  item2(320pt x 150pt，中间图片和文字)布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;324pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;ImageView</span><br><span class=\"line\">        android:layout_width=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_height=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center_vertical&quot;</span><br><span class=\"line\">        android:layout_marginLeft=&quot;30pt&quot;</span><br><span class=\"line\">        android:src=&quot;@mipmap/ic_launcher&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/tv_text&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center_vertical|right&quot;</span><br><span class=\"line\">        android:layout_marginRight=&quot;30pt&quot;</span><br><span class=\"line\">        android:text=&quot;text&quot;</span><br><span class=\"line\">        android:textColor=&quot;@android:color/holo_green_light&quot;</span><br><span class=\"line\">        android:textSize=&quot;25pt&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  item3(150pt x 150pt，中间图片)布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;150pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;ImageView</span><br><span class=\"line\">        android:id=&quot;@+id/iv_img&quot;</span><br><span class=\"line\">        android:layout_width=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_height=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center&quot;</span><br><span class=\"line\">        android:src=&quot;@drawable/ic_launcher&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ItemAdapter itemAdapter;</span><br><span class=\"line\">itemAdapter = new ItemAdapter();</span><br><span class=\"line\">itemAdapter.setSpanSizeLookup(new BaseQuickAdapter.SpanSizeLookup() &#123;</span><br><span class=\"line\">  @Override public int getSpanSize(GridLayoutManager gridLayoutManager, int position) &#123;</span><br><span class=\"line\">    return RS_TYPE_LONG == mockData.rsModels.get(position).getItemType() ? 2 : 1;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">rvtItem.setLayoutManager(new V7GridLayoutManager(context, 3));</span><br><span class=\"line\">rvtItem.setAdapter(itemAdapter);</span><br><span class=\"line\">rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.05f)</span><br><span class=\"line\">        .scaleY(1.05f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.0f)</span><br><span class=\"line\">        .scaleY(1.0f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">itemAdapter.setNewData(mockData.rsModels);</span><br><span class=\"line\">itemAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() &#123;</span><br><span class=\"line\">  @Override public void onItemClick(BaseQuickAdapter adapter, View view, int position) &#123;</span><br><span class=\"line\">    toastor.showToast(&quot;click&quot; + position);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>  注：<strong><code>RecyclerViewTV</code>的<code>setAdapter</code>方法要放在<code>setLayoutManager</code>方法后面，否则<code>Adapter</code>的<code>setSpanSizeLookup</code>方法不会执行。</strong><br>  效果：<br>  <img src=\"/uploads/androidtv/androidtv_rs_list.gif\" alt=\"img\"></p>\n<h3 id=\"暗焦点\"><a href=\"#暗焦点\" class=\"headerlink\" title=\"暗焦点\"></a>暗焦点</h3><p>暗焦点也是一个经常需要用到的功能，比如下面就是一个左边菜单右边内容的布局，需要暗焦点提示使用者菜单的当前选中项。先放效果图：<br><img src=\"/uploads/androidtv/androidtv_o.gif\" alt=\"img\"><br>外框架activity布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_menu&quot;</span><br><span class=\"line\">      android:layout_width=&quot;200pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_centerVertical=&quot;true&quot;</span><br><span class=\"line\">      android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">  &lt;com.example.core.view.VerticalViewPager</span><br><span class=\"line\">      android:id=&quot;@+id/vvp_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_toRightOf=&quot;@id/rvt_menu&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>fragment布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>外框架activity主要代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_menu) RecyclerViewTV rvtMenu;</span><br><span class=\"line\">//@BindView(R.id.vvp_content) VerticalViewPager vvpContent;</span><br><span class=\"line\">//@BindColor(android.R.color.transparent) int transparent;</span><br><span class=\"line\">//@BindColor(R.color.colorPrimary) int darkerGray;</span><br><span class=\"line\">//@BindColor(android.R.color.tertiary_text_light) int textLight;</span><br><span class=\"line\">//private MenuAdapter menuAdapter;</span><br><span class=\"line\">//private boolean isRight = false;</span><br><span class=\"line\">//private ViewPagerAdapter pagerAdapter;</span><br><span class=\"line\">menuAdapter = new MenuAdapter();</span><br><span class=\"line\">rvtMenu.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 0));</span><br><span class=\"line\">rvtMenu.setAdapter(menuAdapter);</span><br><span class=\"line\">rvtMenu.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    if (position != vvpContent.getCurrentItem()) &#123;</span><br><span class=\"line\">      vvpContent.setCurrentItem(position);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    itemView.setBackgroundColor(darkerGray);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.setBackgroundColor(isRight ? textLight : transparent);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">rvtMenu.setOnChildViewHolderSelectedListener(</span><br><span class=\"line\">    new RecyclerViewTV.OnChildViewHolderSelectedListener() &#123;</span><br><span class=\"line\">      @Override</span><br><span class=\"line\">      public void onChildViewHolderSelected(RecyclerViewTV parent, RecyclerView.ViewHolder vh,</span><br><span class=\"line\">          int position) &#123;</span><br><span class=\"line\">        vh.itemView.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class=\"line\">          @Override public boolean onKey(View view, int i, KeyEvent keyEvent) &#123;</span><br><span class=\"line\">            if (keyEvent.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class=\"line\">              isRight = i == KeyEvent.KEYCODE_DPAD_RIGHT;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">menuAdapter.setNewData(mockData.outMenu);</span><br><span class=\"line\">for (int i = 0; i &lt; mockData.outMenu.size(); i++) &#123;</span><br><span class=\"line\">  BaseFragment fragment = new ConentFragment();</span><br><span class=\"line\">  Bundle bundle = new Bundle();</span><br><span class=\"line\">  bundle.putInt(&quot;menuIndex&quot;, i);</span><br><span class=\"line\">  fragment.setArguments(bundle);</span><br><span class=\"line\">  fragments.add(fragment);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pagerAdapter = new ViewPagerAdapter(fragmentManager, fragments);</span><br><span class=\"line\">vvpContent.setAdapter(pagerAdapter);</span><br><span class=\"line\">setViewPagerSpeed(vvpContent, 300);//设置viewpager切换的速度</span><br></pre></td></tr></table></figure></p>\n<p>  <code>MenuAdapter</code>上面例子已经有很多不再重复放了。这里是通过一个布尔值<code>isRight</code>和<code>setOnChildViewHolderSelectedListener</code>方法记录操作状态实现暗焦点的，<code>setOnChildViewHolderSelectedListener</code>是一个列表子项的监听事件。还可以通过<code>View</code>的<code>activated</code>值来记录暗焦点，比如列表选中的最后一项的子视图设置为<code>activated</code>,在子视图监听事件<code>setOnItemListener</code>中通过<code>itemView.isActivated()</code>判断是否为暗焦点。本项目使用的RecyclerViewTV专门针对暗焦点做了处理就是通过<code>activated</code>实现的，通过<code>isMenu(true)</code>打开即可进行暗焦点的设置和判断操作。</p>\n<p>外框架activity需要注意的方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override public void onAttachedToWindow() &#123;</span><br><span class=\"line\">  super.onAttachedToWindow();</span><br><span class=\"line\">  rvtMenu.setSelection(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">protected void setViewPagerSpeed(VerticalViewPager viewPager, int mDuration) &#123;</span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\">    Field field = VerticalViewPager.class.getDeclaredField(&quot;mScroller&quot;);</span><br><span class=\"line\">    field.setAccessible(true);</span><br><span class=\"line\">    FixedSpeedScroller scroller =</span><br><span class=\"line\">        new FixedSpeedScroller(viewPager.getContext(), new AccelerateInterpolator());</span><br><span class=\"line\">    field.set(viewPager, scroller);</span><br><span class=\"line\">    scroller.setmDuration(mDuration);</span><br><span class=\"line\">  &#125; catch (Exception e) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>  因为fragment里面的数据可能会后渲染，在刚进入这个界面的时候焦点会在fragment上面，所以需要再<code>onAttachedToWindow</code>方法中让焦点进入界面渲染完成后回到菜单上，这里不用<code>requestFocus()</code>而使用<code>setSelection()</code>是因为<code>setSelection()</code>里面已经包含了<code>requestFocus()</code>方法并且它能选择列表具体哪一个子项获得焦点。<br>  <code>setViewPagerSpeed</code>是一个设置viewpager页面切换速度的方法。</p>\n<p>fragment代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ListItemAdapter listItemAdapter;</span><br><span class=\"line\">Bundle bundle = getArguments();</span><br><span class=\"line\">    if (bundle != null) &#123;</span><br><span class=\"line\">      int menuIndex = bundle.getInt(&quot;menuIndex&quot;);//获取activity传过来的数据</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">    rvtItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">    rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(mContext, 20),</span><br><span class=\"line\">        AutoSizeUtils.pt2px(mContext, 20));</span><br><span class=\"line\">    rvtItem.setLayoutManager(new V7GridLayoutManager(mContext, 4));</span><br><span class=\"line\">    rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">      @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.05f)</span><br><span class=\"line\">            .scaleY(1.05f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.0f)</span><br><span class=\"line\">            .scaleY(1.0f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>  fragment没什么需要注意的东西，和之前的<code>RecyclerViewTV</code>网格列表一样的代码。</p>\n<h3 id=\"遥控器按键\"><a href=\"#遥控器按键\" class=\"headerlink\" title=\"遥控器按键\"></a>遥控器按键</h3><p>遥控器按键主要有方向键(上、下、左、右)、确定、返回、播放（暂停）、数字等。<br>activity中可以通过<code>onKeyDown</code>和<code>dispatchKeyEvent</code>方法进行监听操作：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">  //TODO operating</span><br><span class=\"line\">  return super.onKeyDown(keyCode, event);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@Override public boolean dispatchKeyEvent(KeyEvent event) &#123;</span><br><span class=\"line\">  //TODO operating</span><br><span class=\"line\">  return super.dispatchKeyEvent(event);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>返回事件也可以通过<code>onBackPressed</code>方法监听操作。</p>\n<p>view可以通过<code>setOnKeyListener</code>方法进行监听操作：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class=\"line\">  @Override public boolean onKey(View view, int keyCode, KeyEvent keyEvent) &#123;</span><br><span class=\"line\">    //TODO operating</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>按键监听的返回值为true时，则表示不执行按键操作，可自定义操作。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">键值</th>\n<th style=\"text-align:center\">事件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_UP</td>\n<td style=\"text-align:center\">上</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_DOWN</td>\n<td style=\"text-align:center\">下</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_LEFT</td>\n<td style=\"text-align:center\">左</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_RIGHT</td>\n<td style=\"text-align:center\">右</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_CENTER</td>\n<td style=\"text-align:center\">确定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_MEDIA_PAUSE</td>\n<td style=\"text-align:center\">视频播放、暂停</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_1</td>\n<td style=\"text-align:center\">0~9，10个数字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_BACK</td>\n<td style=\"text-align:center\">返回键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_HOME</td>\n<td style=\"text-align:center\">主页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_A</td>\n<td style=\"text-align:center\">A~Z，26个字母</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_MENU</td>\n<td style=\"text-align:center\">菜单</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">…</td>\n<td style=\"text-align:center\">…</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>  附：<a href=\"https://github.com/blackchy/AndroidTV\" target=\"_blank\" rel=\"noopener\">项目地址</a></p>\n","site":{"data":{}},"excerpt":"<p>机顶盒现在基本都是通过安装的APK进行操作的，这些APK又分为EPG(Android嵌套Web，主要为Web端开发)和AndroidTV原生(主要为Android开发)，本文介绍AndroidTV开发入门流程。AndroidTV和手机App开发的主要区别就是它的布局是按照横屏显示器布局的，而且它是焦点控制（手机App主要是屏幕点击控制），在音视频方面比手机App需要注意更多的细节，以及其他一些小问题。还有比较重要的一点，AndroidTV需要考虑更多硬件的问题以及适配更老的Android版本，甚至是4.4以前的版本都有可能需要考虑。<br>","more":"</p>\n<h3 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h3><p>大多数机顶盒的版本都比较低，所以AndroidStudio不推荐使用3.0（推荐2.3.3）及以上的版本进行开发，还有jdk版本也是一样（1.8足够了），所以记得复制别人代码的时候把lambda表达式改成常规的表达式，等等等等。</p>\n<h3 id=\"适配\"><a href=\"#适配\" class=\"headerlink\" title=\"适配\"></a>适配</h3><ol>\n<li><p>文字间距等布局时统一使用pt作为单位，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;TextView</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;30pt&quot;</span><br><span class=\"line\">      android:gravity=&quot;center&quot;</span><br><span class=\"line\">      android:paddingLeft=&quot;10pt&quot;</span><br><span class=\"line\">      android:paddingRight=&quot;10pt&quot;</span><br><span class=\"line\">      android:text=&quot;Text&quot;</span><br><span class=\"line\">      android:textColor=&quot;@color/colorWhite&quot;</span><br><span class=\"line\">      android:textSize=&quot;20pt&quot;</span><br><span class=\"line\">      /&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>屏幕适配则使用<a href=\"https://github.com/JessYanCoding/AndroidAutoSize\" target=\"_blank\" rel=\"noopener\">JessYan的Android适配方案</a>，首先添加依赖：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">compile &apos;me.jessyan:autosize:1.0.6&apos;</span><br></pre></td></tr></table></figure>\n<p>然后在自定义<code>Applicatio</code>的<code>create</code>方法中添加适配：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AutoSizeConfig.getInstance().getUnitsManager().setSupportDP(false).setSupportSubunits(Subunits.PT);</span><br></pre></td></tr></table></figure>\n<p>最后，代码中需要转换的地方则用<code>AutoSizeUtils</code>里面的方法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 20));</span><br></pre></td></tr></table></figure>\n<p>当然，肯定还有其他更好的适配方式。</p>\n</li>\n</ol>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>AndroidTV开发中经常用到列表这种布局，这里有两种方法。</p>\n<ol>\n<li><p>Google提供的<a href=\"https://github.com/googlesamples/androidtv-Leanback\" target=\"_blank\" rel=\"noopener\">androidtv-Leanback</a>。<br>布局文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.example.core.leanback.HorizontalGridView</span><br><span class=\"line\">    android:id=&quot;@+id/hgv_item&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_marginTop=&quot;100pt&quot;</span><br><span class=\"line\">    android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">    android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">    android:padding=&quot;20pt&quot;</span><br><span class=\"line\">    /&gt;</span><br></pre></td></tr></table></figure>\n<p>其中<code>android:clipChildren=&quot;false&quot;</code>和<code>android:clipToPadding=&quot;false&quot;</code>是为了做选中放大子视图时避免子视图不完整。</p>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.hgv_item) HorizontalGridView hgvItem;</span><br><span class=\"line\">//private ListItemAdapter listItemAdapter;</span><br><span class=\"line\">listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">hgvItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">hgvItem.setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">hgvItem.setOnItemListener(new OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.05f)</span><br><span class=\"line\">        .scaleY(1.05f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override public void onItemPreSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.0f)</span><br><span class=\"line\">        .scaleY(1.0f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">listItemAdapter.setNewData(mockData.listItems);</span><br></pre></td></tr></table></figure>\n<p>其中，<code>setHorizontalSpacing</code>方法为设置子视图之间的水平间距，<code>setOnItemListener</code>为子视图获得焦点和失去焦点的监听，<code>setOnItemListener</code>监听中添加了获得焦点的子视图放大1.05倍的动画和改变子视图背景使获得焦点的子视图视觉上更明显的效果。具体效果如下图：<br><img src=\"/uploads/androidtv/andridtv_gh_list.gif\" alt=\"img\"></p>\n<p><code>Adapter</code>类:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ListItemAdapter extends BaseQuickAdapter&lt;String, BaseViewHolder&gt; &#123;</span><br><span class=\"line\">  public ListItemAdapter() &#123;</span><br><span class=\"line\">    super(R.layout.item_list);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  @Override protected void convert(BaseViewHolder helper, String item) &#123;</span><br><span class=\"line\">    helper.setText(R.id.tv_text, item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>子视图布局文件： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;150pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/tv_text&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center&quot;</span><br><span class=\"line\">        android:text=&quot;text&quot;</span><br><span class=\"line\">        android:textColor=&quot;@android:color/white&quot;</span><br><span class=\"line\">        android:textSize=&quot;25pt&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>android:focusable=&quot;true&quot;</code>表示可获取控件的焦点（键盘、遥控器），<code>android:focusableInTouchMode=&quot;true&quot;</code>表示可通过触摸获取焦点（AndroidTV不需要，开发时使用模拟器会用到）。</p>\n<blockquote>\n<p>注：</p>\n<ul>\n<li>leanback的垂直和水平列表是继承RecyclerView的自定义控件。</li>\n<li>leanback默认选中项滑动到屏幕中间位置。</li>\n<li>列表的Adapter继承<a href=\"https://github.com/CymChad/BaseRecyclerViewAdapterHelper\" target=\"_blank\" rel=\"noopener\">BaseRecyclerViewAdapterHelper</a>，方便操作与管理。</li>\n<li>垂直列表基本相同，使用的是<code>VerticalGridView</code>类。</li>\n<li>水平列表有一个拓展类<code>HorizontalRowView</code>，以方便处理嵌套。</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>Github上有很多开发者自己仿照leanback自定义的RecyclerViewTV，也是继承的Recyclerview，它们也基本都是水平列表、垂直列表用一个布局，通过属性修改。这里找了一个（具体出处忘记了）来用一下。<br>布局文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">    android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_marginTop=&quot;100pt&quot;</span><br><span class=\"line\">    android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">    android:padding=&quot;20pt&quot;</span><br><span class=\"line\">    app:layoutManagerTV=&quot;V7LinearLayoutManage</span><br><span class=\"line\">    app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">    /&gt;</span><br></pre></td></tr></table></figure>\n<p>其中，<code>layoutManagerTV</code>定义布局方式（<code>V7GridLayoutManager</code>、<code>V7LinearLayoutManager</code>、<code>V7StaggeredGridLayoutManager</code>），<code>selectedItemIsCenteredTV</code>设置选中项滑动到屏幕中间，<code>orientation</code>设置水平和垂直（<code>vertical</code>、<code>horizontal</code>）。<code>clipChildren</code>和<code>clipToPadding</code>根据需要添加。</p>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ListItemAdapter listItemAdapter;</span><br><span class=\"line\">listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">rvtItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.05f)</span><br><span class=\"line\">        .scaleY(1.05f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.0f)</span><br><span class=\"line\">        .scaleY(1.0f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">listItemAdapter.setNewData(mockData.listItems);</span><br></pre></td></tr></table></figure>\n<p>和leanback实现差不多的功能，adapter也是用的同一个adapter，其中设置间距的方法为<code>setSpacingWithMargins(verticalSpacing,horizontalSpacing)</code>，展示效果和上面leanback的一样。</p>\n<p>RecyclerViewTV的网格布局可以避免部分嵌套。<br>布局文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br></pre></td></tr></table></figure>\n<p>将<code>layoutManagerTV</code>设置为上面提到的<code>V7GridLayoutManager</code>即可。<br>效果：<br><img src=\"/uploads/androidtv/andridtv_rg_list.gif\" alt=\"img\"></p>\n</li>\n</ol>\n<h3 id=\"列表嵌套\"><a href=\"#列表嵌套\" class=\"headerlink\" title=\"列表嵌套\"></a>列表嵌套</h3><ol>\n<li><p>leanback嵌套，这里采用先使用垂直列表，再嵌套水平列表。<br>垂直列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.leanback.VerticalGridView</span><br><span class=\"line\">      android:id=&quot;@+id/vgv_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">      android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">      android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>水平列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">    android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.leanback.HorizontalRowView</span><br><span class=\"line\">      android:id=&quot;@+id/hrv_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">      android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.vgv_item) VerticalGridView vgvItem;</span><br><span class=\"line\">//private ItemAdapter itemAdapter;</span><br><span class=\"line\">itemAdapter = new ItemAdapter();</span><br><span class=\"line\">vgvItem.setAdapter(itemAdapter);</span><br><span class=\"line\">vgvItem.setVerticalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">itemAdapter.setNewData(mockData.gnLists);</span><br></pre></td></tr></table></figure>\n<p>垂直列表adapter：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ItemAdapter extends BaseQuickAdapter&lt;GNList, BaseViewHolder&gt; &#123;</span><br><span class=\"line\">  public ItemAdapter() &#123;</span><br><span class=\"line\">    super(R.layout.layout_gn);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override protected void convert(BaseViewHolder helper, GNList item) &#123;</span><br><span class=\"line\">    HorizontalRowView horizontalRowView = helper.getView(R.id.hrv_item);</span><br><span class=\"line\">    ListItemAdapter listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">    horizontalRowView.getGridView().setAdapter(listItemAdapter);</span><br><span class=\"line\">    horizontalRowView.getGridView().setHorizontalSpacing(AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">    horizontalRowView.getGridView().setOnItemListener(new OnItemListener() &#123;</span><br><span class=\"line\">      @Override public void onItemSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.05f)</span><br><span class=\"line\">            .scaleY(1.05f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      @Override public void onItemPreSelected(Object parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.0f)</span><br><span class=\"line\">            .scaleY(1.0f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    listItemAdapter.setNewData(mockData.listItems);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>GNList</code>类是一个普通的对象，里面只放了一个<code>String</code>列表。水平列表adapter使用上面提到的同一个adapter。<br>效果：<br><img src=\"/uploads/androidtv/androidtv_gn_list.gif\" alt=\"img\"></p>\n</li>\n<li><p>RecyclerViewTV嵌套，也是先使用垂直列表，再嵌套水平列表。<br>垂直列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">      android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>水平列表布局：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:clipChildren=&quot;false&quot;</span><br><span class=\"line\">    android:clipToPadding=&quot;false&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_h_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:orientation=&quot;horizontal&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure>\n<p>代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ItemAdapter itemAdapter;</span><br><span class=\"line\">itemAdapter = new ItemAdapter();</span><br><span class=\"line\">rvtItem.setAdapter(itemAdapter);</span><br><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 0));</span><br><span class=\"line\">itemAdapter.setNewData(mockData.rnLists);</span><br></pre></td></tr></table></figure>\n<p>垂直列表adapter：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class ItemAdapter extends BaseQuickAdapter&lt;RNList, BaseViewHolder&gt; &#123;</span><br><span class=\"line\">    public ItemAdapter() &#123;</span><br><span class=\"line\">      super(R.layout.layout_rn);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override protected void convert(BaseViewHolder helper, RNList item) &#123;</span><br><span class=\"line\">      RecyclerViewTV rvthItem = helper.getView(R.id.rvt_h_item);</span><br><span class=\"line\">      ListItemAdapter listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">      rvthItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">      rvthItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 0),</span><br><span class=\"line\">          AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">      rvthItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">        @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">          itemView.animate()</span><br><span class=\"line\">              .scaleX(1.05f)</span><br><span class=\"line\">              .scaleY(1.05f)</span><br><span class=\"line\">              .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">              .setDuration(300)</span><br><span class=\"line\">              .start();</span><br><span class=\"line\">          itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">          itemView.animate()</span><br><span class=\"line\">              .scaleX(1.0f)</span><br><span class=\"line\">              .scaleY(1.0f)</span><br><span class=\"line\">              .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">              .setDuration(300)</span><br><span class=\"line\">              .start();</span><br><span class=\"line\">          itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">      listItemAdapter.setNewData(mockData.listItems);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><code>RNList</code>类和<code>GNList</code>一样，里面只放了一个<code>String</code>列表。<br>效果和leanback嵌套的效果一样。</p>\n</li>\n</ol>\n<h3 id=\"同一个列表不相同的item\"><a href=\"#同一个列表不相同的item\" class=\"headerlink\" title=\"同一个列表不相同的item\"></a>同一个列表不相同的item</h3><p>  在一个列表中，item展示的内容可能是不一样的，这里使用RecyclerViewTV演示，leanback使用方法差不多。<br>  列表布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;FrameLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_gravity=&quot;center_horizontal&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/FrameLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  item1(150pt x 150pt，中间文字)布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;150pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/tv_text&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center&quot;</span><br><span class=\"line\">        android:text=&quot;text&quot;</span><br><span class=\"line\">        android:textColor=&quot;@android:color/white&quot;</span><br><span class=\"line\">        android:textSize=&quot;25pt&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  item2(320pt x 150pt，中间图片和文字)布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;324pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;ImageView</span><br><span class=\"line\">        android:layout_width=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_height=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center_vertical&quot;</span><br><span class=\"line\">        android:layout_marginLeft=&quot;30pt&quot;</span><br><span class=\"line\">        android:src=&quot;@mipmap/ic_launcher&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">    &lt;TextView</span><br><span class=\"line\">        android:id=&quot;@+id/tv_text&quot;</span><br><span class=\"line\">        android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center_vertical|right&quot;</span><br><span class=\"line\">        android:layout_marginRight=&quot;30pt&quot;</span><br><span class=\"line\">        android:text=&quot;text&quot;</span><br><span class=\"line\">        android:textColor=&quot;@android:color/holo_green_light&quot;</span><br><span class=\"line\">        android:textSize=&quot;25pt&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  item3(150pt x 150pt，中间图片)布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">    android:focusable=&quot;true&quot;</span><br><span class=\"line\">    android:focusableInTouchMode=&quot;true&quot;</span><br><span class=\"line\">    android:padding=&quot;2pt&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;FrameLayout</span><br><span class=\"line\">      android:id=&quot;@+id/fl_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;150pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;150pt&quot;</span><br><span class=\"line\">      android:background=&quot;@color/colorPrimary&quot;</span><br><span class=\"line\">      &gt;</span><br><span class=\"line\">    &lt;ImageView</span><br><span class=\"line\">        android:id=&quot;@+id/iv_img&quot;</span><br><span class=\"line\">        android:layout_width=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_height=&quot;50pt&quot;</span><br><span class=\"line\">        android:layout_gravity=&quot;center&quot;</span><br><span class=\"line\">        android:src=&quot;@drawable/ic_launcher&quot;</span><br><span class=\"line\">        /&gt;</span><br><span class=\"line\">  &lt;/FrameLayout&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>  代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ItemAdapter itemAdapter;</span><br><span class=\"line\">itemAdapter = new ItemAdapter();</span><br><span class=\"line\">itemAdapter.setSpanSizeLookup(new BaseQuickAdapter.SpanSizeLookup() &#123;</span><br><span class=\"line\">  @Override public int getSpanSize(GridLayoutManager gridLayoutManager, int position) &#123;</span><br><span class=\"line\">    return RS_TYPE_LONG == mockData.rsModels.get(position).getItemType() ? 2 : 1;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 20));</span><br><span class=\"line\">rvtItem.setLayoutManager(new V7GridLayoutManager(context, 3));</span><br><span class=\"line\">rvtItem.setAdapter(itemAdapter);</span><br><span class=\"line\">rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.05f)</span><br><span class=\"line\">        .scaleY(1.05f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.animate()</span><br><span class=\"line\">        .scaleX(1.0f)</span><br><span class=\"line\">        .scaleY(1.0f)</span><br><span class=\"line\">        .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">        .setDuration(300)</span><br><span class=\"line\">        .start();</span><br><span class=\"line\">    itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">itemAdapter.setNewData(mockData.rsModels);</span><br><span class=\"line\">itemAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() &#123;</span><br><span class=\"line\">  @Override public void onItemClick(BaseQuickAdapter adapter, View view, int position) &#123;</span><br><span class=\"line\">    toastor.showToast(&quot;click&quot; + position);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>  注：<strong><code>RecyclerViewTV</code>的<code>setAdapter</code>方法要放在<code>setLayoutManager</code>方法后面，否则<code>Adapter</code>的<code>setSpanSizeLookup</code>方法不会执行。</strong><br>  效果：<br>  <img src=\"/uploads/androidtv/androidtv_rs_list.gif\" alt=\"img\"></p>\n<h3 id=\"暗焦点\"><a href=\"#暗焦点\" class=\"headerlink\" title=\"暗焦点\"></a>暗焦点</h3><p>暗焦点也是一个经常需要用到的功能，比如下面就是一个左边菜单右边内容的布局，需要暗焦点提示使用者菜单的当前选中项。先放效果图：<br><img src=\"/uploads/androidtv/androidtv_o.gif\" alt=\"img\"><br>外框架activity布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    android:background=&quot;@android:color/black&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_menu&quot;</span><br><span class=\"line\">      android:layout_width=&quot;200pt&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_centerVertical=&quot;true&quot;</span><br><span class=\"line\">      android:orientation=&quot;vertical&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7LinearLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">  &lt;com.example.core.view.VerticalViewPager</span><br><span class=\"line\">      android:id=&quot;@+id/vvp_content&quot;</span><br><span class=\"line\">      android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">      android:layout_toRightOf=&quot;@id/rvt_menu&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>fragment布局：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class=\"line\">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class=\"line\">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class=\"line\">    android:layout_width=&quot;match_parent&quot;</span><br><span class=\"line\">    android:layout_height=&quot;match_parent&quot;</span><br><span class=\"line\">    &gt;</span><br><span class=\"line\">  &lt;com.example.core.view.RecyclerViewTV</span><br><span class=\"line\">      android:id=&quot;@+id/rvt_item&quot;</span><br><span class=\"line\">      android:layout_width=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:layout_height=&quot;wrap_content&quot;</span><br><span class=\"line\">      android:padding=&quot;20pt&quot;</span><br><span class=\"line\">      app:layoutManagerTV=&quot;V7GridLayoutManager&quot;</span><br><span class=\"line\">      app:selectedItemIsCenteredTV=&quot;true&quot;</span><br><span class=\"line\">      /&gt;</span><br><span class=\"line\">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>\n<p>外框架activity主要代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_menu) RecyclerViewTV rvtMenu;</span><br><span class=\"line\">//@BindView(R.id.vvp_content) VerticalViewPager vvpContent;</span><br><span class=\"line\">//@BindColor(android.R.color.transparent) int transparent;</span><br><span class=\"line\">//@BindColor(R.color.colorPrimary) int darkerGray;</span><br><span class=\"line\">//@BindColor(android.R.color.tertiary_text_light) int textLight;</span><br><span class=\"line\">//private MenuAdapter menuAdapter;</span><br><span class=\"line\">//private boolean isRight = false;</span><br><span class=\"line\">//private ViewPagerAdapter pagerAdapter;</span><br><span class=\"line\">menuAdapter = new MenuAdapter();</span><br><span class=\"line\">rvtMenu.setSpacingWithMargins(AutoSizeUtils.pt2px(context, 20),</span><br><span class=\"line\">    AutoSizeUtils.pt2px(context, 0));</span><br><span class=\"line\">rvtMenu.setAdapter(menuAdapter);</span><br><span class=\"line\">rvtMenu.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">  @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    if (position != vvpContent.getCurrentItem()) &#123;</span><br><span class=\"line\">      vvpContent.setCurrentItem(position);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    itemView.setBackgroundColor(darkerGray);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">    itemView.setBackgroundColor(isRight ? textLight : transparent);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">rvtMenu.setOnChildViewHolderSelectedListener(</span><br><span class=\"line\">    new RecyclerViewTV.OnChildViewHolderSelectedListener() &#123;</span><br><span class=\"line\">      @Override</span><br><span class=\"line\">      public void onChildViewHolderSelected(RecyclerViewTV parent, RecyclerView.ViewHolder vh,</span><br><span class=\"line\">          int position) &#123;</span><br><span class=\"line\">        vh.itemView.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class=\"line\">          @Override public boolean onKey(View view, int i, KeyEvent keyEvent) &#123;</span><br><span class=\"line\">            if (keyEvent.getAction() == KeyEvent.ACTION_DOWN) &#123;</span><br><span class=\"line\">              isRight = i == KeyEvent.KEYCODE_DPAD_RIGHT;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return false;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">menuAdapter.setNewData(mockData.outMenu);</span><br><span class=\"line\">for (int i = 0; i &lt; mockData.outMenu.size(); i++) &#123;</span><br><span class=\"line\">  BaseFragment fragment = new ConentFragment();</span><br><span class=\"line\">  Bundle bundle = new Bundle();</span><br><span class=\"line\">  bundle.putInt(&quot;menuIndex&quot;, i);</span><br><span class=\"line\">  fragment.setArguments(bundle);</span><br><span class=\"line\">  fragments.add(fragment);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">pagerAdapter = new ViewPagerAdapter(fragmentManager, fragments);</span><br><span class=\"line\">vvpContent.setAdapter(pagerAdapter);</span><br><span class=\"line\">setViewPagerSpeed(vvpContent, 300);//设置viewpager切换的速度</span><br></pre></td></tr></table></figure></p>\n<p>  <code>MenuAdapter</code>上面例子已经有很多不再重复放了。这里是通过一个布尔值<code>isRight</code>和<code>setOnChildViewHolderSelectedListener</code>方法记录操作状态实现暗焦点的，<code>setOnChildViewHolderSelectedListener</code>是一个列表子项的监听事件。还可以通过<code>View</code>的<code>activated</code>值来记录暗焦点，比如列表选中的最后一项的子视图设置为<code>activated</code>,在子视图监听事件<code>setOnItemListener</code>中通过<code>itemView.isActivated()</code>判断是否为暗焦点。本项目使用的RecyclerViewTV专门针对暗焦点做了处理就是通过<code>activated</code>实现的，通过<code>isMenu(true)</code>打开即可进行暗焦点的设置和判断操作。</p>\n<p>外框架activity需要注意的方法：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override public void onAttachedToWindow() &#123;</span><br><span class=\"line\">  super.onAttachedToWindow();</span><br><span class=\"line\">  rvtMenu.setSelection(0);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">protected void setViewPagerSpeed(VerticalViewPager viewPager, int mDuration) &#123;</span><br><span class=\"line\">  try &#123;</span><br><span class=\"line\">    Field field = VerticalViewPager.class.getDeclaredField(&quot;mScroller&quot;);</span><br><span class=\"line\">    field.setAccessible(true);</span><br><span class=\"line\">    FixedSpeedScroller scroller =</span><br><span class=\"line\">        new FixedSpeedScroller(viewPager.getContext(), new AccelerateInterpolator());</span><br><span class=\"line\">    field.set(viewPager, scroller);</span><br><span class=\"line\">    scroller.setmDuration(mDuration);</span><br><span class=\"line\">  &#125; catch (Exception e) &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>  因为fragment里面的数据可能会后渲染，在刚进入这个界面的时候焦点会在fragment上面，所以需要再<code>onAttachedToWindow</code>方法中让焦点进入界面渲染完成后回到菜单上，这里不用<code>requestFocus()</code>而使用<code>setSelection()</code>是因为<code>setSelection()</code>里面已经包含了<code>requestFocus()</code>方法并且它能选择列表具体哪一个子项获得焦点。<br>  <code>setViewPagerSpeed</code>是一个设置viewpager页面切换速度的方法。</p>\n<p>fragment代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//@BindView(R.id.rvt_item) RecyclerViewTV rvtItem;</span><br><span class=\"line\">//private ListItemAdapter listItemAdapter;</span><br><span class=\"line\">Bundle bundle = getArguments();</span><br><span class=\"line\">    if (bundle != null) &#123;</span><br><span class=\"line\">      int menuIndex = bundle.getInt(&quot;menuIndex&quot;);//获取activity传过来的数据</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    listItemAdapter = new ListItemAdapter();</span><br><span class=\"line\">    rvtItem.setAdapter(listItemAdapter);</span><br><span class=\"line\">    rvtItem.setSpacingWithMargins(AutoSizeUtils.pt2px(mContext, 20),</span><br><span class=\"line\">        AutoSizeUtils.pt2px(mContext, 20));</span><br><span class=\"line\">    rvtItem.setLayoutManager(new V7GridLayoutManager(mContext, 4));</span><br><span class=\"line\">    rvtItem.setOnItemListener(new RecyclerViewTV.OnItemListener() &#123;</span><br><span class=\"line\">      @Override public void onItemSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.05f)</span><br><span class=\"line\">            .scaleY(1.05f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundResource(R.drawable.bg_item);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      @Override public void onItemPreSelected(RecyclerViewTV parent, View itemView, int position) &#123;</span><br><span class=\"line\">        itemView.animate()</span><br><span class=\"line\">            .scaleX(1.0f)</span><br><span class=\"line\">            .scaleY(1.0f)</span><br><span class=\"line\">            .setInterpolator(new BounceInterpolator())</span><br><span class=\"line\">            .setDuration(300)</span><br><span class=\"line\">            .start();</span><br><span class=\"line\">        itemView.setBackgroundColor(getResources().getColor(android.R.color.transparent));</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<p>  fragment没什么需要注意的东西，和之前的<code>RecyclerViewTV</code>网格列表一样的代码。</p>\n<h3 id=\"遥控器按键\"><a href=\"#遥控器按键\" class=\"headerlink\" title=\"遥控器按键\"></a>遥控器按键</h3><p>遥控器按键主要有方向键(上、下、左、右)、确定、返回、播放（暂停）、数字等。<br>activity中可以通过<code>onKeyDown</code>和<code>dispatchKeyEvent</code>方法进行监听操作：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override public boolean onKeyDown(int keyCode, KeyEvent event) &#123;</span><br><span class=\"line\">  //TODO operating</span><br><span class=\"line\">  return super.onKeyDown(keyCode, event);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">@Override public boolean dispatchKeyEvent(KeyEvent event) &#123;</span><br><span class=\"line\">  //TODO operating</span><br><span class=\"line\">  return super.dispatchKeyEvent(event);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>返回事件也可以通过<code>onBackPressed</code>方法监听操作。</p>\n<p>view可以通过<code>setOnKeyListener</code>方法进行监听操作：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view.setOnKeyListener(new View.OnKeyListener() &#123;</span><br><span class=\"line\">  @Override public boolean onKey(View view, int keyCode, KeyEvent keyEvent) &#123;</span><br><span class=\"line\">    //TODO operating</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure></p>\n<p>按键监听的返回值为true时，则表示不执行按键操作，可自定义操作。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">键值</th>\n<th style=\"text-align:center\">事件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_UP</td>\n<td style=\"text-align:center\">上</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_DOWN</td>\n<td style=\"text-align:center\">下</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_LEFT</td>\n<td style=\"text-align:center\">左</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_RIGHT</td>\n<td style=\"text-align:center\">右</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_DPAD_CENTER</td>\n<td style=\"text-align:center\">确定</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_MEDIA_PAUSE</td>\n<td style=\"text-align:center\">视频播放、暂停</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_1</td>\n<td style=\"text-align:center\">0~9，10个数字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_BACK</td>\n<td style=\"text-align:center\">返回键</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_HOME</td>\n<td style=\"text-align:center\">主页</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_A</td>\n<td style=\"text-align:center\">A~Z，26个字母</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">KeyEvent.KEYCODE_MENU</td>\n<td style=\"text-align:center\">菜单</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">…</td>\n<td style=\"text-align:center\">…</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<p>  附：<a href=\"https://github.com/blackchy/AndroidTV\" target=\"_blank\" rel=\"noopener\">项目地址</a></p>"},{"title":"GitHub发布Library，compile使用","date":"2018-12-18T16:00:00.000Z","_content":"把自己习惯使用的工具类放到一个公共库中并在Github上发布，然后在AndroidStudio的项目中依赖使用，这是一件很方便的事。\n<!-- more -->\n\n### 项目相关\n1. 本地创建好项目之后，删掉多余无用的东西，然后新建一个Module(Android Library)，把代码写在这个module中，原来的app module就没什么用了。\n2. 在项目根目录的build.gradle中添加：\n```\nclasspath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n```\n  如图所示：\n![img][1]\n\n3. 在新建的module目录的build.gradle中添加(group:自己的github号)：\n```\napply plugin: 'com.github.dcendents.android-maven'\ngroup = 'com.github.blackchy'\n```\n  如图所示：\n![img][2]\n  并把android里面的无用配置和dependencies里面的无用依赖全部删掉。\n\n### Github相关\n1. 在Github新建一个远程仓库，然后把本地仓库上传同步到远程仓库中。\n2. 去github上发布这个公共库的代码。\n![img][3]\n![img][4]\n![img][5]\n![img][6]\n\n### 发布依赖\n这里通过[JitPack][7]发布依赖。\n1. 打开[JitPack][7]的首页，并登录(github账号登录)。\n2. 把代码发布好的github仓库地址复制到输入框并点击Look up按钮。\n![img][8]\n![img][9]\n  等Log的圈圈转完以后，表示发布完成其他项目已经可以依赖使用这个公共库了，点击Get it按钮跳转到具体依赖方法。\n![img][10]\n\n----\n**完**\n\n[1]:/uploads/public_library/root_gradle.png\n[2]:/uploads/public_library/module_gradle.png\n[3]:/uploads/public_library/github_1.png\n[4]:/uploads/public_library/github_2.png\n[5]:/uploads/public_library/github_3.png\n[6]:/uploads/public_library/github_4.png\n[7]:https://jitpack.io/\n[8]:/uploads/public_library/jitpack_1.png\n[9]:/uploads/public_library/jitpack_2.png\n[10]:/uploads/public_library/jitpack_3.png","source":"_posts/2018-12-19-Public-Library.md","raw":"---\ntitle: GitHub发布Library，compile使用\ndate: 2018-12-19 00:00:00\ncategories: misc\ntags: github\n---\n把自己习惯使用的工具类放到一个公共库中并在Github上发布，然后在AndroidStudio的项目中依赖使用，这是一件很方便的事。\n<!-- more -->\n\n### 项目相关\n1. 本地创建好项目之后，删掉多余无用的东西，然后新建一个Module(Android Library)，把代码写在这个module中，原来的app module就没什么用了。\n2. 在项目根目录的build.gradle中添加：\n```\nclasspath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n```\n  如图所示：\n![img][1]\n\n3. 在新建的module目录的build.gradle中添加(group:自己的github号)：\n```\napply plugin: 'com.github.dcendents.android-maven'\ngroup = 'com.github.blackchy'\n```\n  如图所示：\n![img][2]\n  并把android里面的无用配置和dependencies里面的无用依赖全部删掉。\n\n### Github相关\n1. 在Github新建一个远程仓库，然后把本地仓库上传同步到远程仓库中。\n2. 去github上发布这个公共库的代码。\n![img][3]\n![img][4]\n![img][5]\n![img][6]\n\n### 发布依赖\n这里通过[JitPack][7]发布依赖。\n1. 打开[JitPack][7]的首页，并登录(github账号登录)。\n2. 把代码发布好的github仓库地址复制到输入框并点击Look up按钮。\n![img][8]\n![img][9]\n  等Log的圈圈转完以后，表示发布完成其他项目已经可以依赖使用这个公共库了，点击Get it按钮跳转到具体依赖方法。\n![img][10]\n\n----\n**完**\n\n[1]:/uploads/public_library/root_gradle.png\n[2]:/uploads/public_library/module_gradle.png\n[3]:/uploads/public_library/github_1.png\n[4]:/uploads/public_library/github_2.png\n[5]:/uploads/public_library/github_3.png\n[6]:/uploads/public_library/github_4.png\n[7]:https://jitpack.io/\n[8]:/uploads/public_library/jitpack_1.png\n[9]:/uploads/public_library/jitpack_2.png\n[10]:/uploads/public_library/jitpack_3.png","slug":"2018-12-19-Public-Library","published":1,"updated":"2018-12-21T07:04:38.909Z","_id":"cjpujki6u0000z0ugggfr5yxo","comments":1,"layout":"post","photos":[],"link":"","content":"<p>把自己习惯使用的工具类放到一个公共库中并在Github上发布，然后在AndroidStudio的项目中依赖使用，这是一件很方便的事。<br><a id=\"more\"></a></p>\n<h3 id=\"项目相关\"><a href=\"#项目相关\" class=\"headerlink\" title=\"项目相关\"></a>项目相关</h3><ol>\n<li>本地创建好项目之后，删掉多余无用的东西，然后新建一个Module(Android Library)，把代码写在这个module中，原来的app module就没什么用了。</li>\n<li><p>在项目根目录的build.gradle中添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:1.5&apos;</span><br></pre></td></tr></table></figure>\n<p>如图所示：<br><img src=\"/uploads/public_library/root_gradle.png\" alt=\"img\"></p>\n</li>\n<li><p>在新建的module目录的build.gradle中添加(group:自己的github号)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: &apos;com.github.dcendents.android-maven&apos;</span><br><span class=\"line\">group = &apos;com.github.blackchy&apos;</span><br></pre></td></tr></table></figure>\n<p>如图所示：<br><img src=\"/uploads/public_library/module_gradle.png\" alt=\"img\"><br>并把android里面的无用配置和dependencies里面的无用依赖全部删掉。</p>\n</li>\n</ol>\n<h3 id=\"Github相关\"><a href=\"#Github相关\" class=\"headerlink\" title=\"Github相关\"></a>Github相关</h3><ol>\n<li>在Github新建一个远程仓库，然后把本地仓库上传同步到远程仓库中。</li>\n<li>去github上发布这个公共库的代码。<br><img src=\"/uploads/public_library/github_1.png\" alt=\"img\"><br><img src=\"/uploads/public_library/github_2.png\" alt=\"img\"><br><img src=\"/uploads/public_library/github_3.png\" alt=\"img\"><br><img src=\"/uploads/public_library/github_4.png\" alt=\"img\"></li>\n</ol>\n<h3 id=\"发布依赖\"><a href=\"#发布依赖\" class=\"headerlink\" title=\"发布依赖\"></a>发布依赖</h3><p>这里通过<a href=\"https://jitpack.io/\" target=\"_blank\" rel=\"noopener\">JitPack</a>发布依赖。</p>\n<ol>\n<li>打开<a href=\"https://jitpack.io/\" target=\"_blank\" rel=\"noopener\">JitPack</a>的首页，并登录(github账号登录)。</li>\n<li>把代码发布好的github仓库地址复制到输入框并点击Look up按钮。<br><img src=\"/uploads/public_library/jitpack_1.png\" alt=\"img\"><br><img src=\"/uploads/public_library/jitpack_2.png\" alt=\"img\"><br>等Log的圈圈转完以后，表示发布完成其他项目已经可以依赖使用这个公共库了，点击Get it按钮跳转到具体依赖方法。<br><img src=\"/uploads/public_library/jitpack_3.png\" alt=\"img\"></li>\n</ol>\n<hr>\n<p><strong>完</strong></p>\n","site":{"data":{}},"excerpt":"<p>把自己习惯使用的工具类放到一个公共库中并在Github上发布，然后在AndroidStudio的项目中依赖使用，这是一件很方便的事。<br>","more":"</p>\n<h3 id=\"项目相关\"><a href=\"#项目相关\" class=\"headerlink\" title=\"项目相关\"></a>项目相关</h3><ol>\n<li>本地创建好项目之后，删掉多余无用的东西，然后新建一个Module(Android Library)，把代码写在这个module中，原来的app module就没什么用了。</li>\n<li><p>在项目根目录的build.gradle中添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">classpath &apos;com.github.dcendents:android-maven-gradle-plugin:1.5&apos;</span><br></pre></td></tr></table></figure>\n<p>如图所示：<br><img src=\"/uploads/public_library/root_gradle.png\" alt=\"img\"></p>\n</li>\n<li><p>在新建的module目录的build.gradle中添加(group:自己的github号)：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: &apos;com.github.dcendents.android-maven&apos;</span><br><span class=\"line\">group = &apos;com.github.blackchy&apos;</span><br></pre></td></tr></table></figure>\n<p>如图所示：<br><img src=\"/uploads/public_library/module_gradle.png\" alt=\"img\"><br>并把android里面的无用配置和dependencies里面的无用依赖全部删掉。</p>\n</li>\n</ol>\n<h3 id=\"Github相关\"><a href=\"#Github相关\" class=\"headerlink\" title=\"Github相关\"></a>Github相关</h3><ol>\n<li>在Github新建一个远程仓库，然后把本地仓库上传同步到远程仓库中。</li>\n<li>去github上发布这个公共库的代码。<br><img src=\"/uploads/public_library/github_1.png\" alt=\"img\"><br><img src=\"/uploads/public_library/github_2.png\" alt=\"img\"><br><img src=\"/uploads/public_library/github_3.png\" alt=\"img\"><br><img src=\"/uploads/public_library/github_4.png\" alt=\"img\"></li>\n</ol>\n<h3 id=\"发布依赖\"><a href=\"#发布依赖\" class=\"headerlink\" title=\"发布依赖\"></a>发布依赖</h3><p>这里通过<a href=\"https://jitpack.io/\" target=\"_blank\" rel=\"noopener\">JitPack</a>发布依赖。</p>\n<ol>\n<li>打开<a href=\"https://jitpack.io/\" target=\"_blank\" rel=\"noopener\">JitPack</a>的首页，并登录(github账号登录)。</li>\n<li>把代码发布好的github仓库地址复制到输入框并点击Look up按钮。<br><img src=\"/uploads/public_library/jitpack_1.png\" alt=\"img\"><br><img src=\"/uploads/public_library/jitpack_2.png\" alt=\"img\"><br>等Log的圈圈转完以后，表示发布完成其他项目已经可以依赖使用这个公共库了，点击Get it按钮跳转到具体依赖方法。<br><img src=\"/uploads/public_library/jitpack_3.png\" alt=\"img\"></li>\n</ol>\n<hr>\n<p><strong>完</strong></p>"},{"title":"Windows相关","date":"2019-09-28T16:00:00.000Z","_content":"\n个人Windows使用习惯，包含使用的软件、壁纸、头像等。\n\n<!-- more -->\n\n# Windows软件\n\n新电脑或者重装系统电脑需要安装的软件\n\n### 火绒安全\n\n安全软件，除基本的病毒查杀外还包含右键管理、弹窗拦截、漏洞修复、火绒剑等拓展工具，特别是弹窗拦截，可拦截输入法、qq、wps带的弹窗广告，使得电脑使用过程中无弹窗打扰极其舒适。\n\n[官网地址][0]\n\n### PotPlayer\n\n视频播放器，纯净无广告无弹窗无vip。\n\n[官网地址][1](可能需要翻墙)<br/>\n[自备下载地址][8](版本：1.7.17508，更新时间 : 2019/02/12)\n\n### LICEcap\n\n录制gif,无水印无广告无vip。\n\n[下载地址][2](可能需要翻墙)\n[自备下载地址][9]\n\n### OBS Studio\n\n开源软件，可自定义窗口组合、录像、录屏、水印等，可设置推流进行直播。\n\n[官网地址][3]\n[github地址][4]\n\n### Chrome浏览器\n\n插件：1.CLEAN crxMouse Gestures（鼠标手势） 2.AdBlock、AdGuard 广告拦截器（广告拦截）。\n默认安装地址是C盘，安装过后直接移动安装文件夹到其他盘即可。\n\n[下载地址(中国地区)][5]\n\n### Sublime Text\n\n文本编辑器。\n\n[官网地址][7]\n[Sublime Text3 下载地址][6]\n\n### QQ拼音输入法\n\n相对于其他中文输入法，广告算是最少的了。\n\n[官网地址][10]\n\n### MarkdownPad2\n\nmarkdown编辑器，win10需要安装sdk才能实时预览。\n\n[官网地址][11]\n[Awesomium 1.6.6 SDK 下载地址][12]\n\n### Bandizip\n\n压缩软件，无广告。\n\n[官网地址][13]\n\n# 图片\n\n### win10默认壁纸\n\n分辨率 : 1920x1080\n文件大小 : 354KB\n文件格式 ： jpg\n[下载地址][14]\n\n<img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg\" width=\"400px\" style=\"margin-left:10px\"/>\n\n### 头像\n\n<img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/avatar.png\" width=\"200px\" style=\"margin-left:30px\"/>\n\n[0]:https://www.huorong.cn/\n[1]:http://www.potplayer.org/\n[2]:https://www.cockos.com/licecap/\n[3]:https://obsproject.com/\n[4]:https://github.com/obsproject/obs-studio\n[5]:https://www.google.cn/intl/zh-CN/chrome/\n[6]:http://sublimetextcn.com/\n[7]:http://www.sublimetext.com/\n[8]:https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/PotPlayerSetup64.exe\n[9]:https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/licecap128-install.exe\n[10]:http://qq.pinyin.cn/\n[11]:http://markdownpad.com/\n[12]:http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\n[13]:https://www.bandizip.com/\n[14]:https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg","source":"_posts/2019-09-29-Windows-About.md","raw":"title: Windows相关\ndate: 2019-9-29 00:00:00\ncategories: windows\ntags: [windows,software]\n---\n\n个人Windows使用习惯，包含使用的软件、壁纸、头像等。\n\n<!-- more -->\n\n# Windows软件\n\n新电脑或者重装系统电脑需要安装的软件\n\n### 火绒安全\n\n安全软件，除基本的病毒查杀外还包含右键管理、弹窗拦截、漏洞修复、火绒剑等拓展工具，特别是弹窗拦截，可拦截输入法、qq、wps带的弹窗广告，使得电脑使用过程中无弹窗打扰极其舒适。\n\n[官网地址][0]\n\n### PotPlayer\n\n视频播放器，纯净无广告无弹窗无vip。\n\n[官网地址][1](可能需要翻墙)<br/>\n[自备下载地址][8](版本：1.7.17508，更新时间 : 2019/02/12)\n\n### LICEcap\n\n录制gif,无水印无广告无vip。\n\n[下载地址][2](可能需要翻墙)\n[自备下载地址][9]\n\n### OBS Studio\n\n开源软件，可自定义窗口组合、录像、录屏、水印等，可设置推流进行直播。\n\n[官网地址][3]\n[github地址][4]\n\n### Chrome浏览器\n\n插件：1.CLEAN crxMouse Gestures（鼠标手势） 2.AdBlock、AdGuard 广告拦截器（广告拦截）。\n默认安装地址是C盘，安装过后直接移动安装文件夹到其他盘即可。\n\n[下载地址(中国地区)][5]\n\n### Sublime Text\n\n文本编辑器。\n\n[官网地址][7]\n[Sublime Text3 下载地址][6]\n\n### QQ拼音输入法\n\n相对于其他中文输入法，广告算是最少的了。\n\n[官网地址][10]\n\n### MarkdownPad2\n\nmarkdown编辑器，win10需要安装sdk才能实时预览。\n\n[官网地址][11]\n[Awesomium 1.6.6 SDK 下载地址][12]\n\n### Bandizip\n\n压缩软件，无广告。\n\n[官网地址][13]\n\n# 图片\n\n### win10默认壁纸\n\n分辨率 : 1920x1080\n文件大小 : 354KB\n文件格式 ： jpg\n[下载地址][14]\n\n<img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg\" width=\"400px\" style=\"margin-left:10px\"/>\n\n### 头像\n\n<img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/avatar.png\" width=\"200px\" style=\"margin-left:30px\"/>\n\n[0]:https://www.huorong.cn/\n[1]:http://www.potplayer.org/\n[2]:https://www.cockos.com/licecap/\n[3]:https://obsproject.com/\n[4]:https://github.com/obsproject/obs-studio\n[5]:https://www.google.cn/intl/zh-CN/chrome/\n[6]:http://sublimetextcn.com/\n[7]:http://www.sublimetext.com/\n[8]:https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/PotPlayerSetup64.exe\n[9]:https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/licecap128-install.exe\n[10]:http://qq.pinyin.cn/\n[11]:http://markdownpad.com/\n[12]:http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\n[13]:https://www.bandizip.com/\n[14]:https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg","slug":"2019-09-29-Windows-About","published":1,"updated":"2019-09-30T03:46:46.716Z","_id":"ck15si5rx0000kgugvynq3nrp","comments":1,"layout":"post","photos":[],"link":"","content":"<p>个人Windows使用习惯，包含使用的软件、壁纸、头像等。</p>\n<a id=\"more\"></a>\n<h1 id=\"Windows软件\"><a href=\"#Windows软件\" class=\"headerlink\" title=\"Windows软件\"></a>Windows软件</h1><p>新电脑或者重装系统电脑需要安装的软件</p>\n<h3 id=\"火绒安全\"><a href=\"#火绒安全\" class=\"headerlink\" title=\"火绒安全\"></a>火绒安全</h3><p>安全软件，除基本的病毒查杀外还包含右键管理、弹窗拦截、漏洞修复、火绒剑等拓展工具，特别是弹窗拦截，可拦截输入法、qq、wps带的弹窗广告，使得电脑使用过程中无弹窗打扰极其舒适。</p>\n<p><a href=\"https://www.huorong.cn/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<h3 id=\"PotPlayer\"><a href=\"#PotPlayer\" class=\"headerlink\" title=\"PotPlayer\"></a>PotPlayer</h3><p>视频播放器，纯净无广告无弹窗无vip。</p>\n<p><a href=\"http://www.potplayer.org/\" target=\"_blank\" rel=\"noopener\">官网地址</a>(可能需要翻墙)<br><br><a href=\"https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/PotPlayerSetup64.exe\" target=\"_blank\" rel=\"noopener\">自备下载地址</a>(版本：1.7.17508，更新时间 : 2019/02/12)</p>\n<h3 id=\"LICEcap\"><a href=\"#LICEcap\" class=\"headerlink\" title=\"LICEcap\"></a>LICEcap</h3><p>录制gif,无水印无广告无vip。</p>\n<p><a href=\"https://www.cockos.com/licecap/\" target=\"_blank\" rel=\"noopener\">下载地址</a>(可能需要翻墙)<br><a href=\"https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/licecap128-install.exe\" target=\"_blank\" rel=\"noopener\">自备下载地址</a></p>\n<h3 id=\"OBS-Studio\"><a href=\"#OBS-Studio\" class=\"headerlink\" title=\"OBS Studio\"></a>OBS Studio</h3><p>开源软件，可自定义窗口组合、录像、录屏、水印等，可设置推流进行直播。</p>\n<p><a href=\"https://obsproject.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a><br><a href=\"https://github.com/obsproject/obs-studio\" target=\"_blank\" rel=\"noopener\">github地址</a></p>\n<h3 id=\"Chrome浏览器\"><a href=\"#Chrome浏览器\" class=\"headerlink\" title=\"Chrome浏览器\"></a>Chrome浏览器</h3><p>插件：1.CLEAN crxMouse Gestures（鼠标手势） 2.AdBlock、AdGuard 广告拦截器（广告拦截）。<br>默认安装地址是C盘，安装过后直接移动安装文件夹到其他盘即可。</p>\n<p><a href=\"https://www.google.cn/intl/zh-CN/chrome/\" target=\"_blank\" rel=\"noopener\">下载地址(中国地区)</a></p>\n<h3 id=\"Sublime-Text\"><a href=\"#Sublime-Text\" class=\"headerlink\" title=\"Sublime Text\"></a>Sublime Text</h3><p>文本编辑器。</p>\n<p><a href=\"http://www.sublimetext.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a><br><a href=\"http://sublimetextcn.com/\" target=\"_blank\" rel=\"noopener\">Sublime Text3 下载地址</a></p>\n<h3 id=\"QQ拼音输入法\"><a href=\"#QQ拼音输入法\" class=\"headerlink\" title=\"QQ拼音输入法\"></a>QQ拼音输入法</h3><p>相对于其他中文输入法，广告算是最少的了。</p>\n<p><a href=\"http://qq.pinyin.cn/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<h3 id=\"MarkdownPad2\"><a href=\"#MarkdownPad2\" class=\"headerlink\" title=\"MarkdownPad2\"></a>MarkdownPad2</h3><p>markdown编辑器，win10需要安装sdk才能实时预览。</p>\n<p><a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a><br><a href=\"http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\" target=\"_blank\" rel=\"noopener\">Awesomium 1.6.6 SDK 下载地址</a></p>\n<h3 id=\"Bandizip\"><a href=\"#Bandizip\" class=\"headerlink\" title=\"Bandizip\"></a>Bandizip</h3><p>压缩软件，无广告。</p>\n<p><a href=\"https://www.bandizip.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><h3 id=\"win10默认壁纸\"><a href=\"#win10默认壁纸\" class=\"headerlink\" title=\"win10默认壁纸\"></a>win10默认壁纸</h3><p>分辨率 : 1920x1080<br>文件大小 : 354KB<br>文件格式 ： jpg<br><a href=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg\" width=\"400px\" style=\"margin-left:10px\"></p>\n<h3 id=\"头像\"><a href=\"#头像\" class=\"headerlink\" title=\"头像\"></a>头像</h3><p><img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/avatar.png\" width=\"200px\" style=\"margin-left:30px\"></p>\n","site":{"data":{}},"excerpt":"<p>个人Windows使用习惯，包含使用的软件、壁纸、头像等。</p>","more":"<h1 id=\"Windows软件\"><a href=\"#Windows软件\" class=\"headerlink\" title=\"Windows软件\"></a>Windows软件</h1><p>新电脑或者重装系统电脑需要安装的软件</p>\n<h3 id=\"火绒安全\"><a href=\"#火绒安全\" class=\"headerlink\" title=\"火绒安全\"></a>火绒安全</h3><p>安全软件，除基本的病毒查杀外还包含右键管理、弹窗拦截、漏洞修复、火绒剑等拓展工具，特别是弹窗拦截，可拦截输入法、qq、wps带的弹窗广告，使得电脑使用过程中无弹窗打扰极其舒适。</p>\n<p><a href=\"https://www.huorong.cn/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<h3 id=\"PotPlayer\"><a href=\"#PotPlayer\" class=\"headerlink\" title=\"PotPlayer\"></a>PotPlayer</h3><p>视频播放器，纯净无广告无弹窗无vip。</p>\n<p><a href=\"http://www.potplayer.org/\" target=\"_blank\" rel=\"noopener\">官网地址</a>(可能需要翻墙)<br><br><a href=\"https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/PotPlayerSetup64.exe\" target=\"_blank\" rel=\"noopener\">自备下载地址</a>(版本：1.7.17508，更新时间 : 2019/02/12)</p>\n<h3 id=\"LICEcap\"><a href=\"#LICEcap\" class=\"headerlink\" title=\"LICEcap\"></a>LICEcap</h3><p>录制gif,无水印无广告无vip。</p>\n<p><a href=\"https://www.cockos.com/licecap/\" target=\"_blank\" rel=\"noopener\">下载地址</a>(可能需要翻墙)<br><a href=\"https://github.com/blackchy/ToolPackage/blob/master/windows-installation-package/licecap128-install.exe\" target=\"_blank\" rel=\"noopener\">自备下载地址</a></p>\n<h3 id=\"OBS-Studio\"><a href=\"#OBS-Studio\" class=\"headerlink\" title=\"OBS Studio\"></a>OBS Studio</h3><p>开源软件，可自定义窗口组合、录像、录屏、水印等，可设置推流进行直播。</p>\n<p><a href=\"https://obsproject.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a><br><a href=\"https://github.com/obsproject/obs-studio\" target=\"_blank\" rel=\"noopener\">github地址</a></p>\n<h3 id=\"Chrome浏览器\"><a href=\"#Chrome浏览器\" class=\"headerlink\" title=\"Chrome浏览器\"></a>Chrome浏览器</h3><p>插件：1.CLEAN crxMouse Gestures（鼠标手势） 2.AdBlock、AdGuard 广告拦截器（广告拦截）。<br>默认安装地址是C盘，安装过后直接移动安装文件夹到其他盘即可。</p>\n<p><a href=\"https://www.google.cn/intl/zh-CN/chrome/\" target=\"_blank\" rel=\"noopener\">下载地址(中国地区)</a></p>\n<h3 id=\"Sublime-Text\"><a href=\"#Sublime-Text\" class=\"headerlink\" title=\"Sublime Text\"></a>Sublime Text</h3><p>文本编辑器。</p>\n<p><a href=\"http://www.sublimetext.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a><br><a href=\"http://sublimetextcn.com/\" target=\"_blank\" rel=\"noopener\">Sublime Text3 下载地址</a></p>\n<h3 id=\"QQ拼音输入法\"><a href=\"#QQ拼音输入法\" class=\"headerlink\" title=\"QQ拼音输入法\"></a>QQ拼音输入法</h3><p>相对于其他中文输入法，广告算是最少的了。</p>\n<p><a href=\"http://qq.pinyin.cn/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<h3 id=\"MarkdownPad2\"><a href=\"#MarkdownPad2\" class=\"headerlink\" title=\"MarkdownPad2\"></a>MarkdownPad2</h3><p>markdown编辑器，win10需要安装sdk才能实时预览。</p>\n<p><a href=\"http://markdownpad.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a><br><a href=\"http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe\" target=\"_blank\" rel=\"noopener\">Awesomium 1.6.6 SDK 下载地址</a></p>\n<h3 id=\"Bandizip\"><a href=\"#Bandizip\" class=\"headerlink\" title=\"Bandizip\"></a>Bandizip</h3><p>压缩软件，无广告。</p>\n<p><a href=\"https://www.bandizip.com/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<h1 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h1><h3 id=\"win10默认壁纸\"><a href=\"#win10默认壁纸\" class=\"headerlink\" title=\"win10默认壁纸\"></a>win10默认壁纸</h3><p>分辨率 : 1920x1080<br>文件大小 : 354KB<br>文件格式 ： jpg<br><a href=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<p><img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/win10_defualt_background_image.jpg\" width=\"400px\" style=\"margin-left:10px\"></p>\n<h3 id=\"头像\"><a href=\"#头像\" class=\"headerlink\" title=\"头像\"></a>头像</h3><p><img src=\"https://raw.githubusercontent.com/blackchy/ToolPackage/master/picture/avatar.png\" width=\"200px\" style=\"margin-left:30px\"></p>"},{"title":"Hexo Next 修改超链接颜色","date":"2019-09-28T16:00:00.000Z","_content":"\nHexo Next自带的超链接颜色为灰色加下划线，看起来不是特别明显，所以将其修改为蓝色。\n\n<!-- more -->\n\n1.在`./themes/next/source/css/_custom/custom.styl`里添加如下代码。\n\n```\nif hexo-config(\"custom_css.post_body_a.enable\")\n  .post-body \n    a:not(.btn){\n      color: convert(hexo-config(\"custom_css.post_body_a.normal_color\"));\n      border-bottom: none;\n      &:hover {\n        color: convert(hexo-config(\"custom_css.post_body_a.hover_color\"));\n        text-decoration: underline;\n      }\n    }\n```\n`a:not(.btn)`避免修改首页的\"阅读全文\"按钮\n\n2.在`./themes/next/_config.yml`里添加如下代码。\n\n```\ncustom_css:\n  post_body_a:\n    enable: true\n    normal_color: \"#3296FA\"\n    hover_color: \"#0593d3\"\n```","source":"_posts/2019-09-30-Hexo-Next-Link-Color.md","raw":"title: Hexo Next 修改超链接颜色\ndate: 2019-9-29 00:00:00\ncategories: misc\ntags: [next]\n---\n\nHexo Next自带的超链接颜色为灰色加下划线，看起来不是特别明显，所以将其修改为蓝色。\n\n<!-- more -->\n\n1.在`./themes/next/source/css/_custom/custom.styl`里添加如下代码。\n\n```\nif hexo-config(\"custom_css.post_body_a.enable\")\n  .post-body \n    a:not(.btn){\n      color: convert(hexo-config(\"custom_css.post_body_a.normal_color\"));\n      border-bottom: none;\n      &:hover {\n        color: convert(hexo-config(\"custom_css.post_body_a.hover_color\"));\n        text-decoration: underline;\n      }\n    }\n```\n`a:not(.btn)`避免修改首页的\"阅读全文\"按钮\n\n2.在`./themes/next/_config.yml`里添加如下代码。\n\n```\ncustom_css:\n  post_body_a:\n    enable: true\n    normal_color: \"#3296FA\"\n    hover_color: \"#0593d3\"\n```","slug":"2019-09-30-Hexo-Next-Link-Color","published":1,"updated":"2019-09-30T03:26:23.390Z","_id":"ck15trdjf0001x4ugg345bxoj","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Hexo Next自带的超链接颜色为灰色加下划线，看起来不是特别明显，所以将其修改为蓝色。</p>\n<a id=\"more\"></a>\n<p>1.在<code>./themes/next/source/css/_custom/custom.styl</code>里添加如下代码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if hexo-config(&quot;custom_css.post_body_a.enable&quot;)</span><br><span class=\"line\">  .post-body </span><br><span class=\"line\">    a:not(.btn)&#123;</span><br><span class=\"line\">      color: convert(hexo-config(&quot;custom_css.post_body_a.normal_color&quot;));</span><br><span class=\"line\">      border-bottom: none;</span><br><span class=\"line\">      &amp;:hover &#123;</span><br><span class=\"line\">        color: convert(hexo-config(&quot;custom_css.post_body_a.hover_color&quot;));</span><br><span class=\"line\">        text-decoration: underline;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><code>a:not(.btn)</code>避免修改首页的”阅读全文”按钮</p>\n<p>2.在<code>./themes/next/_config.yml</code>里添加如下代码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">custom_css:</span><br><span class=\"line\">  post_body_a:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    normal_color: &quot;#3296FA&quot;</span><br><span class=\"line\">    hover_color: &quot;#0593d3&quot;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>Hexo Next自带的超链接颜色为灰色加下划线，看起来不是特别明显，所以将其修改为蓝色。</p>","more":"<p>1.在<code>./themes/next/source/css/_custom/custom.styl</code>里添加如下代码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if hexo-config(&quot;custom_css.post_body_a.enable&quot;)</span><br><span class=\"line\">  .post-body </span><br><span class=\"line\">    a:not(.btn)&#123;</span><br><span class=\"line\">      color: convert(hexo-config(&quot;custom_css.post_body_a.normal_color&quot;));</span><br><span class=\"line\">      border-bottom: none;</span><br><span class=\"line\">      &amp;:hover &#123;</span><br><span class=\"line\">        color: convert(hexo-config(&quot;custom_css.post_body_a.hover_color&quot;));</span><br><span class=\"line\">        text-decoration: underline;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p><code>a:not(.btn)</code>避免修改首页的”阅读全文”按钮</p>\n<p>2.在<code>./themes/next/_config.yml</code>里添加如下代码。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">custom_css:</span><br><span class=\"line\">  post_body_a:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    normal_color: &quot;#3296FA&quot;</span><br><span class=\"line\">    hover_color: &quot;#0593d3&quot;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjpmbawda0001psugn93j2d8e","category_id":"cjpmbawdr0005psugk7mrpzw4","_id":"cjpmbawe2000epsug0andzuzf"},{"post_id":"cjpmbawdn0003psugu2hu992f","category_id":"cjpmbawdy000apsugz0217u7x","_id":"cjpmbawe7000jpsugsca15i14"},{"post_id":"cjpmbawdt0007psugexaj56f8","category_id":"cjpmbawdr0005psugk7mrpzw4","_id":"cjpmbawe9000mpsug0zgya7ba"},{"post_id":"cjpmbawdw0008psugh2b4z2jp","category_id":"cjpmbawdy000apsugz0217u7x","_id":"cjpmbawea000qpsug6lkqlpcr"},{"post_id":"cjpmbawe0000dpsugxoahlhlm","category_id":"cjpmbawe9000ppsugsr7jwea8","_id":"cjpmbawec000xpsug3q59zapt"},{"post_id":"cjpmbawem0010psugji8h2dzg","category_id":"cjpmbawdr0005psugk7mrpzw4","_id":"cjpmbawep0012psugl6vegeuq"},{"post_id":"cjpmbawfv0013psug3pcntzin","category_id":"cjpmbawdy000apsugz0217u7x","_id":"cjpmbawfz0015psugk5u71kt1"},{"post_id":"cjptgnrry00006gugoxtwpsp8","category_id":"cjpmbawdy000apsugz0217u7x","_id":"cjptgnrs100026gugomsf079f"},{"post_id":"cjpujki6u0000z0ugggfr5yxo","category_id":"cjpmbawdr0005psugk7mrpzw4","_id":"cjpujki7l0002z0ugd3voygip"},{"post_id":"ck15trdjf0001x4ugg345bxoj","category_id":"cjpmbawdr0005psugk7mrpzw4","_id":"ck15tsksz0007x4ugnkhqbge4"},{"post_id":"ck15si5rx0000kgugvynq3nrp","category_id":"ck15si5s60001kguguxzdx2o2","_id":"ck15usgee000gx4ugo49r3myt"}],"PostTag":[{"post_id":"cjpmbawda0001psugn93j2d8e","tag_id":"cjpmbawdt0006psugbs6tucgp","_id":"cjpmbawe0000cpsugab54mh4t"},{"post_id":"cjpmbawdn0003psugu2hu992f","tag_id":"cjpmbawdz000bpsug7p3arhcd","_id":"cjpmbawe6000hpsug98vxfc7p"},{"post_id":"cjpmbawdt0007psugexaj56f8","tag_id":"cjpmbawe3000gpsug5ofvxs0f","_id":"cjpmbawe9000opsug7qf7mcgu"},{"post_id":"cjpmbawdt0007psugexaj56f8","tag_id":"cjpmbawe8000kpsugkiyav6jh","_id":"cjpmbawea000rpsugaisurxg5"},{"post_id":"cjpmbawdw0008psugh2b4z2jp","tag_id":"cjpmbawe9000npsugsouiao9a","_id":"cjpmbawea000tpsugg5v128f4"},{"post_id":"cjpmbawe0000dpsugxoahlhlm","tag_id":"cjpmbaweb000vpsug9peitnmu","_id":"cjpmbawec000ypsuguycy7lxf"},{"post_id":"cjpmbawem0010psugji8h2dzg","tag_id":"cjpmbawdt0006psugbs6tucgp","_id":"cjpmbaweo0011psug4estvbpu"},{"post_id":"cjpmbawfv0013psug3pcntzin","tag_id":"cjpmbawfy0014psug3msfypth","_id":"cjpmbawg00016psugo9at4d57"},{"post_id":"cjptgnrry00006gugoxtwpsp8","tag_id":"cjpmbawea000spsugo83kkswk","_id":"cjptgnrs000016gugyfapdbmv"},{"post_id":"cjpujki6u0000z0ugggfr5yxo","tag_id":"cjpmbawdt0006psugbs6tucgp","_id":"cjpujki7j0001z0ug0n0xficu"},{"post_id":"ck15si5rx0000kgugvynq3nrp","tag_id":"ck15si5sb0002kgug7szy2l30","_id":"ck15si5se0005kgughzlov22x"},{"post_id":"ck15si5rx0000kgugvynq3nrp","tag_id":"ck15si5sc0003kgugkxtmgbwe","_id":"ck15si5sf0006kgugyqq7rdtu"},{"post_id":"ck15trdjf0001x4ugg345bxoj","tag_id":"ck15tsxzp0008x4ugkmp8cr30","_id":"ck15tsxzs000bx4ug1dxlu6ji"}],"Tag":[{"name":"github","_id":"cjpmbawdt0006psugbs6tucgp"},{"name":"string","_id":"cjpmbawdz000bpsug7p3arhcd"},{"name":"jekyll","_id":"cjpmbawe3000gpsug5ofvxs0f"},{"name":"hexo","_id":"cjpmbawe8000kpsugkiyav6jh"},{"name":"rx","_id":"cjpmbawe9000npsugsouiao9a"},{"name":"AndroidTV","_id":"cjpmbawea000spsugo83kkswk"},{"name":"git","_id":"cjpmbaweb000vpsug9peitnmu"},{"name":"audio","_id":"cjpmbawfy0014psug3msfypth"},{"name":"android","_id":"cjs5devgr0001f8ugyhxvo8kd"},{"name":"VidePlayer","_id":"cjs5dhi2q0004f8ug1araxf7d"},{"name":"VideoPlayer","_id":"cjs5dht5l0007f8ugw7nlcxrr"},{"name":"windows","_id":"ck15si5sb0002kgug7szy2l30"},{"name":"software","_id":"ck15si5sc0003kgugkxtmgbwe"},{"name":"next","_id":"ck15tsxzp0008x4ugkmp8cr30"},{"name":"linkcolor","_id":"ck15tsxzq0009x4ug39ad9yak"}]}}